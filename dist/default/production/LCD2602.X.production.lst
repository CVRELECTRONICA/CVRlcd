

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jul 04 09:07:41 2024

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1936
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	inittext,global,class=CODE,delta=2
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.10
    50                           ; Generated 31/07/2019 GMT
    51                           ; 
    52                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F1936 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0097                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009A                     	;# 
   126  009B                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  0110                     	;# 
   135  0111                     	;# 
   136  0112                     	;# 
   137  0113                     	;# 
   138  0114                     	;# 
   139  0115                     	;# 
   140  0116                     	;# 
   141  0117                     	;# 
   142  0118                     	;# 
   143  0119                     	;# 
   144  011A                     	;# 
   145  011B                     	;# 
   146  011D                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0191                     	;# 
   150  0191                     	;# 
   151  0192                     	;# 
   152  0193                     	;# 
   153  0193                     	;# 
   154  0193                     	;# 
   155  0194                     	;# 
   156  0195                     	;# 
   157  0196                     	;# 
   158  0199                     	;# 
   159  019A                     	;# 
   160  019B                     	;# 
   161  019B                     	;# 
   162  019B                     	;# 
   163  019B                     	;# 
   164  019C                     	;# 
   165  019C                     	;# 
   166  019D                     	;# 
   167  019E                     	;# 
   168  019F                     	;# 
   169  020D                     	;# 
   170  0210                     	;# 
   171  0211                     	;# 
   172  0212                     	;# 
   173  0213                     	;# 
   174  0214                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0216                     	;# 
   178  0217                     	;# 
   179  0291                     	;# 
   180  0291                     	;# 
   181  0292                     	;# 
   182  0293                     	;# 
   183  0294                     	;# 
   184  0295                     	;# 
   185  0295                     	;# 
   186  0296                     	;# 
   187  0298                     	;# 
   188  0298                     	;# 
   189  0299                     	;# 
   190  029A                     	;# 
   191  029B                     	;# 
   192  029C                     	;# 
   193  029C                     	;# 
   194  029D                     	;# 
   195  029E                     	;# 
   196  029F                     	;# 
   197  0311                     	;# 
   198  0311                     	;# 
   199  0312                     	;# 
   200  0313                     	;# 
   201  0314                     	;# 
   202  0315                     	;# 
   203  0315                     	;# 
   204  0316                     	;# 
   205  0318                     	;# 
   206  0318                     	;# 
   207  0319                     	;# 
   208  031A                     	;# 
   209  031C                     	;# 
   210  031C                     	;# 
   211  031D                     	;# 
   212  031E                     	;# 
   213  0394                     	;# 
   214  0395                     	;# 
   215  0396                     	;# 
   216  0415                     	;# 
   217  0416                     	;# 
   218  0417                     	;# 
   219  041C                     	;# 
   220  041D                     	;# 
   221  041E                     	;# 
   222  0791                     	;# 
   223  0792                     	;# 
   224  0793                     	;# 
   225  0794                     	;# 
   226  0795                     	;# 
   227  0798                     	;# 
   228  0799                     	;# 
   229  07A0                     	;# 
   230  07A1                     	;# 
   231  07A3                     	;# 
   232  07A4                     	;# 
   233  07A6                     	;# 
   234  07A7                     	;# 
   235  07A9                     	;# 
   236  07AA                     	;# 
   237  0FE4                     	;# 
   238  0FE5                     	;# 
   239  0FE6                     	;# 
   240  0FE7                     	;# 
   241  0FE8                     	;# 
   242  0FE9                     	;# 
   243  0FEA                     	;# 
   244  0FEB                     	;# 
   245  0FED                     	;# 
   246  0FEE                     	;# 
   247  0FEF                     	;# 
   248  0000                     	;# 
   249  0001                     	;# 
   250  0002                     	;# 
   251  0003                     	;# 
   252  0004                     	;# 
   253  0005                     	;# 
   254  0006                     	;# 
   255  0007                     	;# 
   256  0008                     	;# 
   257  0009                     	;# 
   258  000A                     	;# 
   259  000B                     	;# 
   260  000C                     	;# 
   261  000D                     	;# 
   262  000E                     	;# 
   263  0010                     	;# 
   264  0011                     	;# 
   265  0012                     	;# 
   266  0013                     	;# 
   267  0015                     	;# 
   268  0016                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001C                     	;# 
   276  001E                     	;# 
   277  001F                     	;# 
   278  008C                     	;# 
   279  008D                     	;# 
   280  008E                     	;# 
   281  0090                     	;# 
   282  0091                     	;# 
   283  0092                     	;# 
   284  0093                     	;# 
   285  0095                     	;# 
   286  0096                     	;# 
   287  0097                     	;# 
   288  0098                     	;# 
   289  0099                     	;# 
   290  009A                     	;# 
   291  009B                     	;# 
   292  009B                     	;# 
   293  009C                     	;# 
   294  009D                     	;# 
   295  009E                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  0110                     	;# 
   300  0111                     	;# 
   301  0112                     	;# 
   302  0113                     	;# 
   303  0114                     	;# 
   304  0115                     	;# 
   305  0116                     	;# 
   306  0117                     	;# 
   307  0118                     	;# 
   308  0119                     	;# 
   309  011A                     	;# 
   310  011B                     	;# 
   311  011D                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314  0191                     	;# 
   315  0191                     	;# 
   316  0192                     	;# 
   317  0193                     	;# 
   318  0193                     	;# 
   319  0193                     	;# 
   320  0194                     	;# 
   321  0195                     	;# 
   322  0196                     	;# 
   323  0199                     	;# 
   324  019A                     	;# 
   325  019B                     	;# 
   326  019B                     	;# 
   327  019B                     	;# 
   328  019B                     	;# 
   329  019C                     	;# 
   330  019C                     	;# 
   331  019D                     	;# 
   332  019E                     	;# 
   333  019F                     	;# 
   334  020D                     	;# 
   335  0210                     	;# 
   336  0211                     	;# 
   337  0212                     	;# 
   338  0213                     	;# 
   339  0214                     	;# 
   340  0215                     	;# 
   341  0215                     	;# 
   342  0216                     	;# 
   343  0217                     	;# 
   344  0291                     	;# 
   345  0291                     	;# 
   346  0292                     	;# 
   347  0293                     	;# 
   348  0294                     	;# 
   349  0295                     	;# 
   350  0295                     	;# 
   351  0296                     	;# 
   352  0298                     	;# 
   353  0298                     	;# 
   354  0299                     	;# 
   355  029A                     	;# 
   356  029B                     	;# 
   357  029C                     	;# 
   358  029C                     	;# 
   359  029D                     	;# 
   360  029E                     	;# 
   361  029F                     	;# 
   362  0311                     	;# 
   363  0311                     	;# 
   364  0312                     	;# 
   365  0313                     	;# 
   366  0314                     	;# 
   367  0315                     	;# 
   368  0315                     	;# 
   369  0316                     	;# 
   370  0318                     	;# 
   371  0318                     	;# 
   372  0319                     	;# 
   373  031A                     	;# 
   374  031C                     	;# 
   375  031C                     	;# 
   376  031D                     	;# 
   377  031E                     	;# 
   378  0394                     	;# 
   379  0395                     	;# 
   380  0396                     	;# 
   381  0415                     	;# 
   382  0416                     	;# 
   383  0417                     	;# 
   384  041C                     	;# 
   385  041D                     	;# 
   386  041E                     	;# 
   387  0791                     	;# 
   388  0792                     	;# 
   389  0793                     	;# 
   390  0794                     	;# 
   391  0795                     	;# 
   392  0798                     	;# 
   393  0799                     	;# 
   394  07A0                     	;# 
   395  07A1                     	;# 
   396  07A3                     	;# 
   397  07A4                     	;# 
   398  07A6                     	;# 
   399  07A7                     	;# 
   400  07A9                     	;# 
   401  07AA                     	;# 
   402  0FE4                     	;# 
   403  0FE5                     	;# 
   404  0FE6                     	;# 
   405  0FE7                     	;# 
   406  0FE8                     	;# 
   407  0FE9                     	;# 
   408  0FEA                     	;# 
   409  0FEB                     	;# 
   410  0FED                     	;# 
   411  0FEE                     	;# 
   412  0FEF                     	;# 
   413  0000                     	;# 
   414  0001                     	;# 
   415  0002                     	;# 
   416  0003                     	;# 
   417  0004                     	;# 
   418  0005                     	;# 
   419  0006                     	;# 
   420  0007                     	;# 
   421  0008                     	;# 
   422  0009                     	;# 
   423  000A                     	;# 
   424  000B                     	;# 
   425  000C                     	;# 
   426  000D                     	;# 
   427  000E                     	;# 
   428  0010                     	;# 
   429  0011                     	;# 
   430  0012                     	;# 
   431  0013                     	;# 
   432  0015                     	;# 
   433  0016                     	;# 
   434  0016                     	;# 
   435  0017                     	;# 
   436  0018                     	;# 
   437  0019                     	;# 
   438  001A                     	;# 
   439  001B                     	;# 
   440  001C                     	;# 
   441  001E                     	;# 
   442  001F                     	;# 
   443  008C                     	;# 
   444  008D                     	;# 
   445  008E                     	;# 
   446  0090                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0093                     	;# 
   450  0095                     	;# 
   451  0096                     	;# 
   452  0097                     	;# 
   453  0098                     	;# 
   454  0099                     	;# 
   455  009A                     	;# 
   456  009B                     	;# 
   457  009B                     	;# 
   458  009C                     	;# 
   459  009D                     	;# 
   460  009E                     	;# 
   461  010C                     	;# 
   462  010D                     	;# 
   463  010E                     	;# 
   464  0110                     	;# 
   465  0111                     	;# 
   466  0112                     	;# 
   467  0113                     	;# 
   468  0114                     	;# 
   469  0115                     	;# 
   470  0116                     	;# 
   471  0117                     	;# 
   472  0118                     	;# 
   473  0119                     	;# 
   474  011A                     	;# 
   475  011B                     	;# 
   476  011D                     	;# 
   477  018C                     	;# 
   478  018D                     	;# 
   479  0191                     	;# 
   480  0191                     	;# 
   481  0192                     	;# 
   482  0193                     	;# 
   483  0193                     	;# 
   484  0193                     	;# 
   485  0194                     	;# 
   486  0195                     	;# 
   487  0196                     	;# 
   488  0199                     	;# 
   489  019A                     	;# 
   490  019B                     	;# 
   491  019B                     	;# 
   492  019B                     	;# 
   493  019B                     	;# 
   494  019C                     	;# 
   495  019C                     	;# 
   496  019D                     	;# 
   497  019E                     	;# 
   498  019F                     	;# 
   499  020D                     	;# 
   500  0210                     	;# 
   501  0211                     	;# 
   502  0212                     	;# 
   503  0213                     	;# 
   504  0214                     	;# 
   505  0215                     	;# 
   506  0215                     	;# 
   507  0216                     	;# 
   508  0217                     	;# 
   509  0291                     	;# 
   510  0291                     	;# 
   511  0292                     	;# 
   512  0293                     	;# 
   513  0294                     	;# 
   514  0295                     	;# 
   515  0295                     	;# 
   516  0296                     	;# 
   517  0298                     	;# 
   518  0298                     	;# 
   519  0299                     	;# 
   520  029A                     	;# 
   521  029B                     	;# 
   522  029C                     	;# 
   523  029C                     	;# 
   524  029D                     	;# 
   525  029E                     	;# 
   526  029F                     	;# 
   527  0311                     	;# 
   528  0311                     	;# 
   529  0312                     	;# 
   530  0313                     	;# 
   531  0314                     	;# 
   532  0315                     	;# 
   533  0315                     	;# 
   534  0316                     	;# 
   535  0318                     	;# 
   536  0318                     	;# 
   537  0319                     	;# 
   538  031A                     	;# 
   539  031C                     	;# 
   540  031C                     	;# 
   541  031D                     	;# 
   542  031E                     	;# 
   543  0394                     	;# 
   544  0395                     	;# 
   545  0396                     	;# 
   546  0415                     	;# 
   547  0416                     	;# 
   548  0417                     	;# 
   549  041C                     	;# 
   550  041D                     	;# 
   551  041E                     	;# 
   552  0791                     	;# 
   553  0792                     	;# 
   554  0793                     	;# 
   555  0794                     	;# 
   556  0795                     	;# 
   557  0798                     	;# 
   558  0799                     	;# 
   559  07A0                     	;# 
   560  07A1                     	;# 
   561  07A3                     	;# 
   562  07A4                     	;# 
   563  07A6                     	;# 
   564  07A7                     	;# 
   565  07A9                     	;# 
   566  07AA                     	;# 
   567  0FE4                     	;# 
   568  0FE5                     	;# 
   569  0FE6                     	;# 
   570  0FE7                     	;# 
   571  0FE8                     	;# 
   572  0FE9                     	;# 
   573  0FEA                     	;# 
   574  0FEB                     	;# 
   575  0FED                     	;# 
   576  0FEE                     	;# 
   577  0FEF                     	;# 
   578                           
   579                           	psect	idataBANK1
   580  0F34                     __pidataBANK1:	
   581                           
   582                           ;initializer for _bluetoothChar
   583  0F34  3406               	retlw	6
   584  0F35  3405               	retlw	5
   585  0F36  3415               	retlw	21
   586  0F37  340E               	retlw	14
   587  0F38  3406               	retlw	6
   588  0F39  340D               	retlw	13
   589  0F3A  3415               	retlw	21
   590  0F3B  3406               	retlw	6
   591  008D                     _TRISBbits	set	141
   592  008D                     _TRISB	set	141
   593  010D                     _LATBbits	set	269
   594                           
   595                           	psect	stringtext1
   596  0800                     __pstringtext1:	
   597  0800                     STR_6:	
   598  0800  3450               	retlw	80	;'P'
   599  0801  3475               	retlw	117	;'u'
   600  0802  3465               	retlw	101	;'e'
   601  0803  3464               	retlw	100	;'d'
   602  0804  3465               	retlw	101	;'e'
   603  0805  3473               	retlw	115	;'s'
   604  0806  3420               	retlw	32	;' '
   605  0807  346D               	retlw	109	;'m'
   606  0808  346F               	retlw	111	;'o'
   607  0809  3473               	retlw	115	;'s'
   608  080A  3474               	retlw	116	;'t'
   609  080B  3472               	retlw	114	;'r'
   610  080C  3461               	retlw	97	;'a'
   611  080D  3472               	retlw	114	;'r'
   612  080E  3420               	retlw	32	;' '
   613  080F  3475               	retlw	117	;'u'
   614  0810  346E               	retlw	110	;'n'
   615  0811  3420               	retlw	32	;' '
   616  0812  3474               	retlw	116	;'t'
   617  0813  3465               	retlw	101	;'e'
   618  0814  3478               	retlw	120	;'x'
   619  0815  3474               	retlw	116	;'t'
   620  0816  346F               	retlw	111	;'o'
   621  0817  3420               	retlw	32	;' '
   622  0818  346C               	retlw	108	;'l'
   623  0819  3461               	retlw	97	;'a'
   624  081A  3472               	retlw	114	;'r'
   625  081B  3467               	retlw	103	;'g'
   626  081C  346F               	retlw	111	;'o'
   627  081D  3420               	retlw	32	;' '
   628  081E  3479               	retlw	121	;'y'
   629  081F  3420               	retlw	32	;' '
   630  0820  3468               	retlw	104	;'h'
   631  0821  3461               	retlw	97	;'a'
   632  0822  3463               	retlw	99	;'c'
   633  0823  3465               	retlw	101	;'e'
   634  0824  3472               	retlw	114	;'r'
   635  0825  3420               	retlw	32	;' '
   636  0826  3473               	retlw	115	;'s'
   637  0827  3463               	retlw	99	;'c'
   638  0828  3472               	retlw	114	;'r'
   639  0829  346F               	retlw	111	;'o'
   640  082A  346C               	retlw	108	;'l'
   641  082B  346C               	retlw	108	;'l'
   642  082C  3400               	retlw	0
   643                           
   644                           	psect	stringtext2
   645  1000                     __pstringtext2:	
   646  1000                     STR_7:	
   647  1000  344D               	retlw	77	;'M'
   648  1001  3461               	retlw	97	;'a'
   649  1002  3473               	retlw	115	;'s'
   650  1003  3420               	retlw	32	;' '
   651  1004  3470               	retlw	112	;'p'
   652  1005  3472               	retlw	114	;'r'
   653  1006  346F               	retlw	111	;'o'
   654  1007  3464               	retlw	100	;'d'
   655  1008  3475               	retlw	117	;'u'
   656  1009  3463               	retlw	99	;'c'
   657  100A  3474               	retlw	116	;'t'
   658  100B  346F               	retlw	111	;'o'
   659  100C  3473               	retlw	115	;'s'
   660  100D  3420               	retlw	32	;' '
   661  100E  3465               	retlw	101	;'e'
   662  100F  346E               	retlw	110	;'n'
   663  1010  3420               	retlw	32	;' '
   664  1011  3457               	retlw	87	;'W'
   665  1012  3457               	retlw	87	;'W'
   666  1013  3457               	retlw	87	;'W'
   667  1014  342E               	retlw	46	;'.'
   668  1015  3443               	retlw	67	;'C'
   669  1016  3456               	retlw	86	;'V'
   670  1017  3452               	retlw	82	;'R'
   671  1018  3445               	retlw	69	;'E'
   672  1019  344C               	retlw	76	;'L'
   673  101A  3445               	retlw	69	;'E'
   674  101B  3443               	retlw	67	;'C'
   675  101C  3454               	retlw	84	;'T'
   676  101D  3452               	retlw	82	;'R'
   677  101E  344F               	retlw	79	;'O'
   678  101F  344E               	retlw	78	;'N'
   679  1020  3449               	retlw	73	;'I'
   680  1021  3443               	retlw	67	;'C'
   681  1022  3441               	retlw	65	;'A'
   682  1023  342E               	retlw	46	;'.'
   683  1024  3443               	retlw	67	;'C'
   684  1025  344F               	retlw	79	;'O'
   685  1026  344D               	retlw	77	;'M'
   686  1027  3400               	retlw	0
   687                           
   688                           	psect	stringtext3
   689  1028                     __pstringtext3:	
   690  1028                     STR_9:	
   691  1028  3470               	retlw	112	;'p'
   692  1029  3465               	retlw	101	;'e'
   693  102A  3472               	retlw	114	;'r'
   694  102B  3473               	retlw	115	;'s'
   695  102C  346F               	retlw	111	;'o'
   696  102D  346E               	retlw	110	;'n'
   697  102E  3461               	retlw	97	;'a'
   698  102F  346C               	retlw	108	;'l'
   699  1030  3469               	retlw	105	;'i'
   700  1031  347A               	retlw	122	;'z'
   701  1032  3461               	retlw	97	;'a'
   702  1033  3464               	retlw	100	;'d'
   703  1034  346F               	retlw	111	;'o'
   704  1035  343A               	retlw	58	;':'
   705  1036  3420               	retlw	32	;' '
   706  1037  3400               	retlw	0
   707                           
   708                           	psect	stringtext4
   709  1038                     __pstringtext4:	
   710  1038                     STR_3:	
   711  1038  3443               	retlw	67	;'C'
   712  1039  3456               	retlw	86	;'V'
   713  103A  3452               	retlw	82	;'R'
   714  103B  3420               	retlw	32	;' '
   715  103C  3445               	retlw	69	;'E'
   716  103D  344C               	retlw	76	;'L'
   717  103E  3445               	retlw	69	;'E'
   718  103F  3443               	retlw	67	;'C'
   719  1040  3454               	retlw	84	;'T'
   720  1041  3452               	retlw	82	;'R'
   721  1042  344F               	retlw	79	;'O'
   722  1043  344E               	retlw	78	;'N'
   723  1044  3449               	retlw	73	;'I'
   724  1045  3443               	retlw	67	;'C'
   725  1046  3441               	retlw	65	;'A'
   726  1047  3400               	retlw	0
   727                           
   728                           	psect	stringtext5
   729  1048                     __pstringtext5:	
   730  1048                     STR_2:	
   731  1048  3454               	retlw	84	;'T'
   732  1049  3445               	retlw	69	;'E'
   733  104A  3453               	retlw	83	;'S'
   734  104B  3454               	retlw	84	;'T'
   735  104C  3420               	retlw	32	;' '
   736  104D  344C               	retlw	76	;'L'
   737  104E  3449               	retlw	73	;'I'
   738  104F  3442               	retlw	66	;'B'
   739  1050  3452               	retlw	82	;'R'
   740  1051  3445               	retlw	69	;'E'
   741  1052  3452               	retlw	82	;'R'
   742  1053  3449               	retlw	73	;'I'
   743  1054  3441               	retlw	65	;'A'
   744  1055  3400               	retlw	0
   745                           
   746                           	psect	stringtext6
   747  1056                     __pstringtext6:	
   748  1056                     STR_1:	
   749  1056  3448               	retlw	72	;'H'
   750  1057  346F               	retlw	111	;'o'
   751  1058  346C               	retlw	108	;'l'
   752  1059  3461               	retlw	97	;'a'
   753  105A  342C               	retlw	44	;','
   754  105B  3420               	retlw	32	;' '
   755  105C  344D               	retlw	77	;'M'
   756  105D  3475               	retlw	117	;'u'
   757  105E  346E               	retlw	110	;'n'
   758  105F  3464               	retlw	100	;'d'
   759  1060  346F               	retlw	111	;'o'
   760  1061  3421               	retlw	33	;'!'
   761  1062  3400               	retlw	0
   762                           
   763                           	psect	stringtext7
   764  1063                     __pstringtext7:	
   765  1063                     STR_5:	
   766  1063  3443               	retlw	67	;'C'
   767  1064  346F               	retlw	111	;'o'
   768  1065  3475               	retlw	117	;'u'
   769  1066  346E               	retlw	110	;'n'
   770  1067  3474               	retlw	116	;'t'
   771  1068  3465               	retlw	101	;'e'
   772  1069  346F               	retlw	111	;'o'
   773  106A  343A               	retlw	58	;':'
   774  106B  3420               	retlw	32	;' '
   775  106C  3425               	retlw	37	;'%'
   776  106D  3464               	retlw	100	;'d'
   777  106E  3400               	retlw	0
   778                           
   779                           	psect	stringtext8
   780  106F                     __pstringtext8:	
   781  106F                     STR_4:	
   782  106F  3441               	retlw	65	;'A'
   783  1070  3420               	retlw	32	;' '
   784  1071  3463               	retlw	99	;'c'
   785  1072  346F               	retlw	111	;'o'
   786  1073  346E               	retlw	110	;'n'
   787  1074  3474               	retlw	116	;'t'
   788  1075  3461               	retlw	97	;'a'
   789  1076  3472               	retlw	114	;'r'
   790  1077  3421               	retlw	33	;'!'
   791  1078  3400               	retlw	0
   792                           
   793                           	psect	stringtext9
   794  1079                     __pstringtext9:	
   795  1079                     STR_8:	
   796  1079  3443               	retlw	67	;'C'
   797  107A  3461               	retlw	97	;'a'
   798  107B  3472               	retlw	114	;'r'
   799  107C  3461               	retlw	97	;'a'
   800  107D  3463               	retlw	99	;'c'
   801  107E  3474               	retlw	116	;'t'
   802  107F  3465               	retlw	101	;'e'
   803  1080  3472               	retlw	114	;'r'
   804  1081  3400               	retlw	0
   805                           
   806                           	psect	stringtext10
   807  0000                     __pstringtext10:	
   808                           
   809                           ; #config settings
   810  0000                     
   811                           	psect	cinit
   812  07DD                     start_initialization:	
   813  07DD                     __initialization:	
   814                           
   815                           ; Initialize objects allocated to BANK1
   816  07DD  3034               	movlw	low __pidataBANK1
   817  07DE  0084               	movwf	4
   818  07DF  308F               	movlw	(high __pidataBANK1)| (0+128)
   819  07E0  0085               	movwf	5
   820  07E1  30D3               	movlw	low __pdataBANK1
   821  07E2  0086               	movwf	6
   822  07E3  3000               	movlw	high __pdataBANK1
   823  07E4  0087               	movwf	7
   824  07E5  3008               	movlw	8
   825  07E6  318F  272E  3187   	fcall	init_ram
   826                           
   827                           ; Clear objects allocated to BANK0
   828  07E9  01EC               	clrf	__pbssBANK0& (0+127)
   829  07EA  01ED               	clrf	(__pbssBANK0+1)& (0+127)
   830  07EB  01EE               	clrf	(__pbssBANK0+2)& (0+127)
   831  07EC  01EF               	clrf	(__pbssBANK0+3)& (0+127)
   832                           
   833                           ; Clear objects allocated to BANK1
   834  07ED  30A0               	movlw	low __pbssBANK1
   835  07EE  0084               	movwf	4
   836  07EF  3000               	movlw	high __pbssBANK1
   837  07F0  0085               	movwf	5
   838  07F1  3024               	movlw	36
   839  07F2  318F  2728  3187   	fcall	clear_ram0
   840                           
   841                           ; Clear objects allocated to BANK2
   842  07F5  3020               	movlw	low __pbssBANK2
   843  07F6  0084               	movwf	4
   844  07F7  3001               	movlw	high __pbssBANK2
   845  07F8  0085               	movwf	5
   846  07F9  3032               	movlw	50
   847  07FA  318F  2728  3187   	fcall	clear_ram0
   848  07FD                     end_of_initialization:	
   849                           ;End of C runtime variable initialization code
   850                           
   851  07FD                     __end_of__initialization:	
   852  07FD  0020               	movlb	0
   853  07FE  3186  2E6B         	ljmp	_main	;jump to C main() function
   854                           
   855                           	psect	bssBANK0
   856  006C                     __pbssBANK0:	
   857  006C                     _prec:	
   858  006C                     	ds	2
   859  006E                     _flags:	
   860  006E                     	ds	2
   861                           
   862                           	psect	bssBANK1
   863  00A0                     __pbssBANK1:	
   864  00A0                     _nout:	
   865  00A0                     	ds	2
   866  00A2                     _width:	
   867  00A2                     	ds	2
   868  00A4                     _dbuf:	
   869  00A4                     	ds	32
   870                           
   871                           	psect	dataBANK1
   872  00D3                     __pdataBANK1:	
   873  00D3                     _bluetoothChar:	
   874  00D3                     	ds	8
   875                           
   876                           	psect	bssBANK2
   877  0120                     __pbssBANK2:	
   878  0120                     _b:	
   879  0120                     	ds	50
   880                           
   881                           	psect	inittext
   882  0F2E                     init_ram:	
   883  0F2E  00FE               	movwf	btemp
   884  0F2F                     initloop:	
   885  0F2F  0012               	moviw fsr0++
   886  0F30  001E               	movwi fsr1++
   887  0F31  0BFE               	decfsz	btemp,f
   888  0F32  2F2F               	goto	initloop
   889  0F33  3400               	retlw	0
   890                           
   891                           	psect	clrtext
   892  0F28                     clear_ram0:	
   893                           ;	Called with FSR0 containing the base address, and
   894                           ;	WREG with the size to clear
   895                           
   896  0F28  0064               	clrwdt	;clear the watchdog before getting into this loop
   897  0F29                     clrloop0:	
   898  0F29  0180               	clrf	0	;clear RAM location pointed to by FSR
   899  0F2A  3101               	addfsr 0,1
   900  0F2B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   901  0F2C  2F29               	goto	clrloop0	;have we reached the end yet?
   902  0F2D  3400               	retlw	0	;all done for this memory range, return
   903                           
   904                           	psect	cstackBANK1
   905  00C4                     __pcstackBANK1:	
   906  00C4                     	ds	2
   907  00C6                     sprintf@ap:	
   908                           
   909                           ; 1 bytes @ 0x2
   910  00C6                     	ds	1
   911  00C7                     sprintf@s:	
   912                           
   913                           ; 1 bytes @ 0x3
   914  00C7                     	ds	1
   915  00C8                     sprintf@f:	
   916                           
   917                           ; 5 bytes @ 0x4
   918  00C8                     	ds	5
   919  00CD                     main@i_87:	
   920                           
   921                           ; 2 bytes @ 0x9
   922  00CD                     	ds	2
   923  00CF                     main@i_89:	
   924                           
   925                           ; 2 bytes @ 0xB
   926  00CF                     	ds	2
   927  00D1                     main@i:	
   928                           
   929                           ; 2 bytes @ 0xD
   930  00D1                     	ds	2
   931                           
   932                           	psect	cstackCOMMON
   933  0070                     __pcstackCOMMON:	
   934  0070                     ?_LCDInit:	
   935  0070                     ?_LCDClear:	
   936                           ; 1 bytes @ 0x0
   937                           
   938  0070                     ?_LCDScrollLeft:	
   939                           ; 1 bytes @ 0x0
   940                           
   941  0070                     ?_LCDScrollRight:	
   942                           ; 1 bytes @ 0x0
   943                           
   944  0070                     ?_LCDWriteChar:	
   945                           ; 1 bytes @ 0x0
   946                           
   947  0070                     ??_LCDWriteChar:	
   948                           ; 1 bytes @ 0x0
   949                           
   950  0070                     ?_LCDCommand:	
   951                           ; 1 bytes @ 0x0
   952                           
   953  0070                     ??_LCDCommand:	
   954                           ; 1 bytes @ 0x0
   955                           
   956  0070                     ?_putch:	
   957                           ; 1 bytes @ 0x0
   958                           
   959  0070                     ??_putch:	
   960                           ; 1 bytes @ 0x0
   961                           
   962  0070                     ?_main:	
   963                           ; 1 bytes @ 0x0
   964                           
   965  0070                     ??___aodiv:	
   966                           ; 1 bytes @ 0x0
   967                           
   968  0070                     ??___aomod:	
   969                           ; 1 bytes @ 0x0
   970                           
   971  0070                     ?_fputc:	
   972                           ; 1 bytes @ 0x0
   973                           
   974  0070                     ?_strlen:	
   975                           ; 2 bytes @ 0x0
   976                           
   977  0070                     putch@c:	
   978                           ; 2 bytes @ 0x0
   979                           
   980  0070                     fputc@c:	
   981                           ; 1 bytes @ 0x0
   982                           
   983                           
   984                           ; 2 bytes @ 0x0
   985  0070                     	ds	1
   986  0071                     ___aodiv@counter:	
   987  0071                     ___aomod@counter:	
   988                           ; 1 bytes @ 0x1
   989                           
   990                           
   991                           ; 1 bytes @ 0x1
   992  0071                     	ds	1
   993  0072                     ??_strlen:	
   994  0072                     LCDCommand@cmd:	
   995                           ; 1 bytes @ 0x2
   996                           
   997  0072                     LCDWriteChar@data:	
   998                           ; 1 bytes @ 0x2
   999                           
  1000  0072                     ___aodiv@sign:	
  1001                           ; 1 bytes @ 0x2
  1002                           
  1003  0072                     ___aomod@sign:	
  1004                           ; 1 bytes @ 0x2
  1005                           
  1006  0072                     fputc@fp:	
  1007                           ; 1 bytes @ 0x2
  1008                           
  1009                           
  1010                           ; 1 bytes @ 0x2
  1011  0072                     	ds	1
  1012  0073                     ??_LCDInit:	
  1013  0073                     ?_LCDCreateChar:	
  1014                           ; 1 bytes @ 0x3
  1015                           
  1016  0073                     ?_LCDSetCursor:	
  1017                           ; 1 bytes @ 0x3
  1018                           
  1019  0073                     ?_LCDWriteString:	
  1020                           ; 1 bytes @ 0x3
  1021                           
  1022  0073                     ??_LCDClear:	
  1023                           ; 1 bytes @ 0x3
  1024                           
  1025  0073                     ??_LCDScrollLeft:	
  1026                           ; 1 bytes @ 0x3
  1027                           
  1028  0073                     ??_LCDScrollRight:	
  1029                           ; 1 bytes @ 0x3
  1030                           
  1031  0073                     ??_fputc:	
  1032                           ; 1 bytes @ 0x3
  1033                           
  1034  0073                     ?_abs:	
  1035                           ; 1 bytes @ 0x3
  1036                           
  1037  0073                     LCDSetCursor@column:	
  1038                           ; 2 bytes @ 0x3
  1039                           
  1040  0073                     LCDCreateChar@charmap:	
  1041                           ; 1 bytes @ 0x3
  1042                           
  1043  0073                     strlen@a:	
  1044                           ; 1 bytes @ 0x3
  1045                           
  1046  0073                     LCDWriteString@str:	
  1047                           ; 1 bytes @ 0x3
  1048                           
  1049  0073                     abs@a:	
  1050                           ; 2 bytes @ 0x3
  1051                           
  1052  0073                     ___aodiv@quotient:	
  1053                           ; 2 bytes @ 0x3
  1054                           
  1055                           
  1056                           ; 8 bytes @ 0x3
  1057  0073                     	ds	1
  1058  0074                     ??_LCDCreateChar:	
  1059  0074                     ??_LCDSetCursor:	
  1060                           ; 1 bytes @ 0x4
  1061                           
  1062  0074                     strlen@s:	
  1063                           ; 1 bytes @ 0x4
  1064                           
  1065                           
  1066                           ; 1 bytes @ 0x4
  1067  0074                     	ds	1
  1068  0075                     ??_LCDWriteString:	
  1069  0075                     ??_abs:	
  1070                           ; 1 bytes @ 0x5
  1071                           
  1072  0075                     LCDSetCursor@address:	
  1073                           ; 1 bytes @ 0x5
  1074                           
  1075  0075                     LCDCreateChar@location:	
  1076                           ; 1 bytes @ 0x5
  1077                           
  1078                           
  1079                           ; 1 bytes @ 0x5
  1080  0075                     	ds	1
  1081  0076                     LCDSetCursor@row:	
  1082  0076                     LCDCreateChar@i:	
  1083                           ; 1 bytes @ 0x6
  1084                           
  1085                           
  1086                           ; 2 bytes @ 0x6
  1087  0076                     	ds	2
  1088  0078                     ?_fputs:	
  1089  0078                     fputs@fp:	
  1090                           ; 2 bytes @ 0x8
  1091                           
  1092                           
  1093                           ; 1 bytes @ 0x8
  1094  0078                     	ds	1
  1095  0079                     ??_fputs:	
  1096                           
  1097                           ; 1 bytes @ 0x9
  1098  0079                     	ds	3
  1099  007C                     ??_pad:	
  1100                           
  1101                           ; 1 bytes @ 0xC
  1102  007C                     	ds	1
  1103  007D                     ??_sprintf:	
  1104                           
  1105                           ; 1 bytes @ 0xD
  1106  007D                     	ds	1
  1107                           
  1108                           	psect	cstackBANK0
  1109  0020                     __pcstackBANK0:	
  1110  0020                     ?___aodiv:	
  1111  0020                     ?___aomod:	
  1112                           ; 8 bytes @ 0x0
  1113                           
  1114  0020                     fputs@c:	
  1115                           ; 8 bytes @ 0x0
  1116                           
  1117  0020                     ___aodiv@divisor:	
  1118                           ; 1 bytes @ 0x0
  1119                           
  1120  0020                     ___aomod@divisor:	
  1121                           ; 8 bytes @ 0x0
  1122                           
  1123                           
  1124                           ; 8 bytes @ 0x0
  1125  0020                     	ds	1
  1126  0021                     fputs@i:	
  1127                           
  1128                           ; 2 bytes @ 0x1
  1129  0021                     	ds	2
  1130  0023                     fputs@s:	
  1131                           
  1132                           ; 1 bytes @ 0x3
  1133  0023                     	ds	1
  1134  0024                     ?_pad:	
  1135  0024                     pad@buf:	
  1136                           ; 2 bytes @ 0x4
  1137                           
  1138                           
  1139                           ; 1 bytes @ 0x4
  1140  0024                     	ds	1
  1141  0025                     pad@p:	
  1142                           
  1143                           ; 2 bytes @ 0x5
  1144  0025                     	ds	2
  1145  0027                     pad@i:	
  1146                           
  1147                           ; 2 bytes @ 0x7
  1148  0027                     	ds	1
  1149  0028                     ___aodiv@dividend:	
  1150  0028                     ___aomod@dividend:	
  1151                           ; 8 bytes @ 0x8
  1152                           
  1153                           
  1154                           ; 8 bytes @ 0x8
  1155  0028                     	ds	1
  1156  0029                     pad@w:	
  1157                           
  1158                           ; 2 bytes @ 0x9
  1159  0029                     	ds	2
  1160  002B                     pad@fp:	
  1161                           
  1162                           ; 1 bytes @ 0xB
  1163  002B                     	ds	5
  1164  0030                     ?_dtoa:	
  1165  0030                     dtoa@d:	
  1166                           ; 2 bytes @ 0x10
  1167                           
  1168                           
  1169                           ; 8 bytes @ 0x10
  1170  0030                     	ds	8
  1171  0038                     ??_dtoa:	
  1172                           
  1173                           ; 1 bytes @ 0x18
  1174  0038                     	ds	3
  1175  003B                     _dtoa$408:	
  1176                           
  1177                           ; 2 bytes @ 0x1B
  1178  003B                     	ds	2
  1179  003D                     dtoa@fp:	
  1180                           
  1181                           ; 1 bytes @ 0x1D
  1182  003D                     	ds	1
  1183  003E                     dtoa@p:	
  1184                           
  1185                           ; 2 bytes @ 0x1E
  1186  003E                     	ds	2
  1187  0040                     dtoa@w:	
  1188                           
  1189                           ; 2 bytes @ 0x20
  1190  0040                     	ds	2
  1191  0042                     dtoa@s:	
  1192                           
  1193                           ; 2 bytes @ 0x22
  1194  0042                     	ds	2
  1195  0044                     dtoa@n:	
  1196                           
  1197                           ; 8 bytes @ 0x24
  1198  0044                     	ds	8
  1199  004C                     dtoa@i:	
  1200                           
  1201                           ; 2 bytes @ 0x2C
  1202  004C                     	ds	2
  1203  004E                     ?_vfpfcnvrt:	
  1204  004E                     vfpfcnvrt@fmt:	
  1205                           ; 2 bytes @ 0x2E
  1206                           
  1207                           
  1208                           ; 1 bytes @ 0x2E
  1209  004E                     	ds	1
  1210  004F                     vfpfcnvrt@ap:	
  1211                           
  1212                           ; 1 bytes @ 0x2F
  1213  004F                     	ds	1
  1214  0050                     ??_vfpfcnvrt:	
  1215                           
  1216                           ; 1 bytes @ 0x30
  1217  0050                     	ds	5
  1218  0055                     vfpfcnvrt@ll:	
  1219                           
  1220                           ; 8 bytes @ 0x35
  1221  0055                     	ds	8
  1222  005D                     vfpfcnvrt@fp:	
  1223                           
  1224                           ; 1 bytes @ 0x3D
  1225  005D                     	ds	1
  1226  005E                     ?_vfprintf:	
  1227  005E                     vfprintf@fmt:	
  1228                           ; 2 bytes @ 0x3E
  1229                           
  1230                           
  1231                           ; 2 bytes @ 0x3E
  1232  005E                     	ds	2
  1233  0060                     vfprintf@ap:	
  1234                           
  1235                           ; 1 bytes @ 0x40
  1236  0060                     	ds	1
  1237  0061                     ??_vfprintf:	
  1238                           
  1239                           ; 1 bytes @ 0x41
  1240  0061                     	ds	2
  1241  0063                     vfprintf@fp:	
  1242                           
  1243                           ; 1 bytes @ 0x43
  1244  0063                     	ds	1
  1245  0064                     vfprintf@cfmt:	
  1246                           
  1247                           ; 2 bytes @ 0x44
  1248  0064                     	ds	2
  1249  0066                     ?_sprintf:	
  1250  0066                     sprintf@fmt:	
  1251                           ; 2 bytes @ 0x46
  1252                           
  1253                           
  1254                           ; 2 bytes @ 0x46
  1255  0066                     	ds	4
  1256  006A                     ??_main:	
  1257                           
  1258                           ; 1 bytes @ 0x4A
  1259  006A                     	ds	2
  1260                           
  1261                           	psect	maintext
  1262  066B                     __pmaintext:	
  1263 ;;
  1264 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1265 ;;
  1266 ;; *************** function _main *****************
  1267 ;; Defined at:
  1268 ;;		line 44 in file "LCD1602.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;		None
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;  i               2   11[BANK1 ] int 
  1273 ;;  i               2    9[BANK1 ] int 
  1274 ;;  i               2   13[BANK1 ] int 
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  1    wreg      void 
  1277 ;; Registers used:
  1278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1279 ;; Tracked objects:
  1280 ;;		On entry : B1F/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1284 ;;      Params:         0       0       0       0       0       0       0       0
  1285 ;;      Locals:         0       0       6       0       0       0       0       0
  1286 ;;      Temps:          0       2       0       0       0       0       0       0
  1287 ;;      Totals:         0       2       6       0       0       0       0       0
  1288 ;;Total ram usage:        8 bytes
  1289 ;; Hardware stack levels required when called:    8
  1290 ;; This function calls:
  1291 ;;		_LCDClear
  1292 ;;		_LCDCreateChar
  1293 ;;		_LCDInit
  1294 ;;		_LCDScrollLeft
  1295 ;;		_LCDScrollRight
  1296 ;;		_LCDSetCursor
  1297 ;;		_LCDWriteChar
  1298 ;;		_LCDWriteString
  1299 ;;		_sprintf
  1300 ;; This function is called by:
  1301 ;;		Startup code after reset
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305                           
  1306                           ;psect for function _main
  1307  066B                     _main:	
  1308  066B                     l1626:	
  1309                           ;incstack = 0
  1310                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1311                           
  1312                           
  1313                           ;LCD1602.c: 46:     TRISB = 0;
  1314  066B  0021               	movlb	1	; select bank1
  1315  066C  018D               	clrf	13	;volatile
  1316  066D                     l1628:	
  1317                           
  1318                           ;LCD1602.c: 47:     LCDInit();
  1319  066D  318F  27D6  3186   	fcall	_LCDInit
  1320  0670                     l1630:	
  1321                           
  1322                           ;LCD1602.c: 48:     LCDCreateChar(0, bluetoothChar);
  1323  0670  30D3               	movlw	(low (_bluetoothChar| 0))& (0+255)
  1324  0671  0020               	movlb	0	; select bank0
  1325  0672  00EA               	movwf	??_main
  1326  0673  086A               	movf	??_main,w
  1327  0674  00F3               	movwf	LCDCreateChar@charmap
  1328  0675  3000               	movlw	0
  1329  0676  3180  205B  3186   	fcall	_LCDCreateChar
  1330  0679                     l1632:	
  1331                           
  1332                           ;LCD1602.c: 54:         LCDSetCursor(1, 3);
  1333  0679  3003               	movlw	3
  1334  067A  0020               	movlb	0	; select bank0
  1335  067B  00EA               	movwf	??_main
  1336  067C  086A               	movf	??_main,w
  1337  067D  00F3               	movwf	LCDSetCursor@column
  1338  067E  3001               	movlw	1
  1339  067F  318F  2792  3186   	fcall	_LCDSetCursor
  1340  0682                     l1634:	
  1341                           
  1342                           ;LCD1602.c: 55:         LCDWriteString("Hola, Mundo!");
  1343  0682  3056               	movlw	low (STR_1| (0+32768))
  1344  0683  00F3               	movwf	LCDWriteString@str
  1345  0684  3090               	movlw	high (STR_1| (0+32768))
  1346  0685  00F4               	movwf	LCDWriteString@str+1
  1347  0686  318F  2748  3186   	fcall	_LCDWriteString
  1348  0689                     l1636:	
  1349                           
  1350                           ;LCD1602.c: 56:         _delay((unsigned long)((2000)*(20000000/4000.0)));
  1351  0689  3033               	movlw	51
  1352  068A  0020               	movlb	0	; select bank0
  1353  068B  00EB               	movwf	??_main+1
  1354  068C  30BB               	movlw	187
  1355  068D  00EA               	movwf	??_main
  1356  068E  30DF               	movlw	223
  1357  068F                     u1477:	
  1358  068F  0B89               	decfsz	9,f
  1359  0690  2E8F               	goto	u1477
  1360  0691  0BEA               	decfsz	??_main,f
  1361  0692  2E8F               	goto	u1477
  1362  0693  0BEB               	decfsz	??_main+1,f
  1363  0694  2E8F               	goto	u1477
  1364  0695  3200               	nop2
  1365  0696                     l1638:	
  1366                           
  1367                           ;LCD1602.c: 58:         LCDClear();
  1368  0696  318F  273C  3186   	fcall	_LCDClear
  1369  0699                     l1640:	
  1370                           
  1371                           ;LCD1602.c: 60:         LCDSetCursor(1, 1);
  1372  0699  01F3               	clrf	LCDSetCursor@column
  1373  069A  0AF3               	incf	LCDSetCursor@column,f
  1374  069B  3001               	movlw	1
  1375  069C  318F  2792  3186   	fcall	_LCDSetCursor
  1376  069F                     l1642:	
  1377                           
  1378                           ;LCD1602.c: 61:         LCDWriteString("TEST LIBRERIA");
  1379  069F  3048               	movlw	low (STR_2| (0+32768))
  1380  06A0  00F3               	movwf	LCDWriteString@str
  1381  06A1  3090               	movlw	high (STR_2| (0+32768))
  1382  06A2  00F4               	movwf	LCDWriteString@str+1
  1383  06A3  318F  2748  3186   	fcall	_LCDWriteString
  1384  06A6                     l1644:	
  1385                           
  1386                           ;LCD1602.c: 62:         LCDSetCursor(2, 1);
  1387  06A6  01F3               	clrf	LCDSetCursor@column
  1388  06A7  0AF3               	incf	LCDSetCursor@column,f
  1389  06A8  3002               	movlw	2
  1390  06A9  318F  2792  3186   	fcall	_LCDSetCursor
  1391  06AC                     l1646:	
  1392                           
  1393                           ;LCD1602.c: 63:         LCDWriteString("CVR ELECTRONICA");
  1394  06AC  3038               	movlw	low (STR_3| (0+32768))
  1395  06AD  00F3               	movwf	LCDWriteString@str
  1396  06AE  3090               	movlw	high (STR_3| (0+32768))
  1397  06AF  00F4               	movwf	LCDWriteString@str+1
  1398  06B0  318F  2748  3186   	fcall	_LCDWriteString
  1399  06B3                     l1648:	
  1400                           
  1401                           ;LCD1602.c: 64:         _delay((unsigned long)((2000)*(20000000/4000.0)));
  1402  06B3  3033               	movlw	51
  1403  06B4  0020               	movlb	0	; select bank0
  1404  06B5  00EB               	movwf	??_main+1
  1405  06B6  30BB               	movlw	187
  1406  06B7  00EA               	movwf	??_main
  1407  06B8  30DF               	movlw	223
  1408  06B9                     u1487:	
  1409  06B9  0B89               	decfsz	9,f
  1410  06BA  2EB9               	goto	u1487
  1411  06BB  0BEA               	decfsz	??_main,f
  1412  06BC  2EB9               	goto	u1487
  1413  06BD  0BEB               	decfsz	??_main+1,f
  1414  06BE  2EB9               	goto	u1487
  1415  06BF  3200               	nop2
  1416  06C0                     l1650:	
  1417                           
  1418                           ;LCD1602.c: 66:         LCDClear();
  1419  06C0  318F  273C  3186   	fcall	_LCDClear
  1420  06C3                     l1652:	
  1421                           
  1422                           ;LCD1602.c: 68:         LCDSetCursor(1, 1);
  1423  06C3  01F3               	clrf	LCDSetCursor@column
  1424  06C4  0AF3               	incf	LCDSetCursor@column,f
  1425  06C5  3001               	movlw	1
  1426  06C6  318F  2792  3186   	fcall	_LCDSetCursor
  1427  06C9                     l1654:	
  1428                           
  1429                           ;LCD1602.c: 69:         LCDWriteString("A contar!");
  1430  06C9  306F               	movlw	low (STR_4| (0+32768))
  1431  06CA  00F3               	movwf	LCDWriteString@str
  1432  06CB  3090               	movlw	high (STR_4| (0+32768))
  1433  06CC  00F4               	movwf	LCDWriteString@str+1
  1434  06CD  318F  2748  3186   	fcall	_LCDWriteString
  1435  06D0                     l1656:	
  1436                           
  1437                           ;LCD1602.c: 70:         for(int i=0; i< 200; i++){
  1438  06D0  0021               	movlb	1	; select bank1
  1439  06D1  01D1               	clrf	main@i^(0+128)
  1440  06D2  01D2               	clrf	(main@i+1)^(0+128)
  1441  06D3                     l1662:	
  1442                           
  1443                           ;LCD1602.c: 71:             LCDSetCursor(2, 1);
  1444  06D3  01F3               	clrf	LCDSetCursor@column
  1445  06D4  0AF3               	incf	LCDSetCursor@column,f
  1446  06D5  3002               	movlw	2
  1447  06D6  318F  2792  3186   	fcall	_LCDSetCursor
  1448  06D9                     l1664:	
  1449                           
  1450                           ;LCD1602.c: 72:             sprintf(b,"Counteo: %d",i);
  1451  06D9  3063               	movlw	low (STR_5| (0+32768))
  1452  06DA  0020               	movlb	0	; select bank0
  1453  06DB  00E6               	movwf	sprintf@fmt
  1454  06DC  3090               	movlw	high (STR_5| (0+32768))
  1455  06DD  00E7               	movwf	sprintf@fmt+1
  1456  06DE  0021               	movlb	1	; select bank1
  1457  06DF  0852               	movf	(main@i+1)^(0+128),w
  1458  06E0  0020               	movlb	0	; select bank0
  1459  06E1  00E9               	movwf	?_sprintf+3
  1460  06E2  0021               	movlb	1	; select bank1
  1461  06E3  0851               	movf	main@i^(0+128),w
  1462  06E4  0020               	movlb	0	; select bank0
  1463  06E5  00E8               	movwf	?_sprintf+2
  1464  06E6  3020               	movlw	(low (_b| (0+256)))& (0+255)
  1465  06E7  3180  2005  3186   	fcall	_sprintf
  1466  06EA                     l1666:	
  1467                           
  1468                           ;LCD1602.c: 73:             LCDWriteString(b);
  1469  06EA  3020               	movlw	low _b
  1470  06EB  00F3               	movwf	LCDWriteString@str
  1471  06EC  3001               	movlw	high _b
  1472  06ED  00F4               	movwf	LCDWriteString@str+1
  1473  06EE  318F  2748  3186   	fcall	_LCDWriteString
  1474  06F1                     l1668:	
  1475                           
  1476                           ;LCD1602.c: 74:             _delay((unsigned long)((10)*(20000000/4000.0)));
  1477  06F1  3041               	movlw	65
  1478  06F2  0020               	movlb	0	; select bank0
  1479  06F3  00EA               	movwf	??_main
  1480  06F4  30EE               	movlw	238
  1481  06F5                     u1497:	
  1482  06F5  0B89               	decfsz	9,f
  1483  06F6  2EF5               	goto	u1497
  1484  06F7  0BEA               	decfsz	??_main,f
  1485  06F8  2EF5               	goto	u1497
  1486  06F9  0000               	nop
  1487  06FA                     l1670:	
  1488                           
  1489                           ;LCD1602.c: 75:         }
  1490  06FA  3001               	movlw	1
  1491  06FB  0021               	movlb	1	; select bank1
  1492  06FC  07D1               	addwf	main@i^(0+128),f
  1493  06FD  3000               	movlw	0
  1494  06FE  3DD2               	addwfc	(main@i+1)^(0+128),f
  1495  06FF                     l1672:	
  1496  06FF  0852               	movf	(main@i+1)^(0+128),w
  1497  0700  3A80               	xorlw	128
  1498  0701  0020               	movlb	0	; select bank0
  1499  0702  00EA               	movwf	??_main
  1500  0703  3080               	movlw	128
  1501  0704  026A               	subwf	??_main,w
  1502  0705  1D03               	skipz
  1503  0706  2F0A               	goto	u1445
  1504  0707  30C8               	movlw	200
  1505  0708  0021               	movlb	1	; select bank1
  1506  0709  0251               	subwf	main@i^(0+128),w
  1507  070A                     u1445:	
  1508  070A  1C03               	skipc
  1509  070B  2F0D               	goto	u1441
  1510  070C  2F0E               	goto	u1440
  1511  070D                     u1441:	
  1512  070D  2ED3               	goto	l1662
  1513  070E                     u1440:	
  1514  070E                     l1674:	
  1515                           
  1516                           ;LCD1602.c: 77:         LCDClear();
  1517  070E  318F  273C  3186   	fcall	_LCDClear
  1518  0711                     l1676:	
  1519                           
  1520                           ;LCD1602.c: 78:         _delay((unsigned long)((200)*(20000000/4000.0)));
  1521  0711  3006               	movlw	6
  1522  0712  0020               	movlb	0	; select bank0
  1523  0713  00EB               	movwf	??_main+1
  1524  0714  3013               	movlw	19
  1525  0715  00EA               	movwf	??_main
  1526  0716  30AD               	movlw	173
  1527  0717                     u1507:	
  1528  0717  0B89               	decfsz	9,f
  1529  0718  2F17               	goto	u1507
  1530  0719  0BEA               	decfsz	??_main,f
  1531  071A  2F17               	goto	u1507
  1532  071B  0BEB               	decfsz	??_main+1,f
  1533  071C  2F17               	goto	u1507
  1534  071D  3200               	nop2
  1535  071E                     l1678:	
  1536                           
  1537                           ;LCD1602.c: 79:         LCDSetCursor(1, 1);
  1538  071E  01F3               	clrf	LCDSetCursor@column
  1539  071F  0AF3               	incf	LCDSetCursor@column,f
  1540  0720  3001               	movlw	1
  1541  0721  318F  2792  3186   	fcall	_LCDSetCursor
  1542  0724                     l1680:	
  1543                           
  1544                           ;LCD1602.c: 80:         LCDWriteString("Puedes mostrar un texto largo y hacer scroll");
  1545  0724  3000               	movlw	low (STR_6| (0+32768))
  1546  0725  00F3               	movwf	LCDWriteString@str
  1547  0726  3088               	movlw	high (STR_6| (0+32768))
  1548  0727  00F4               	movwf	LCDWriteString@str+1
  1549  0728  318F  2748  3186   	fcall	_LCDWriteString
  1550  072B                     l1682:	
  1551                           
  1552                           ;LCD1602.c: 81:         for(int i=0; i< 40; i++){
  1553  072B  0021               	movlb	1	; select bank1
  1554  072C  01CD               	clrf	main@i_87^(0+128)
  1555  072D  01CE               	clrf	(main@i_87+1)^(0+128)
  1556  072E                     l1688:	
  1557                           
  1558                           ;LCD1602.c: 82:         LCDScrollLeft();
  1559  072E  318F  271E  3186   	fcall	_LCDScrollLeft
  1560  0731                     l1690:	
  1561                           
  1562                           ;LCD1602.c: 83:         _delay((unsigned long)((300)*(20000000/4000.0)));
  1563  0731  3008               	movlw	8
  1564  0732  0020               	movlb	0	; select bank0
  1565  0733  00EB               	movwf	??_main+1
  1566  0734  309D               	movlw	157
  1567  0735  00EA               	movwf	??_main
  1568  0736  3005               	movlw	5
  1569  0737                     u1517:	
  1570  0737  0B89               	decfsz	9,f
  1571  0738  2F37               	goto	u1517
  1572  0739  0BEA               	decfsz	??_main,f
  1573  073A  2F37               	goto	u1517
  1574  073B  0BEB               	decfsz	??_main+1,f
  1575  073C  2F37               	goto	u1517
  1576  073D  3200               	nop2
  1577  073E                     l1692:	
  1578                           
  1579                           ;LCD1602.c: 84:         }
  1580  073E  3001               	movlw	1
  1581  073F  0021               	movlb	1	; select bank1
  1582  0740  07CD               	addwf	main@i_87^(0+128),f
  1583  0741  3000               	movlw	0
  1584  0742  3DCE               	addwfc	(main@i_87+1)^(0+128),f
  1585  0743                     l1694:	
  1586  0743  084E               	movf	(main@i_87+1)^(0+128),w
  1587  0744  3A80               	xorlw	128
  1588  0745  0020               	movlb	0	; select bank0
  1589  0746  00EA               	movwf	??_main
  1590  0747  3080               	movlw	128
  1591  0748  026A               	subwf	??_main,w
  1592  0749  1D03               	skipz
  1593  074A  2F4E               	goto	u1455
  1594  074B  3028               	movlw	40
  1595  074C  0021               	movlb	1	; select bank1
  1596  074D  024D               	subwf	main@i_87^(0+128),w
  1597  074E                     u1455:	
  1598  074E  1C03               	skipc
  1599  074F  2F51               	goto	u1451
  1600  0750  2F52               	goto	u1450
  1601  0751                     u1451:	
  1602  0751  2F2E               	goto	l1688
  1603  0752                     u1450:	
  1604  0752                     l1696:	
  1605                           
  1606                           ;LCD1602.c: 86:         LCDClear();
  1607  0752  318F  273C  3186   	fcall	_LCDClear
  1608  0755                     l1698:	
  1609                           
  1610                           ;LCD1602.c: 87:         _delay((unsigned long)((200)*(20000000/4000.0)));
  1611  0755  3006               	movlw	6
  1612  0756  0020               	movlb	0	; select bank0
  1613  0757  00EB               	movwf	??_main+1
  1614  0758  3013               	movlw	19
  1615  0759  00EA               	movwf	??_main
  1616  075A  30AD               	movlw	173
  1617  075B                     u1527:	
  1618  075B  0B89               	decfsz	9,f
  1619  075C  2F5B               	goto	u1527
  1620  075D  0BEA               	decfsz	??_main,f
  1621  075E  2F5B               	goto	u1527
  1622  075F  0BEB               	decfsz	??_main+1,f
  1623  0760  2F5B               	goto	u1527
  1624  0761  3200               	nop2
  1625  0762                     l1700:	
  1626                           
  1627                           ;LCD1602.c: 89:         LCDSetCursor(1, 1);
  1628  0762  01F3               	clrf	LCDSetCursor@column
  1629  0763  0AF3               	incf	LCDSetCursor@column,f
  1630  0764  3001               	movlw	1
  1631  0765  318F  2792  3186   	fcall	_LCDSetCursor
  1632  0768                     l1702:	
  1633                           
  1634                           ;LCD1602.c: 90:         LCDWriteString("Mas productos en WWW.CVRELECTRONICA.COM");
  1635  0768  3000               	movlw	low (STR_7| (0+32768))
  1636  0769  00F3               	movwf	LCDWriteString@str
  1637  076A  3090               	movlw	high (STR_7| (0+32768))
  1638  076B  00F4               	movwf	LCDWriteString@str+1
  1639  076C  318F  2748  3186   	fcall	_LCDWriteString
  1640  076F                     l1704:	
  1641                           
  1642                           ;LCD1602.c: 91:         for(int i=0; i< 30; i++){
  1643  076F  0021               	movlb	1	; select bank1
  1644  0770  01CF               	clrf	main@i_89^(0+128)
  1645  0771  01D0               	clrf	(main@i_89+1)^(0+128)
  1646  0772                     l1710:	
  1647                           
  1648                           ;LCD1602.c: 92:         LCDScrollRight();
  1649  0772  318F  2723  3186   	fcall	_LCDScrollRight
  1650  0775                     l1712:	
  1651                           
  1652                           ;LCD1602.c: 93:         _delay((unsigned long)((300)*(20000000/4000.0)));
  1653  0775  3008               	movlw	8
  1654  0776  0020               	movlb	0	; select bank0
  1655  0777  00EB               	movwf	??_main+1
  1656  0778  309D               	movlw	157
  1657  0779  00EA               	movwf	??_main
  1658  077A  3005               	movlw	5
  1659  077B                     u1537:	
  1660  077B  0B89               	decfsz	9,f
  1661  077C  2F7B               	goto	u1537
  1662  077D  0BEA               	decfsz	??_main,f
  1663  077E  2F7B               	goto	u1537
  1664  077F  0BEB               	decfsz	??_main+1,f
  1665  0780  2F7B               	goto	u1537
  1666  0781  3200               	nop2
  1667  0782                     l1714:	
  1668                           
  1669                           ;LCD1602.c: 94:         }
  1670  0782  3001               	movlw	1
  1671  0783  0021               	movlb	1	; select bank1
  1672  0784  07CF               	addwf	main@i_89^(0+128),f
  1673  0785  3000               	movlw	0
  1674  0786  3DD0               	addwfc	(main@i_89+1)^(0+128),f
  1675  0787                     l1716:	
  1676  0787  0850               	movf	(main@i_89+1)^(0+128),w
  1677  0788  3A80               	xorlw	128
  1678  0789  0020               	movlb	0	; select bank0
  1679  078A  00EA               	movwf	??_main
  1680  078B  3080               	movlw	128
  1681  078C  026A               	subwf	??_main,w
  1682  078D  1D03               	skipz
  1683  078E  2F92               	goto	u1465
  1684  078F  301E               	movlw	30
  1685  0790  0021               	movlb	1	; select bank1
  1686  0791  024F               	subwf	main@i_89^(0+128),w
  1687  0792                     u1465:	
  1688  0792  1C03               	skipc
  1689  0793  2F95               	goto	u1461
  1690  0794  2F96               	goto	u1460
  1691  0795                     u1461:	
  1692  0795  2F72               	goto	l1710
  1693  0796                     u1460:	
  1694  0796                     l1718:	
  1695                           
  1696                           ;LCD1602.c: 96:         LCDClear();
  1697  0796  318F  273C  3186   	fcall	_LCDClear
  1698  0799                     l1720:	
  1699                           
  1700                           ;LCD1602.c: 97:         _delay((unsigned long)((200)*(20000000/4000.0)));
  1701  0799  3006               	movlw	6
  1702  079A  0020               	movlb	0	; select bank0
  1703  079B  00EB               	movwf	??_main+1
  1704  079C  3013               	movlw	19
  1705  079D  00EA               	movwf	??_main
  1706  079E  30AD               	movlw	173
  1707  079F                     u1547:	
  1708  079F  0B89               	decfsz	9,f
  1709  07A0  2F9F               	goto	u1547
  1710  07A1  0BEA               	decfsz	??_main,f
  1711  07A2  2F9F               	goto	u1547
  1712  07A3  0BEB               	decfsz	??_main+1,f
  1713  07A4  2F9F               	goto	u1547
  1714  07A5  3200               	nop2
  1715  07A6                     l1722:	
  1716                           
  1717                           ;LCD1602.c: 99:         LCDSetCursor(1, 1);
  1718  07A6  01F3               	clrf	LCDSetCursor@column
  1719  07A7  0AF3               	incf	LCDSetCursor@column,f
  1720  07A8  3001               	movlw	1
  1721  07A9  318F  2792  3186   	fcall	_LCDSetCursor
  1722  07AC                     l1724:	
  1723                           
  1724                           ;LCD1602.c: 100:         LCDWriteString("Caracter");
  1725  07AC  3079               	movlw	low (STR_8| (0+32768))
  1726  07AD  00F3               	movwf	LCDWriteString@str
  1727  07AE  3090               	movlw	high (STR_8| (0+32768))
  1728  07AF  00F4               	movwf	LCDWriteString@str+1
  1729  07B0  318F  2748  3186   	fcall	_LCDWriteString
  1730  07B3                     l1726:	
  1731                           
  1732                           ;LCD1602.c: 101:         LCDSetCursor(2, 1);
  1733  07B3  01F3               	clrf	LCDSetCursor@column
  1734  07B4  0AF3               	incf	LCDSetCursor@column,f
  1735  07B5  3002               	movlw	2
  1736  07B6  318F  2792  3186   	fcall	_LCDSetCursor
  1737  07B9                     l1728:	
  1738                           
  1739                           ;LCD1602.c: 102:         LCDWriteString("personalizado: ");
  1740  07B9  3028               	movlw	low (STR_9| (0+32768))
  1741  07BA  00F3               	movwf	LCDWriteString@str
  1742  07BB  3090               	movlw	high (STR_9| (0+32768))
  1743  07BC  00F4               	movwf	LCDWriteString@str+1
  1744  07BD  318F  2748  3186   	fcall	_LCDWriteString
  1745  07C0                     l1730:	
  1746                           
  1747                           ;LCD1602.c: 103:         LCDWriteChar(0);
  1748  07C0  3000               	movlw	0
  1749  07C1  3181  21BB  3186   	fcall	_LCDWriteChar
  1750                           
  1751                           ;LCD1602.c: 105:         _delay((unsigned long)((3000)*(20000000/4000.0)));
  1752  07C4  304D               	movlw	77
  1753  07C5  0020               	movlb	0	; select bank0
  1754  07C6  00EB               	movwf	??_main+1
  1755  07C7  3019               	movlw	25
  1756  07C8  00EA               	movwf	??_main
  1757  07C9  304F               	movlw	79
  1758  07CA                     u1557:	
  1759  07CA  0B89               	decfsz	9,f
  1760  07CB  2FCA               	goto	u1557
  1761  07CC  0BEA               	decfsz	??_main,f
  1762  07CD  2FCA               	goto	u1557
  1763  07CE  0BEB               	decfsz	??_main+1,f
  1764  07CF  2FCA               	goto	u1557
  1765  07D0  3200               	nop2
  1766  07D1                     l1732:	
  1767                           
  1768                           ;LCD1602.c: 106:         LCDClear();
  1769  07D1  318F  273C  3186   	fcall	_LCDClear
  1770  07D4                     l1734:	
  1771                           
  1772                           ;LCD1602.c: 107:         LCDClear();
  1773  07D4  318F  273C  3186   	fcall	_LCDClear
  1774  07D7                     l1736:	
  1775                           
  1776                           ;LCD1602.c: 108:         LCDClear();
  1777  07D7  318F  273C  3186   	fcall	_LCDClear
  1778  07DA  2E79               	goto	l1632
  1779  07DB  3180  2802         	ljmp	start
  1780  07DD                     __end_of_main:	
  1781                           
  1782                           	psect	text1
  1783  0005                     __ptext1:	
  1784 ;; *************** function _sprintf *****************
  1785 ;; Defined at:
  1786 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;  s               1    wreg     PTR unsigned char 
  1789 ;;		 -> b(50), 
  1790 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  1791 ;;		 -> STR_5(12), 
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;  s               1    3[BANK1 ] PTR unsigned char 
  1794 ;;		 -> b(50), 
  1795 ;;  f               5    4[BANK1 ] struct _IO_FILE
  1796 ;;  ret             2    0        int 
  1797 ;;  ap              1    2[BANK1 ] PTR void [1]
  1798 ;;		 -> ?_sprintf(2), 
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  2   70[BANK0 ] int 
  1801 ;; Registers used:
  1802 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1808 ;;      Params:         0       4       0       0       0       0       0       0
  1809 ;;      Locals:         0       0       9       0       0       0       0       0
  1810 ;;      Temps:          1       0       0       0       0       0       0       0
  1811 ;;      Totals:         1       4       9       0       0       0       0       0
  1812 ;;Total ram usage:       14 bytes
  1813 ;; Hardware stack levels used:    1
  1814 ;; Hardware stack levels required when called:    7
  1815 ;; This function calls:
  1816 ;;		_vfprintf
  1817 ;; This function is called by:
  1818 ;;		_main
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           
  1823                           ;psect for function _sprintf
  1824  0005                     _sprintf:	
  1825                           
  1826                           ;incstack = 0
  1827                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1828                           ;sprintf@s stored from wreg
  1829  0005  0021               	movlb	1	; select bank1
  1830  0006  00C7               	movwf	sprintf@s^(0+128)
  1831  0007                     l1610:	
  1832  0007  3068               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1833  0008  00FD               	movwf	??_sprintf
  1834  0009  087D               	movf	??_sprintf,w
  1835  000A  00C6               	movwf	sprintf@ap^(0+128)
  1836  000B  0847               	movf	sprintf@s^(0+128),w
  1837  000C  00FD               	movwf	??_sprintf
  1838  000D  087D               	movf	??_sprintf,w
  1839  000E  00C8               	movwf	sprintf@f^(0+128)
  1840  000F                     l1612:	
  1841  000F  01C9               	clrf	(sprintf@f^(0+128)+1)
  1842  0010  01CA               	clrf	((sprintf@f+1)^(0+128)+1)
  1843  0011                     l1614:	
  1844  0011  01CB               	clrf	(sprintf@f^(0+128)+3)
  1845  0012  01CC               	clrf	((sprintf@f+1)^(0+128)+3)
  1846  0013                     l1616:	
  1847  0013  0020               	movlb	0	; select bank0
  1848  0014  0867               	movf	sprintf@fmt+1,w
  1849  0015  00DF               	movwf	vfprintf@fmt+1
  1850  0016  0866               	movf	sprintf@fmt,w
  1851  0017  00DE               	movwf	vfprintf@fmt
  1852  0018  30C6               	movlw	(low (sprintf@ap| 0))& (0+255)
  1853  0019  00FD               	movwf	??_sprintf
  1854  001A  087D               	movf	??_sprintf,w
  1855  001B  00E0               	movwf	vfprintf@ap
  1856  001C  30C8               	movlw	(low (sprintf@f| 0))& (0+255)
  1857  001D  3180  202A  3180   	fcall	_vfprintf
  1858  0020                     l1618:	
  1859  0020  0021               	movlb	1	; select bank1
  1860  0021  0849               	movf	(sprintf@f^(0+128)+1),w
  1861  0022  0747               	addwf	sprintf@s^(0+128),w
  1862  0023  00FD               	movwf	??_sprintf
  1863  0024  087D               	movf	??_sprintf,w
  1864  0025  0086               	movwf	6
  1865  0026  3001               	movlw	1	; select bank2/3
  1866  0027  0087               	movwf	7
  1867  0028  0181               	clrf	1
  1868  0029                     l789:	
  1869  0029  0008               	return
  1870  002A                     __end_of_sprintf:	
  1871                           
  1872                           	psect	text2
  1873  002A                     __ptext2:	
  1874 ;; *************** function _vfprintf *****************
  1875 ;; Defined at:
  1876 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;  fp              1    wreg     PTR struct _IO_FILE
  1879 ;;		 -> sprintf@f(5), 
  1880 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  1881 ;;		 -> STR_5(12), 
  1882 ;;  ap              1   64[BANK0 ] PTR PTR void 
  1883 ;;		 -> sprintf@ap(1), 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  1886 ;;		 -> sprintf@f(5), 
  1887 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  1888 ;;		 -> STR_5(12), 
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  2   62[BANK0 ] int 
  1891 ;; Registers used:
  1892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1898 ;;      Params:         0       3       0       0       0       0       0       0
  1899 ;;      Locals:         0       3       0       0       0       0       0       0
  1900 ;;      Temps:          0       2       0       0       0       0       0       0
  1901 ;;      Totals:         0       8       0       0       0       0       0       0
  1902 ;;Total ram usage:        8 bytes
  1903 ;; Hardware stack levels used:    1
  1904 ;; Hardware stack levels required when called:    6
  1905 ;; This function calls:
  1906 ;;		_vfpfcnvrt
  1907 ;; This function is called by:
  1908 ;;		_sprintf
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           
  1913                           ;psect for function _vfprintf
  1914  002A                     _vfprintf:	
  1915                           
  1916                           ;incstack = 0
  1917                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1918                           ;vfprintf@fp stored from wreg
  1919  002A  0020               	movlb	0	; select bank0
  1920  002B  00E3               	movwf	vfprintf@fp
  1921  002C                     l1542:	
  1922                           
  1923                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1924  002C  085F               	movf	vfprintf@fmt+1,w
  1925  002D  00E5               	movwf	vfprintf@cfmt+1
  1926  002E  085E               	movf	vfprintf@fmt,w
  1927  002F  00E4               	movwf	vfprintf@cfmt
  1928  0030                     l1544:	
  1929                           
  1930                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1931  0030  0021               	movlb	1	; select bank1
  1932  0031  01A0               	clrf	_nout^(0+128)
  1933  0032  01A1               	clrf	(_nout+1)^(0+128)
  1934                           
  1935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1936  0033  2848               	goto	l1548
  1937  0034                     l1546:	
  1938                           
  1939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1940  0034  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1941  0035  00E1               	movwf	??_vfprintf
  1942  0036  0861               	movf	??_vfprintf,w
  1943  0037  00CE               	movwf	vfpfcnvrt@fmt
  1944  0038  0860               	movf	vfprintf@ap,w
  1945  0039  00E2               	movwf	??_vfprintf+1
  1946  003A  0862               	movf	??_vfprintf+1,w
  1947  003B  00CF               	movwf	vfpfcnvrt@ap
  1948  003C  0863               	movf	vfprintf@fp,w
  1949  003D  3182  2242  3180   	fcall	_vfpfcnvrt
  1950  0040  0020               	movlb	0	; select bank0
  1951  0041  084E               	movf	?_vfpfcnvrt,w
  1952  0042  0021               	movlb	1	; select bank1
  1953  0043  07A0               	addwf	_nout^(0+128),f
  1954  0044  0020               	movlb	0	; select bank0
  1955  0045  084F               	movf	?_vfpfcnvrt+1,w
  1956  0046  0021               	movlb	1	; select bank1
  1957  0047  3DA1               	addwfc	(_nout+1)^(0+128),f
  1958  0048                     l1548:	
  1959                           
  1960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1961  0048  0020               	movlb	0	; select bank0
  1962  0049  0864               	movf	vfprintf@cfmt,w
  1963  004A  0084               	movwf	4
  1964  004B  0865               	movf	vfprintf@cfmt+1,w
  1965  004C  0085               	movwf	5
  1966  004D  0012               	moviw fsr0++
  1967  004E  1D03               	btfss	3,2
  1968  004F  2851               	goto	u1381
  1969  0050  2852               	goto	u1380
  1970  0051                     u1381:	
  1971  0051  2834               	goto	l1546
  1972  0052                     u1380:	
  1973  0052                     l1550:	
  1974                           
  1975                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1976  0052  0021               	movlb	1	; select bank1
  1977  0053  0821               	movf	(_nout+1)^(0+128),w
  1978  0054  0020               	movlb	0	; select bank0
  1979  0055  00DF               	movwf	?_vfprintf+1
  1980  0056  0021               	movlb	1	; select bank1
  1981  0057  0820               	movf	_nout^(0+128),w
  1982  0058  0020               	movlb	0	; select bank0
  1983  0059  00DE               	movwf	?_vfprintf
  1984  005A                     l301:	
  1985  005A  0008               	return
  1986  005B                     __end_of_vfprintf:	
  1987                           
  1988                           	psect	text3
  1989  0242                     __ptext3:	
  1990 ;; *************** function _vfpfcnvrt *****************
  1991 ;; Defined at:
  1992 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  fp              1    wreg     PTR struct _IO_FILE
  1995 ;;		 -> sprintf@f(5), 
  1996 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  1997 ;;		 -> vfprintf@cfmt(2), 
  1998 ;;  ap              1   47[BANK0 ] PTR PTR void 
  1999 ;;		 -> sprintf@ap(1), 
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  2002 ;;		 -> sprintf@f(5), 
  2003 ;;  ll              8   53[BANK0 ] long long 
  2004 ;;  llu             8    0        unsigned long long 
  2005 ;;  f               4    0        unsigned long long 
  2006 ;;  ct              3    0        unsigned char [3]
  2007 ;;  vp              2    0        PTR void 
  2008 ;;  i               2    0        int 
  2009 ;;  done            2    0        int 
  2010 ;;  cp              2    0        PTR unsigned char 
  2011 ;;  c               1    0        unsigned char 
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  2   46[BANK0 ] int 
  2014 ;; Registers used:
  2015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2021 ;;      Params:         0       2       0       0       0       0       0       0
  2022 ;;      Locals:         0       9       0       0       0       0       0       0
  2023 ;;      Temps:          0       5       0       0       0       0       0       0
  2024 ;;      Totals:         0      16       0       0       0       0       0       0
  2025 ;;Total ram usage:       16 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; Hardware stack levels required when called:    5
  2028 ;; This function calls:
  2029 ;;		_dtoa
  2030 ;;		_fputc
  2031 ;; This function is called by:
  2032 ;;		_vfprintf
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           
  2037                           ;psect for function _vfpfcnvrt
  2038  0242                     _vfpfcnvrt:	
  2039                           
  2040                           ;incstack = 0
  2041                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2042                           ;vfpfcnvrt@fp stored from wreg
  2043  0242  0020               	movlb	0	; select bank0
  2044  0243  00DD               	movwf	vfpfcnvrt@fp
  2045  0244                     l1458:	
  2046                           
  2047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2048  0244  084E               	movf	vfpfcnvrt@fmt,w
  2049  0245  0086               	movwf	6
  2050  0246  0187               	clrf	7
  2051  0247  3F40               	moviw [0]fsr1
  2052  0248  00D0               	movwf	??_vfpfcnvrt
  2053  0249  3F41               	moviw [1]fsr1
  2054  024A  00D1               	movwf	??_vfpfcnvrt+1
  2055  024B  0850               	movf	??_vfpfcnvrt,w
  2056  024C  0084               	movwf	4
  2057  024D  0851               	movf	??_vfpfcnvrt+1,w
  2058  024E  0085               	movwf	5
  2059  024F  0012               	moviw fsr0++
  2060  0250  3A25               	xorlw	37
  2061  0251  1D03               	btfss	3,2
  2062  0252  2A54               	goto	u1221
  2063  0253  2A55               	goto	u1220
  2064  0254                     u1221:	
  2065  0254  2AF9               	goto	l1494
  2066  0255                     u1220:	
  2067  0255                     l1460:	
  2068                           
  2069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2070  0255  084E               	movf	vfpfcnvrt@fmt,w
  2071  0256  0086               	movwf	6
  2072  0257  0187               	clrf	7
  2073  0258  3001               	movlw	1
  2074  0259  0781               	addwf	1,f
  2075  025A  3141               	addfsr 1,1
  2076  025B  1803               	skipnc
  2077  025C  0A81               	incf	1,f
  2078  025D                     l1462:	
  2079                           
  2080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2081  025D  0021               	movlb	1	; select bank1
  2082  025E  01A2               	clrf	_width^(0+128)
  2083  025F  01A3               	clrf	(_width+1)^(0+128)
  2084  0260  0020               	movlb	0	; select bank0
  2085  0261  01EE               	clrf	_flags
  2086  0262  01EF               	clrf	_flags+1
  2087  0263                     l1464:	
  2088                           
  2089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2090  0263  30FF               	movlw	255
  2091  0264  00EC               	movwf	_prec
  2092  0265  30FF               	movlw	255
  2093  0266  00ED               	movwf	_prec+1
  2094  0267                     l1466:	
  2095                           
  2096                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2097  0267  084E               	movf	vfpfcnvrt@fmt,w
  2098  0268  0086               	movwf	6
  2099  0269  0187               	clrf	7
  2100  026A  3F40               	moviw [0]fsr1
  2101  026B  00D0               	movwf	??_vfpfcnvrt
  2102  026C  3F41               	moviw [1]fsr1
  2103  026D  00D1               	movwf	??_vfpfcnvrt+1
  2104  026E  0850               	movf	??_vfpfcnvrt,w
  2105  026F  0084               	movwf	4
  2106  0270  0851               	movf	??_vfpfcnvrt+1,w
  2107  0271  0085               	movwf	5
  2108  0272  0012               	moviw fsr0++
  2109  0273  3A64               	xorlw	100
  2110  0274  1903               	btfsc	3,2
  2111  0275  2A77               	goto	u1231
  2112  0276  2A78               	goto	u1230
  2113  0277                     u1231:	
  2114  0277  2A89               	goto	l1470
  2115  0278                     u1230:	
  2116  0278                     l1468:	
  2117  0278  084E               	movf	vfpfcnvrt@fmt,w
  2118  0279  0086               	movwf	6
  2119  027A  0187               	clrf	7
  2120  027B  3F40               	moviw [0]fsr1
  2121  027C  00D0               	movwf	??_vfpfcnvrt
  2122  027D  3F41               	moviw [1]fsr1
  2123  027E  00D1               	movwf	??_vfpfcnvrt+1
  2124  027F  0850               	movf	??_vfpfcnvrt,w
  2125  0280  0084               	movwf	4
  2126  0281  0851               	movf	??_vfpfcnvrt+1,w
  2127  0282  0085               	movwf	5
  2128  0283  0012               	moviw fsr0++
  2129  0284  3A69               	xorlw	105
  2130  0285  1D03               	btfss	3,2
  2131  0286  2A88               	goto	u1241
  2132  0287  2A89               	goto	u1240
  2133  0288                     u1241:	
  2134  0288  2AC4               	goto	l1478
  2135  0289                     u1240:	
  2136  0289                     l1470:	
  2137                           
  2138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2139  0289  084E               	movf	vfpfcnvrt@fmt,w
  2140  028A  0086               	movwf	6
  2141  028B  0187               	clrf	7
  2142  028C  3001               	movlw	1
  2143  028D  0781               	addwf	1,f
  2144  028E  3141               	addfsr 1,1
  2145  028F  1803               	skipnc
  2146  0290  0A81               	incf	1,f
  2147  0291                     l1472:	
  2148                           
  2149                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2150  0291  084F               	movf	vfpfcnvrt@ap,w
  2151  0292  0086               	movwf	6
  2152  0293  0187               	clrf	7
  2153  0294  0801               	movf	1,w
  2154  0295  0084               	movwf	4
  2155  0296  0185               	clrf	5
  2156  0297  3002               	movlw	2
  2157  0298  0781               	addwf	1,f
  2158  0299  3F00               	moviw [0]fsr0
  2159  029A  00D0               	movwf	??_vfpfcnvrt
  2160  029B  3F01               	moviw [1]fsr0
  2161  029C  00D1               	movwf	??_vfpfcnvrt+1
  2162  029D  0850               	movf	??_vfpfcnvrt,w
  2163  029E  00D5               	movwf	vfpfcnvrt@ll
  2164  029F  0851               	movf	??_vfpfcnvrt+1,w
  2165  02A0  00D6               	movwf	vfpfcnvrt@ll+1
  2166  02A1  0D89               	rlf	9,f
  2167  02A2  3B89               	subwfb	9,f
  2168  02A3  0989               	comf	9,f
  2169  02A4  00D7               	movwf	vfpfcnvrt@ll+2
  2170  02A5  00D8               	movwf	vfpfcnvrt@ll+3
  2171  02A6  00D9               	movwf	vfpfcnvrt@ll+4
  2172  02A7  00DA               	movwf	vfpfcnvrt@ll+5
  2173  02A8  00DB               	movwf	vfpfcnvrt@ll+6
  2174  02A9  00DC               	movwf	vfpfcnvrt@ll+7
  2175  02AA                     l1474:	
  2176                           
  2177                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  2178  02AA  0855               	movf	vfpfcnvrt@ll,w
  2179  02AB  00B0               	movwf	dtoa@d
  2180  02AC  0856               	movf	vfpfcnvrt@ll+1,w
  2181  02AD  00B1               	movwf	dtoa@d+1
  2182  02AE  0857               	movf	vfpfcnvrt@ll+2,w
  2183  02AF  00B2               	movwf	dtoa@d+2
  2184  02B0  0858               	movf	vfpfcnvrt@ll+3,w
  2185  02B1  00B3               	movwf	dtoa@d+3
  2186  02B2  0859               	movf	vfpfcnvrt@ll+4,w
  2187  02B3  00B4               	movwf	dtoa@d+4
  2188  02B4  085A               	movf	vfpfcnvrt@ll+5,w
  2189  02B5  00B5               	movwf	dtoa@d+5
  2190  02B6  085B               	movf	vfpfcnvrt@ll+6,w
  2191  02B7  00B6               	movwf	dtoa@d+6
  2192  02B8  085C               	movf	vfpfcnvrt@ll+7,w
  2193  02B9  00B7               	movwf	dtoa@d+7
  2194  02BA  085D               	movf	vfpfcnvrt@fp,w
  2195  02BB  3185  2508  3182   	fcall	_dtoa
  2196  02BE  0020               	movlb	0	; select bank0
  2197  02BF  0831               	movf	?_dtoa+1,w
  2198  02C0  00CF               	movwf	?_vfpfcnvrt+1
  2199  02C1  0830               	movf	?_dtoa,w
  2200  02C2  00CE               	movwf	?_vfpfcnvrt
  2201  02C3  2B1C               	goto	l294
  2202  02C4                     l1478:	
  2203                           
  2204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2205  02C4  084E               	movf	vfpfcnvrt@fmt,w
  2206  02C5  0086               	movwf	6
  2207  02C6  0187               	clrf	7
  2208  02C7  3F40               	moviw [0]fsr1
  2209  02C8  00D0               	movwf	??_vfpfcnvrt
  2210  02C9  3F41               	moviw [1]fsr1
  2211  02CA  00D1               	movwf	??_vfpfcnvrt+1
  2212  02CB  0850               	movf	??_vfpfcnvrt,w
  2213  02CC  0084               	movwf	4
  2214  02CD  0851               	movf	??_vfpfcnvrt+1,w
  2215  02CE  0085               	movwf	5
  2216  02CF  0012               	moviw fsr0++
  2217  02D0  3A25               	xorlw	37
  2218  02D1  1D03               	btfss	3,2
  2219  02D2  2AD4               	goto	u1251
  2220  02D3  2AD5               	goto	u1250
  2221  02D4                     u1251:	
  2222  02D4  2AEE               	goto	l1488
  2223  02D5                     u1250:	
  2224  02D5                     l1480:	
  2225                           
  2226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2227  02D5  084E               	movf	vfpfcnvrt@fmt,w
  2228  02D6  0086               	movwf	6
  2229  02D7  0187               	clrf	7
  2230  02D8  3001               	movlw	1
  2231  02D9  0781               	addwf	1,f
  2232  02DA  3141               	addfsr 1,1
  2233  02DB  1803               	skipnc
  2234  02DC  0A81               	incf	1,f
  2235  02DD                     l1482:	
  2236                           
  2237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2238  02DD  3025               	movlw	37
  2239  02DE  00F0               	movwf	fputc@c
  2240  02DF  3000               	movlw	0
  2241  02E0  00F1               	movwf	fputc@c+1
  2242  02E1  085D               	movf	vfpfcnvrt@fp,w
  2243  02E2  00D0               	movwf	??_vfpfcnvrt
  2244  02E3  0850               	movf	??_vfpfcnvrt,w
  2245  02E4  00F2               	movwf	fputc@fp
  2246  02E5  3180  208E  3182   	fcall	_fputc
  2247  02E8                     l1484:	
  2248                           
  2249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2250  02E8  3001               	movlw	1
  2251  02E9  0020               	movlb	0	; select bank0
  2252  02EA  00CE               	movwf	?_vfpfcnvrt
  2253  02EB  3000               	movlw	0
  2254  02EC  00CF               	movwf	?_vfpfcnvrt+1
  2255  02ED  2B1C               	goto	l294
  2256  02EE                     l1488:	
  2257                           
  2258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2259  02EE  084E               	movf	vfpfcnvrt@fmt,w
  2260  02EF  0086               	movwf	6
  2261  02F0  0187               	clrf	7
  2262  02F1  3001               	movlw	1
  2263  02F2  0781               	addwf	1,f
  2264  02F3  3141               	addfsr 1,1
  2265  02F4  1803               	skipnc
  2266  02F5  0A81               	incf	1,f
  2267  02F6                     l1490:	
  2268                           
  2269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2270  02F6  01CE               	clrf	?_vfpfcnvrt
  2271  02F7  01CF               	clrf	?_vfpfcnvrt+1
  2272  02F8  2B1C               	goto	l294
  2273  02F9                     l1494:	
  2274                           
  2275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2276  02F9  084E               	movf	vfpfcnvrt@fmt,w
  2277  02FA  0086               	movwf	6
  2278  02FB  0187               	clrf	7
  2279  02FC  3F40               	moviw [0]fsr1
  2280  02FD  00D0               	movwf	??_vfpfcnvrt
  2281  02FE  3F41               	moviw [1]fsr1
  2282  02FF  00D1               	movwf	??_vfpfcnvrt+1
  2283  0300  0850               	movf	??_vfpfcnvrt,w
  2284  0301  0084               	movwf	4
  2285  0302  0851               	movf	??_vfpfcnvrt+1,w
  2286  0303  0085               	movwf	5
  2287  0304  0800               	movf	0,w	;code access
  2288  0305  00D2               	movwf	??_vfpfcnvrt+2
  2289  0306  01D3               	clrf	??_vfpfcnvrt+3
  2290  0307  0852               	movf	??_vfpfcnvrt+2,w
  2291  0308  00F0               	movwf	fputc@c
  2292  0309  0853               	movf	??_vfpfcnvrt+3,w
  2293  030A  00F1               	movwf	fputc@c+1
  2294  030B  085D               	movf	vfpfcnvrt@fp,w
  2295  030C  00D4               	movwf	??_vfpfcnvrt+4
  2296  030D  0854               	movf	??_vfpfcnvrt+4,w
  2297  030E  00F2               	movwf	fputc@fp
  2298  030F  3180  208E  3182   	fcall	_fputc
  2299  0312                     l1496:	
  2300                           
  2301                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2302  0312  0020               	movlb	0	; select bank0
  2303  0313  084E               	movf	vfpfcnvrt@fmt,w
  2304  0314  0086               	movwf	6
  2305  0315  0187               	clrf	7
  2306  0316  3001               	movlw	1
  2307  0317  0781               	addwf	1,f
  2308  0318  3141               	addfsr 1,1
  2309  0319  1803               	skipnc
  2310  031A  0A81               	incf	1,f
  2311  031B  2AE8               	goto	l1484
  2312  031C                     l294:	
  2313  031C  0008               	return
  2314  031D                     __end_of_vfpfcnvrt:	
  2315                           
  2316                           	psect	text4
  2317  0508                     __ptext4:	
  2318 ;; *************** function _dtoa *****************
  2319 ;; Defined at:
  2320 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;  fp              1    wreg     PTR struct _IO_FILE
  2323 ;;		 -> sprintf@f(5), 
  2324 ;;  d               8   16[BANK0 ] long long 
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  2327 ;;		 -> sprintf@f(5), 
  2328 ;;  n               8   36[BANK0 ] long long 
  2329 ;;  i               2   44[BANK0 ] int 
  2330 ;;  s               2   34[BANK0 ] int 
  2331 ;;  w               2   32[BANK0 ] int 
  2332 ;;  p               2   30[BANK0 ] int 
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  2   16[BANK0 ] int 
  2335 ;; Registers used:
  2336 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2342 ;;      Params:         0       8       0       0       0       0       0       0
  2343 ;;      Locals:         0      19       0       0       0       0       0       0
  2344 ;;      Temps:          0       3       0       0       0       0       0       0
  2345 ;;      Totals:         0      30       0       0       0       0       0       0
  2346 ;;Total ram usage:       30 bytes
  2347 ;; Hardware stack levels used:    1
  2348 ;; Hardware stack levels required when called:    4
  2349 ;; This function calls:
  2350 ;;		___aodiv
  2351 ;;		___aomod
  2352 ;;		_abs
  2353 ;;		_pad
  2354 ;; This function is called by:
  2355 ;;		_vfpfcnvrt
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           
  2360                           ;psect for function _dtoa
  2361  0508                     _dtoa:	
  2362                           
  2363                           ;incstack = 0
  2364                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2365                           ;dtoa@fp stored from wreg
  2366  0508  0020               	movlb	0	; select bank0
  2367  0509  00BD               	movwf	dtoa@fp
  2368  050A                     l1400:	
  2369                           
  2370                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  2371  050A  0830               	movf	dtoa@d,w
  2372  050B  00C4               	movwf	dtoa@n
  2373  050C  0831               	movf	dtoa@d+1,w
  2374  050D  00C5               	movwf	dtoa@n+1
  2375  050E  0832               	movf	dtoa@d+2,w
  2376  050F  00C6               	movwf	dtoa@n+2
  2377  0510  0833               	movf	dtoa@d+3,w
  2378  0511  00C7               	movwf	dtoa@n+3
  2379  0512  0834               	movf	dtoa@d+4,w
  2380  0513  00C8               	movwf	dtoa@n+4
  2381  0514  0835               	movf	dtoa@d+5,w
  2382  0515  00C9               	movwf	dtoa@n+5
  2383  0516  0836               	movf	dtoa@d+6,w
  2384  0517  00CA               	movwf	dtoa@n+6
  2385  0518  0837               	movf	dtoa@d+7,w
  2386  0519  00CB               	movwf	dtoa@n+7
  2387  051A                     l1402:	
  2388                           
  2389                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  2390  051A  3044               	movlw	low dtoa@n
  2391  051B  0086               	movwf	6
  2392  051C  3000               	movlw	high dtoa@n
  2393  051D  0087               	movwf	7
  2394  051E  3F47               	moviw [7]fsr1
  2395  051F  00B8               	movwf	??_dtoa
  2396  0520  1BB8               	btfsc	??_dtoa,7
  2397  0521  2D23               	goto	u1061
  2398  0522  2D25               	goto	u1060
  2399  0523                     u1061:	
  2400  0523  3001               	movlw	1
  2401  0524  2D26               	goto	u1070
  2402  0525                     u1060:	
  2403  0525  3000               	movlw	0
  2404  0526                     u1070:	
  2405  0526  0020               	movlb	0	; select bank0
  2406  0527  00B9               	movwf	??_dtoa+1
  2407  0528  01BA               	clrf	??_dtoa+2
  2408  0529  0839               	movf	??_dtoa+1,w
  2409  052A  00C2               	movwf	dtoa@s
  2410  052B  083A               	movf	??_dtoa+2,w
  2411  052C  00C3               	movwf	dtoa@s+1
  2412  052D                     l1404:	
  2413                           
  2414                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  2415  052D  0842               	movf	dtoa@s,w
  2416  052E  0443               	iorwf	dtoa@s+1,w
  2417  052F  1903               	btfsc	3,2
  2418  0530  2D32               	goto	u1081
  2419  0531  2D33               	goto	u1080
  2420  0532                     u1081:	
  2421  0532  2D51               	goto	l264
  2422  0533                     u1080:	
  2423  0533                     l1406:	
  2424                           
  2425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  2426  0533  09C4               	comf	dtoa@n,f
  2427  0534  09C5               	comf	dtoa@n+1,f
  2428  0535  09C6               	comf	dtoa@n+2,f
  2429  0536  09C7               	comf	dtoa@n+3,f
  2430  0537  09C8               	comf	dtoa@n+4,f
  2431  0538  09C9               	comf	dtoa@n+5,f
  2432  0539  09CA               	comf	dtoa@n+6,f
  2433  053A  09CB               	comf	dtoa@n+7,f
  2434  053B  0AC4               	incf	dtoa@n,f
  2435  053C  1D03               	skipz
  2436  053D  2D51               	goto	u109lld
  2437  053E  0AC5               	incf	dtoa@n+1,f
  2438  053F  1D03               	skipz
  2439  0540  2D51               	goto	u109lld
  2440  0541  0AC6               	incf	dtoa@n+2,f
  2441  0542  1D03               	skipz
  2442  0543  2D51               	goto	u109lld
  2443  0544  0AC7               	incf	dtoa@n+3,f
  2444  0545  1D03               	skipz
  2445  0546  2D51               	goto	u109lld
  2446  0547  0AC8               	incf	dtoa@n+4,f
  2447  0548  1D03               	skipz
  2448  0549  2D51               	goto	u109lld
  2449  054A  0AC9               	incf	dtoa@n+5,f
  2450  054B  1D03               	skipz
  2451  054C  2D51               	goto	u109lld
  2452  054D  0ACA               	incf	dtoa@n+6,f
  2453  054E  1D03               	skipz
  2454  054F  2D51               	goto	u109lld
  2455  0550  0ACB               	incf	dtoa@n+7,f
  2456  0551                     u109lld:	
  2457  0551                     l264:	
  2458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 284:     }
  2459                           
  2460                           
  2461                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  2462  0551  0020               	movlb	0	; select bank0
  2463  0552  1BED               	btfsc	_prec+1,7
  2464  0553  2D55               	goto	u1101
  2465  0554  2D56               	goto	u1100
  2466  0555                     u1101:	
  2467  0555  2D5A               	goto	l265
  2468  0556                     u1100:	
  2469  0556                     l1408:	
  2470                           
  2471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  2472  0556  30FD               	movlw	253
  2473  0557  05EE               	andwf	_flags,f
  2474  0558  30FF               	movlw	255
  2475  0559  05EF               	andwf	_flags+1,f
  2476  055A                     l265:	
  2477                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 289:     }
  2478                           
  2479                           
  2480                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  2481  055A  086D               	movf	_prec+1,w
  2482  055B  3A80               	xorlw	128
  2483  055C  00B8               	movwf	??_dtoa
  2484  055D  3080               	movlw	128
  2485  055E  0238               	subwf	??_dtoa,w
  2486  055F  1D03               	skipz
  2487  0560  2D63               	goto	u1115
  2488  0561  3001               	movlw	1
  2489  0562  026C               	subwf	_prec,w
  2490  0563                     u1115:	
  2491  0563  1803               	skipnc
  2492  0564  2D66               	goto	u1111
  2493  0565  2D67               	goto	u1110
  2494  0566                     u1111:	
  2495  0566  2D6D               	goto	l1412
  2496  0567                     u1110:	
  2497  0567                     l1410:	
  2498  0567  3001               	movlw	1
  2499  0568  0020               	movlb	0	; select bank0
  2500  0569  00BE               	movwf	dtoa@p
  2501  056A  3000               	movlw	0
  2502  056B  00BF               	movwf	dtoa@p+1
  2503  056C  2D72               	goto	l269
  2504  056D                     l1412:	
  2505  056D  0020               	movlb	0	; select bank0
  2506  056E  086D               	movf	_prec+1,w
  2507  056F  00BF               	movwf	dtoa@p+1
  2508  0570  086C               	movf	_prec,w
  2509  0571  00BE               	movwf	dtoa@p
  2510  0572                     l269:	
  2511                           
  2512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  2513  0572  0021               	movlb	1	; select bank1
  2514  0573  0823               	movf	(_width+1)^(0+128),w
  2515  0574  0020               	movlb	0	; select bank0
  2516  0575  00C1               	movwf	dtoa@w+1
  2517  0576  0021               	movlb	1	; select bank1
  2518  0577  0822               	movf	_width^(0+128),w
  2519  0578  0020               	movlb	0	; select bank0
  2520  0579  00C0               	movwf	dtoa@w
  2521  057A                     l1414:	
  2522                           
  2523                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  2524  057A  0842               	movf	dtoa@s,w
  2525  057B  0443               	iorwf	dtoa@s+1,w
  2526  057C  1D03               	btfss	3,2
  2527  057D  2D7F               	goto	u1121
  2528  057E  2D80               	goto	u1120
  2529  057F                     u1121:	
  2530  057F  2D84               	goto	l1418
  2531  0580                     u1120:	
  2532  0580                     l1416:	
  2533  0580  1D6E               	btfss	_flags,2
  2534  0581  2D83               	goto	u1131
  2535  0582  2D84               	goto	u1130
  2536  0583                     u1131:	
  2537  0583  2D88               	goto	l270
  2538  0584                     u1130:	
  2539  0584                     l1418:	
  2540                           
  2541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  2542  0584  30FF               	movlw	255
  2543  0585  07C0               	addwf	dtoa@w,f
  2544  0586  30FF               	movlw	255
  2545  0587  3DC1               	addwfc	dtoa@w+1,f
  2546  0588                     l270:	
  2547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 294:     }
  2548                           
  2549                           
  2550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  2551  0588  301F               	movlw	31
  2552  0589  00CC               	movwf	dtoa@i
  2553  058A  3000               	movlw	0
  2554  058B  00CD               	movwf	dtoa@i+1
  2555  058C                     l1420:	
  2556                           
  2557                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  2558  058C  0021               	movlb	1	; select bank1
  2559  058D  01C3               	clrf	(_dbuf^(0+128)+31)
  2560                           
  2561                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2562  058E  2DF7               	goto	l273
  2563  058F                     l1422:	
  2564                           
  2565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  2566  058F  30FF               	movlw	255
  2567  0590  0020               	movlb	0	; select bank0
  2568  0591  07CC               	addwf	dtoa@i,f
  2569  0592  30FF               	movlw	255
  2570  0593  3DCD               	addwfc	dtoa@i+1,f
  2571  0594                     l1424:	
  2572                           
  2573                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  2574  0594  300A               	movlw	10
  2575  0595  00A0               	movwf	___aomod@divisor
  2576  0596  01A1               	clrf	___aomod@divisor+1
  2577  0597  01A2               	clrf	___aomod@divisor+2
  2578  0598  01A3               	clrf	___aomod@divisor+3
  2579  0599  01A4               	clrf	___aomod@divisor+4
  2580  059A  01A5               	clrf	___aomod@divisor+5
  2581  059B  01A6               	clrf	___aomod@divisor+6
  2582  059C  01A7               	clrf	___aomod@divisor+7
  2583  059D  0844               	movf	dtoa@n,w
  2584  059E  00A8               	movwf	___aomod@dividend
  2585  059F  0845               	movf	dtoa@n+1,w
  2586  05A0  00A9               	movwf	___aomod@dividend+1
  2587  05A1  0846               	movf	dtoa@n+2,w
  2588  05A2  00AA               	movwf	___aomod@dividend+2
  2589  05A3  0847               	movf	dtoa@n+3,w
  2590  05A4  00AB               	movwf	___aomod@dividend+3
  2591  05A5  0848               	movf	dtoa@n+4,w
  2592  05A6  00AC               	movwf	___aomod@dividend+4
  2593  05A7  0849               	movf	dtoa@n+5,w
  2594  05A8  00AD               	movwf	___aomod@dividend+5
  2595  05A9  084A               	movf	dtoa@n+6,w
  2596  05AA  00AE               	movwf	___aomod@dividend+6
  2597  05AB  084B               	movf	dtoa@n+7,w
  2598  05AC  00AF               	movwf	___aomod@dividend+7
  2599  05AD  3183  231D  3185   	fcall	___aomod
  2600  05B0  0020               	movlb	0	; select bank0
  2601  05B1  0821               	movf	?___aomod+1,w
  2602  05B2  00F4               	movwf	abs@a+1
  2603  05B3  0820               	movf	?___aomod,w
  2604  05B4  00F3               	movwf	abs@a
  2605  05B5  318F  2778  3185   	fcall	_abs
  2606  05B8  0873               	movf	?_abs,w
  2607  05B9  3E30               	addlw	48
  2608  05BA  0020               	movlb	0	; select bank0
  2609  05BB  00B8               	movwf	??_dtoa
  2610  05BC  084C               	movf	dtoa@i,w
  2611  05BD  3EA4               	addlw	(low (_dbuf| 0))& (0+255)
  2612  05BE  0086               	movwf	6
  2613  05BF  0187               	clrf	7
  2614  05C0  0838               	movf	??_dtoa,w
  2615  05C1  0081               	movwf	1
  2616  05C2                     l1426:	
  2617                           
  2618                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  2619  05C2  30FF               	movlw	255
  2620  05C3  07BE               	addwf	dtoa@p,f
  2621  05C4  30FF               	movlw	255
  2622  05C5  3DBF               	addwfc	dtoa@p+1,f
  2623  05C6                     l1428:	
  2624                           
  2625                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  2626  05C6  30FF               	movlw	255
  2627  05C7  07C0               	addwf	dtoa@w,f
  2628  05C8  30FF               	movlw	255
  2629  05C9  3DC1               	addwfc	dtoa@w+1,f
  2630  05CA                     l1430:	
  2631                           
  2632                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  2633  05CA  300A               	movlw	10
  2634  05CB  00A0               	movwf	___aodiv@divisor
  2635  05CC  01A1               	clrf	___aodiv@divisor+1
  2636  05CD  01A2               	clrf	___aodiv@divisor+2
  2637  05CE  01A3               	clrf	___aodiv@divisor+3
  2638  05CF  01A4               	clrf	___aodiv@divisor+4
  2639  05D0  01A5               	clrf	___aodiv@divisor+5
  2640  05D1  01A6               	clrf	___aodiv@divisor+6
  2641  05D2  01A7               	clrf	___aodiv@divisor+7
  2642  05D3  0844               	movf	dtoa@n,w
  2643  05D4  00A8               	movwf	___aodiv@dividend
  2644  05D5  0845               	movf	dtoa@n+1,w
  2645  05D6  00A9               	movwf	___aodiv@dividend+1
  2646  05D7  0846               	movf	dtoa@n+2,w
  2647  05D8  00AA               	movwf	___aodiv@dividend+2
  2648  05D9  0847               	movf	dtoa@n+3,w
  2649  05DA  00AB               	movwf	___aodiv@dividend+3
  2650  05DB  0848               	movf	dtoa@n+4,w
  2651  05DC  00AC               	movwf	___aodiv@dividend+4
  2652  05DD  0849               	movf	dtoa@n+5,w
  2653  05DE  00AD               	movwf	___aodiv@dividend+5
  2654  05DF  084A               	movf	dtoa@n+6,w
  2655  05E0  00AE               	movwf	___aodiv@dividend+6
  2656  05E1  084B               	movf	dtoa@n+7,w
  2657  05E2  00AF               	movwf	___aodiv@dividend+7
  2658  05E3  3184  2407  3185   	fcall	___aodiv
  2659  05E6  0020               	movlb	0	; select bank0
  2660  05E7  0820               	movf	?___aodiv,w
  2661  05E8  00C4               	movwf	dtoa@n
  2662  05E9  0821               	movf	?___aodiv+1,w
  2663  05EA  00C5               	movwf	dtoa@n+1
  2664  05EB  0822               	movf	?___aodiv+2,w
  2665  05EC  00C6               	movwf	dtoa@n+2
  2666  05ED  0823               	movf	?___aodiv+3,w
  2667  05EE  00C7               	movwf	dtoa@n+3
  2668  05EF  0824               	movf	?___aodiv+4,w
  2669  05F0  00C8               	movwf	dtoa@n+4
  2670  05F1  0825               	movf	?___aodiv+5,w
  2671  05F2  00C9               	movwf	dtoa@n+5
  2672  05F3  0826               	movf	?___aodiv+6,w
  2673  05F4  00CA               	movwf	dtoa@n+6
  2674  05F5  0827               	movf	?___aodiv+7,w
  2675  05F6  00CB               	movwf	dtoa@n+7
  2676  05F7                     l273:	
  2677                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 305:     }
  2678                           
  2679                           
  2680                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2681  05F7  0020               	movlb	0	; select bank0
  2682  05F8  084D               	movf	dtoa@i+1,w
  2683  05F9  3A80               	xorlw	128
  2684  05FA  00B8               	movwf	??_dtoa
  2685  05FB  3080               	movlw	128
  2686  05FC  0238               	subwf	??_dtoa,w
  2687  05FD  1D03               	skipz
  2688  05FE  2E01               	goto	u1145
  2689  05FF  3001               	movlw	1
  2690  0600  024C               	subwf	dtoa@i,w
  2691  0601                     u1145:	
  2692  0601  1C03               	skipc
  2693  0602  2E04               	goto	u1141
  2694  0603  2E05               	goto	u1140
  2695  0604                     u1141:	
  2696  0604  2E32               	goto	l1440
  2697  0605                     u1140:	
  2698  0605                     l1432:	
  2699  0605  0020               	movlb	0	; select bank0
  2700  0606  0844               	movf	dtoa@n,w
  2701  0607  0445               	iorwf	dtoa@n+1,w
  2702  0608  0446               	iorwf	dtoa@n+2,w
  2703  0609  0447               	iorwf	dtoa@n+3,w
  2704  060A  0448               	iorwf	dtoa@n+4,w
  2705  060B  0449               	iorwf	dtoa@n+5,w
  2706  060C  044A               	iorwf	dtoa@n+6,w
  2707  060D  044B               	iorwf	dtoa@n+7,w
  2708  060E  1D03               	skipz
  2709  060F  2E11               	goto	u1151
  2710  0610  2E12               	goto	u1150
  2711  0611                     u1151:	
  2712  0611  2D8F               	goto	l1422
  2713  0612                     u1150:	
  2714  0612                     l1434:	
  2715  0612  083F               	movf	dtoa@p+1,w
  2716  0613  3A80               	xorlw	128
  2717  0614  00B8               	movwf	??_dtoa
  2718  0615  3080               	movlw	128
  2719  0616  0238               	subwf	??_dtoa,w
  2720  0617  1D03               	skipz
  2721  0618  2E1B               	goto	u1165
  2722  0619  3001               	movlw	1
  2723  061A  023E               	subwf	dtoa@p,w
  2724  061B                     u1165:	
  2725  061B  1803               	skipnc
  2726  061C  2E1E               	goto	u1161
  2727  061D  2E1F               	goto	u1160
  2728  061E                     u1161:	
  2729  061E  2D8F               	goto	l1422
  2730  061F                     u1160:	
  2731  061F                     l1436:	
  2732  061F  0020               	movlb	0	; select bank0
  2733  0620  0841               	movf	dtoa@w+1,w
  2734  0621  3A80               	xorlw	128
  2735  0622  00B8               	movwf	??_dtoa
  2736  0623  3080               	movlw	128
  2737  0624  0238               	subwf	??_dtoa,w
  2738  0625  1D03               	skipz
  2739  0626  2E29               	goto	u1175
  2740  0627  3001               	movlw	1
  2741  0628  0240               	subwf	dtoa@w,w
  2742  0629                     u1175:	
  2743  0629  1C03               	skipc
  2744  062A  2E2C               	goto	u1171
  2745  062B  2E2D               	goto	u1170
  2746  062C                     u1171:	
  2747  062C  2E32               	goto	l1440
  2748  062D                     u1170:	
  2749  062D                     l1438:	
  2750  062D  0020               	movlb	0	; select bank0
  2751  062E  18EE               	btfsc	_flags,1
  2752  062F  2E31               	goto	u1181
  2753  0630  2E32               	goto	u1180
  2754  0631                     u1181:	
  2755  0631  2D8F               	goto	l1422
  2756  0632                     u1180:	
  2757  0632                     l1440:	
  2758                           
  2759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  2760  0632  0020               	movlb	0	; select bank0
  2761  0633  0842               	movf	dtoa@s,w
  2762  0634  0443               	iorwf	dtoa@s+1,w
  2763  0635  1D03               	btfss	3,2
  2764  0636  2E38               	goto	u1191
  2765  0637  2E39               	goto	u1190
  2766  0638                     u1191:	
  2767  0638  2E3D               	goto	l1444
  2768  0639                     u1190:	
  2769  0639                     l1442:	
  2770  0639  1D6E               	btfss	_flags,2
  2771  063A  2E3C               	goto	u1201
  2772  063B  2E3D               	goto	u1200
  2773  063C                     u1201:	
  2774  063C  2E58               	goto	l1454
  2775  063D                     u1200:	
  2776  063D                     l1444:	
  2777                           
  2778                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  2779  063D  30FF               	movlw	255
  2780  063E  07CC               	addwf	dtoa@i,f
  2781  063F  30FF               	movlw	255
  2782  0640  3DCD               	addwfc	dtoa@i+1,f
  2783  0641                     l1446:	
  2784                           
  2785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  2786  0641  0842               	movf	dtoa@s,w
  2787  0642  0443               	iorwf	dtoa@s+1,w
  2788  0643  1D03               	btfss	3,2
  2789  0644  2E46               	goto	u1211
  2790  0645  2E47               	goto	u1210
  2791  0646                     u1211:	
  2792  0646  2E4C               	goto	l1450
  2793  0647                     u1210:	
  2794  0647                     l1448:	
  2795  0647  302B               	movlw	43
  2796  0648  00BB               	movwf	_dtoa$408
  2797  0649  3000               	movlw	0
  2798  064A  00BC               	movwf	_dtoa$408+1
  2799  064B  2E50               	goto	l1452
  2800  064C                     l1450:	
  2801  064C  302D               	movlw	45
  2802  064D  00BB               	movwf	_dtoa$408
  2803  064E  3000               	movlw	0
  2804  064F  00BC               	movwf	_dtoa$408+1
  2805  0650                     l1452:	
  2806  0650  083B               	movf	_dtoa$408,w
  2807  0651  00B8               	movwf	??_dtoa
  2808  0652  084C               	movf	dtoa@i,w
  2809  0653  3EA4               	addlw	(low (_dbuf| 0))& (0+255)
  2810  0654  0086               	movwf	6
  2811  0655  0187               	clrf	7
  2812  0656  0838               	movf	??_dtoa,w
  2813  0657  0081               	movwf	1
  2814  0658                     l1454:	
  2815                           
  2816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  2817  0658  084C               	movf	dtoa@i,w
  2818  0659  3EA4               	addlw	(low (_dbuf| 0))& (0+255)
  2819  065A  00B8               	movwf	??_dtoa
  2820  065B  0838               	movf	??_dtoa,w
  2821  065C  00A4               	movwf	pad@buf
  2822  065D  0841               	movf	dtoa@w+1,w
  2823  065E  00A6               	movwf	pad@p+1
  2824  065F  0840               	movf	dtoa@w,w
  2825  0660  00A5               	movwf	pad@p
  2826  0661  083D               	movf	dtoa@fp,w
  2827  0662  3180  20DE  3185   	fcall	_pad
  2828  0665  0020               	movlb	0	; select bank0
  2829  0666  0825               	movf	?_pad+1,w
  2830  0667  00B1               	movwf	?_dtoa+1
  2831  0668  0824               	movf	?_pad,w
  2832  0669  00B0               	movwf	?_dtoa
  2833  066A                     l287:	
  2834  066A  0008               	return
  2835  066B                     __end_of_dtoa:	
  2836                           
  2837                           	psect	text5
  2838  00DE                     __ptext5:	
  2839 ;; *************** function _pad *****************
  2840 ;; Defined at:
  2841 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;  fp              1    wreg     PTR struct _IO_FILE
  2844 ;;		 -> sprintf@f(5), 
  2845 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  2846 ;;		 -> dbuf(32), 
  2847 ;;  p               2    5[BANK0 ] int 
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  2850 ;;		 -> sprintf@f(5), 
  2851 ;;  w               2    9[BANK0 ] int 
  2852 ;;  i               2    7[BANK0 ] int 
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  2    4[BANK0 ] int 
  2855 ;; Registers used:
  2856 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2862 ;;      Params:         0       3       0       0       0       0       0       0
  2863 ;;      Locals:         0       5       0       0       0       0       0       0
  2864 ;;      Temps:          1       0       0       0       0       0       0       0
  2865 ;;      Totals:         1       8       0       0       0       0       0       0
  2866 ;;Total ram usage:        9 bytes
  2867 ;; Hardware stack levels used:    1
  2868 ;; Hardware stack levels required when called:    3
  2869 ;; This function calls:
  2870 ;;		_fputc
  2871 ;;		_fputs
  2872 ;;		_strlen
  2873 ;; This function is called by:
  2874 ;;		_dtoa
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           
  2879                           ;psect for function _pad
  2880  00DE                     _pad:	
  2881                           
  2882                           ;incstack = 0
  2883                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2884                           ;pad@fp stored from wreg
  2885  00DE  0020               	movlb	0	; select bank0
  2886  00DF  00AB               	movwf	pad@fp
  2887  00E0                     l1306:	
  2888                           
  2889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2890  00E0  1C6E               	btfss	_flags,0
  2891  00E1  28E3               	goto	u801
  2892  00E2  28E4               	goto	u800
  2893  00E3                     u801:	
  2894  00E3  28EC               	goto	l1310
  2895  00E4                     u800:	
  2896  00E4                     l1308:	
  2897                           
  2898                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2899  00E4  082B               	movf	pad@fp,w
  2900  00E5  00FC               	movwf	??_pad
  2901  00E6  087C               	movf	??_pad,w
  2902  00E7  00F8               	movwf	fputs@fp
  2903  00E8  0824               	movf	pad@buf,w
  2904  00E9  318F  27AE  3180   	fcall	_fputs
  2905  00EC                     l1310:	
  2906                           
  2907                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2908  00EC  0020               	movlb	0	; select bank0
  2909  00ED  1BA6               	btfsc	pad@p+1,7
  2910  00EE  28F0               	goto	u811
  2911  00EF  28F1               	goto	u810
  2912  00F0                     u811:	
  2913  00F0  28F6               	goto	l1314
  2914  00F1                     u810:	
  2915  00F1                     l1312:	
  2916  00F1  0826               	movf	pad@p+1,w
  2917  00F2  00AA               	movwf	pad@w+1
  2918  00F3  0825               	movf	pad@p,w
  2919  00F4  00A9               	movwf	pad@w
  2920  00F5  28F8               	goto	l256
  2921  00F6                     l1314:	
  2922  00F6  01A9               	clrf	pad@w
  2923  00F7  01AA               	clrf	pad@w+1
  2924  00F8                     l256:	
  2925                           
  2926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2927  00F8  01A7               	clrf	pad@i
  2928  00F9  01A8               	clrf	pad@i+1
  2929                           
  2930                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2931  00FA  290C               	goto	l1320
  2932  00FB                     l1316:	
  2933                           
  2934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2935  00FB  3020               	movlw	32
  2936  00FC  00F0               	movwf	fputc@c
  2937  00FD  3000               	movlw	0
  2938  00FE  00F1               	movwf	fputc@c+1
  2939  00FF  0020               	movlb	0	; select bank0
  2940  0100  082B               	movf	pad@fp,w
  2941  0101  00FC               	movwf	??_pad
  2942  0102  087C               	movf	??_pad,w
  2943  0103  00F2               	movwf	fputc@fp
  2944  0104  3180  208E  3180   	fcall	_fputc
  2945  0107                     l1318:	
  2946                           
  2947                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2948  0107  3001               	movlw	1
  2949  0108  0020               	movlb	0	; select bank0
  2950  0109  07A7               	addwf	pad@i,f
  2951  010A  3000               	movlw	0
  2952  010B  3DA8               	addwfc	pad@i+1,f
  2953  010C                     l1320:	
  2954                           
  2955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2956  010C  0828               	movf	pad@i+1,w
  2957  010D  3A80               	xorlw	128
  2958  010E  00FC               	movwf	??_pad
  2959  010F  082A               	movf	pad@w+1,w
  2960  0110  3A80               	xorlw	128
  2961  0111  027C               	subwf	??_pad,w
  2962  0112  1D03               	skipz
  2963  0113  2916               	goto	u825
  2964  0114  0829               	movf	pad@w,w
  2965  0115  0227               	subwf	pad@i,w
  2966  0116                     u825:	
  2967  0116  1C03               	skipc
  2968  0117  2919               	goto	u821
  2969  0118  291A               	goto	u820
  2970  0119                     u821:	
  2971  0119  28FB               	goto	l1316
  2972  011A                     u820:	
  2973  011A                     l259:	
  2974                           
  2975                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2976  011A  0020               	movlb	0	; select bank0
  2977  011B  186E               	btfsc	_flags,0
  2978  011C  291E               	goto	u831
  2979  011D  291F               	goto	u830
  2980  011E                     u831:	
  2981  011E  2927               	goto	l1324
  2982  011F                     u830:	
  2983  011F                     l1322:	
  2984                           
  2985                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2986  011F  082B               	movf	pad@fp,w
  2987  0120  00FC               	movwf	??_pad
  2988  0121  087C               	movf	??_pad,w
  2989  0122  00F8               	movwf	fputs@fp
  2990  0123  0824               	movf	pad@buf,w
  2991  0124  318F  27AE  3180   	fcall	_fputs
  2992  0127                     l1324:	
  2993                           
  2994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2995  0127  0020               	movlb	0	; select bank0
  2996  0128  0824               	movf	pad@buf,w
  2997  0129  318F  275F  3180   	fcall	_strlen
  2998  012C  0020               	movlb	0	; select bank0
  2999  012D  0829               	movf	pad@w,w
  3000  012E  0770               	addwf	?_strlen,w
  3001  012F  00A4               	movwf	?_pad
  3002  0130  082A               	movf	pad@w+1,w
  3003  0131  3D71               	addwfc	?_strlen+1,w
  3004  0132  00A5               	movwf	?_pad+1
  3005  0133                     l261:	
  3006  0133  0008               	return
  3007  0134                     __end_of_pad:	
  3008                           
  3009                           	psect	text6
  3010  0F5F                     __ptext6:	
  3011 ;; *************** function _strlen *****************
  3012 ;; Defined at:
  3013 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;  s               1    wreg     PTR const unsigned char 
  3016 ;;		 -> dbuf(32), 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  s               1    4[COMMON] PTR const unsigned char 
  3019 ;;		 -> dbuf(32), 
  3020 ;;  a               1    3[COMMON] PTR const unsigned char 
  3021 ;;		 -> dbuf(32), 
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  2    0[COMMON] unsigned int 
  3024 ;; Registers used:
  3025 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3031 ;;      Params:         2       0       0       0       0       0       0       0
  3032 ;;      Locals:         2       0       0       0       0       0       0       0
  3033 ;;      Temps:          1       0       0       0       0       0       0       0
  3034 ;;      Totals:         5       0       0       0       0       0       0       0
  3035 ;;Total ram usage:        5 bytes
  3036 ;; Hardware stack levels used:    1
  3037 ;; This function calls:
  3038 ;;		Nothing
  3039 ;; This function is called by:
  3040 ;;		_pad
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           
  3045                           ;psect for function _strlen
  3046  0F5F                     _strlen:	
  3047                           
  3048                           ;incstack = 0
  3049                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  3050                           ;strlen@s stored from wreg
  3051  0F5F  00F4               	movwf	strlen@s
  3052  0F60                     l1296:	
  3053  0F60  0874               	movf	strlen@s,w
  3054  0F61  00F2               	movwf	??_strlen
  3055  0F62  0872               	movf	??_strlen,w
  3056  0F63  00F3               	movwf	strlen@a
  3057  0F64  2F69               	goto	l1300
  3058  0F65                     l1298:	
  3059  0F65  3001               	movlw	1
  3060  0F66  00F2               	movwf	??_strlen
  3061  0F67  0872               	movf	??_strlen,w
  3062  0F68  07F4               	addwf	strlen@s,f
  3063  0F69                     l1300:	
  3064  0F69  0874               	movf	strlen@s,w
  3065  0F6A  0086               	movwf	6
  3066  0F6B  0187               	clrf	7
  3067  0F6C  0801               	movf	1,w
  3068  0F6D  1D03               	btfss	3,2
  3069  0F6E  2F70               	goto	u791
  3070  0F6F  2F71               	goto	u790
  3071  0F70                     u791:	
  3072  0F70  2F65               	goto	l1298
  3073  0F71                     u790:	
  3074  0F71                     l1302:	
  3075  0F71  0873               	movf	strlen@a,w
  3076  0F72  0274               	subwf	strlen@s,w
  3077  0F73  00F0               	movwf	?_strlen
  3078  0F74  01F1               	clrf	?_strlen+1
  3079  0F75  1BF0               	btfsc	?_strlen,7
  3080  0F76  03F1               	decf	?_strlen+1,f
  3081  0F77                     l798:	
  3082  0F77  0008               	return
  3083  0F78                     __end_of_strlen:	
  3084                           
  3085                           	psect	text7
  3086  0FAE                     __ptext7:	
  3087 ;; *************** function _fputs *****************
  3088 ;; Defined at:
  3089 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  s               1    wreg     PTR const unsigned char 
  3092 ;;		 -> dbuf(32), 
  3093 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  3094 ;;		 -> sprintf@f(5), 
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  3097 ;;		 -> dbuf(32), 
  3098 ;;  i               2    1[BANK0 ] int 
  3099 ;;  c               1    0[BANK0 ] unsigned char 
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  2    8[COMMON] int 
  3102 ;; Registers used:
  3103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3109 ;;      Params:         1       0       0       0       0       0       0       0
  3110 ;;      Locals:         0       4       0       0       0       0       0       0
  3111 ;;      Temps:          3       0       0       0       0       0       0       0
  3112 ;;      Totals:         4       4       0       0       0       0       0       0
  3113 ;;Total ram usage:        8 bytes
  3114 ;; Hardware stack levels used:    1
  3115 ;; Hardware stack levels required when called:    2
  3116 ;; This function calls:
  3117 ;;		_fputc
  3118 ;; This function is called by:
  3119 ;;		_pad
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           
  3124                           ;psect for function _fputs
  3125  0FAE                     _fputs:	
  3126                           
  3127                           ;incstack = 0
  3128                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3129                           ;fputs@s stored from wreg
  3130  0FAE  0020               	movlb	0	; select bank0
  3131  0FAF  00A3               	movwf	fputs@s
  3132  0FB0                     l1288:	
  3133  0FB0  01A1               	clrf	fputs@i
  3134  0FB1  01A2               	clrf	fputs@i+1
  3135  0FB2  2FC6               	goto	l1294
  3136  0FB3                     l1290:	
  3137  0FB3  0820               	movf	fputs@c,w
  3138  0FB4  00F9               	movwf	??_fputs
  3139  0FB5  01FA               	clrf	??_fputs+1
  3140  0FB6  0879               	movf	??_fputs,w
  3141  0FB7  00F0               	movwf	fputc@c
  3142  0FB8  087A               	movf	??_fputs+1,w
  3143  0FB9  00F1               	movwf	fputc@c+1
  3144  0FBA  0878               	movf	fputs@fp,w
  3145  0FBB  00FB               	movwf	??_fputs+2
  3146  0FBC  087B               	movf	??_fputs+2,w
  3147  0FBD  00F2               	movwf	fputc@fp
  3148  0FBE  3180  208E  318F   	fcall	_fputc
  3149  0FC1                     l1292:	
  3150  0FC1  3001               	movlw	1
  3151  0FC2  0020               	movlb	0	; select bank0
  3152  0FC3  07A1               	addwf	fputs@i,f
  3153  0FC4  3000               	movlw	0
  3154  0FC5  3DA2               	addwfc	fputs@i+1,f
  3155  0FC6                     l1294:	
  3156  0FC6  0821               	movf	fputs@i,w
  3157  0FC7  0723               	addwf	fputs@s,w
  3158  0FC8  00F9               	movwf	??_fputs
  3159  0FC9  0879               	movf	??_fputs,w
  3160  0FCA  0086               	movwf	6
  3161  0FCB  0187               	clrf	7
  3162  0FCC  0801               	movf	1,w
  3163  0FCD  00FA               	movwf	??_fputs+1
  3164  0FCE  087A               	movf	??_fputs+1,w
  3165  0FCF  00A0               	movwf	fputs@c
  3166  0FD0  0820               	movf	fputs@c,w
  3167  0FD1  1D03               	btfss	3,2
  3168  0FD2  2FD4               	goto	u781
  3169  0FD3  2FD5               	goto	u780
  3170  0FD4                     u781:	
  3171  0FD4  2FB3               	goto	l1290
  3172  0FD5                     u780:	
  3173  0FD5                     l782:	
  3174  0FD5  0008               	return
  3175  0FD6                     __end_of_fputs:	
  3176                           
  3177                           	psect	text8
  3178  008E                     __ptext8:	
  3179 ;; *************** function _fputc *****************
  3180 ;; Defined at:
  3181 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  c               2    0[COMMON] int 
  3184 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  3185 ;;		 -> sprintf@f(5), 
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;		None
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  2    0[COMMON] int 
  3190 ;; Registers used:
  3191 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3197 ;;      Params:         3       0       0       0       0       0       0       0
  3198 ;;      Locals:         0       0       0       0       0       0       0       0
  3199 ;;      Temps:          5       0       0       0       0       0       0       0
  3200 ;;      Totals:         8       0       0       0       0       0       0       0
  3201 ;;Total ram usage:        8 bytes
  3202 ;; Hardware stack levels used:    1
  3203 ;; Hardware stack levels required when called:    1
  3204 ;; This function calls:
  3205 ;;		_putch
  3206 ;; This function is called by:
  3207 ;;		_pad
  3208 ;;		_vfpfcnvrt
  3209 ;;		_fputs
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           
  3214                           ;psect for function _fputc
  3215  008E                     _fputc:	
  3216  008E                     l1272:	
  3217                           ;incstack = 0
  3218                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3219                           
  3220  008E  0872               	movf	fputc@fp,w
  3221  008F  1903               	btfsc	3,2
  3222  0090  2892               	goto	u741
  3223  0091  2893               	goto	u740
  3224  0092                     u741:	
  3225  0092  2898               	goto	l1276
  3226  0093                     u740:	
  3227  0093                     l1274:	
  3228  0093  0872               	movf	fputc@fp,w
  3229  0094  1D03               	btfss	3,2
  3230  0095  2897               	goto	u751
  3231  0096  2898               	goto	u750
  3232  0097                     u751:	
  3233  0097  289D               	goto	l1278
  3234  0098                     u750:	
  3235  0098                     l1276:	
  3236  0098  0870               	movf	fputc@c,w
  3237  0099  3180  2004  3180   	fcall	_putch
  3238  009C  28DD               	goto	l774
  3239  009D                     l1278:	
  3240  009D  0872               	movf	fputc@fp,w
  3241  009E  3E03               	addlw	3
  3242  009F  0086               	movwf	6
  3243  00A0  0187               	clrf	7
  3244  00A1  0016               	moviw fsr1++
  3245  00A2  0401               	iorwf	1,w
  3246  00A3  1903               	btfsc	3,2
  3247  00A4  28A6               	goto	u761
  3248  00A5  28A7               	goto	u760
  3249  00A6                     u761:	
  3250  00A6  28C4               	goto	l1282
  3251  00A7                     u760:	
  3252  00A7                     l1280:	
  3253  00A7  0872               	movf	fputc@fp,w
  3254  00A8  3E03               	addlw	3
  3255  00A9  0086               	movwf	6
  3256  00AA  0187               	clrf	7
  3257  00AB  3F40               	moviw [0]fsr1
  3258  00AC  00F3               	movwf	??_fputc
  3259  00AD  3F41               	moviw [1]fsr1
  3260  00AE  00F4               	movwf	??_fputc+1
  3261  00AF  0A72               	incf	fputc@fp,w
  3262  00B0  0086               	movwf	6
  3263  00B1  0187               	clrf	7
  3264  00B2  3F40               	moviw [0]fsr1
  3265  00B3  00F5               	movwf	??_fputc+2
  3266  00B4  3F41               	moviw [1]fsr1
  3267  00B5  00F6               	movwf	??_fputc+3
  3268  00B6  0876               	movf	??_fputc+3,w
  3269  00B7  3A80               	xorlw	128
  3270  00B8  00F7               	movwf	??_fputc+4
  3271  00B9  0874               	movf	??_fputc+1,w
  3272  00BA  3A80               	xorlw	128
  3273  00BB  0277               	subwf	??_fputc+4,w
  3274  00BC  1D03               	skipz
  3275  00BD  28C0               	goto	u775
  3276  00BE  0873               	movf	??_fputc,w
  3277  00BF  0275               	subwf	??_fputc+2,w
  3278  00C0                     u775:	
  3279  00C0  1803               	skipnc
  3280  00C1  28C3               	goto	u771
  3281  00C2  28C4               	goto	u770
  3282  00C3                     u771:	
  3283  00C3  28DD               	goto	l774
  3284  00C4                     u770:	
  3285  00C4                     l1282:	
  3286  00C4  0870               	movf	fputc@c,w
  3287  00C5  00F3               	movwf	??_fputc
  3288  00C6  0872               	movf	fputc@fp,w
  3289  00C7  0086               	movwf	6
  3290  00C8  0187               	clrf	7
  3291  00C9  0A72               	incf	fputc@fp,w
  3292  00CA  0084               	movwf	4
  3293  00CB  0185               	clrf	5
  3294  00CC  0800               	movf	0,w
  3295  00CD  0701               	addwf	1,w
  3296  00CE  00F4               	movwf	??_fputc+1
  3297  00CF  0874               	movf	??_fputc+1,w
  3298  00D0  0086               	movwf	6
  3299  00D1  3001               	movlw	1	; select bank2/3
  3300  00D2  0087               	movwf	7
  3301  00D3  0873               	movf	??_fputc,w
  3302  00D4  0081               	movwf	1
  3303  00D5                     l1284:	
  3304  00D5  0A72               	incf	fputc@fp,w
  3305  00D6  0086               	movwf	6
  3306  00D7  0187               	clrf	7
  3307  00D8  3001               	movlw	1
  3308  00D9  0781               	addwf	1,f
  3309  00DA  3141               	addfsr 1,1
  3310  00DB  1803               	skipnc
  3311  00DC  0A81               	incf	1,f
  3312  00DD                     l774:	
  3313  00DD  0008               	return
  3314  00DE                     __end_of_fputc:	
  3315                           
  3316                           	psect	text9
  3317  0004                     __ptext9:	
  3318 ;; *************** function _putch *****************
  3319 ;; Defined at:
  3320 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;  c               1    wreg     unsigned char 
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;  c               1    0[COMMON] unsigned char 
  3325 ;; Return value:  Size  Location     Type
  3326 ;;                  1    wreg      void 
  3327 ;; Registers used:
  3328 ;;		wreg
  3329 ;; Tracked objects:
  3330 ;;		On entry : 0/0
  3331 ;;		On exit  : 0/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3334 ;;      Params:         0       0       0       0       0       0       0       0
  3335 ;;      Locals:         0       0       0       0       0       0       0       0
  3336 ;;      Temps:          0       0       0       0       0       0       0       0
  3337 ;;      Totals:         0       0       0       0       0       0       0       0
  3338 ;;Total ram usage:        0 bytes
  3339 ;; Hardware stack levels used:    1
  3340 ;; This function calls:
  3341 ;;		Nothing
  3342 ;; This function is called by:
  3343 ;;		_fputc
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           
  3348                           ;psect for function _putch
  3349  0004                     _putch:	
  3350  0004                     l792:	
  3351                           ;incstack = 0
  3352                           ; Regs used in _putch: [wreg]
  3353                           
  3354  0004  0008               	return
  3355  0005                     __end_of_putch:	
  3356                           
  3357                           	psect	text10
  3358  0F78                     __ptext10:	
  3359 ;; *************** function _abs *****************
  3360 ;; Defined at:
  3361 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;  a               2    3[COMMON] int 
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;		None
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  2    3[COMMON] int 
  3368 ;; Registers used:
  3369 ;;		wreg, status,2, status,0
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3375 ;;      Params:         2       0       0       0       0       0       0       0
  3376 ;;      Locals:         0       0       0       0       0       0       0       0
  3377 ;;      Temps:          2       0       0       0       0       0       0       0
  3378 ;;      Totals:         4       0       0       0       0       0       0       0
  3379 ;;Total ram usage:        4 bytes
  3380 ;; Hardware stack levels used:    1
  3381 ;; This function calls:
  3382 ;;		Nothing
  3383 ;; This function is called by:
  3384 ;;		_dtoa
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388                           
  3389                           ;psect for function _abs
  3390  0F78                     _abs:	
  3391  0F78                     l1328:	
  3392                           ;incstack = 0
  3393                           ; Regs used in _abs: [wreg+status,2+status,0]
  3394                           
  3395  0F78  0874               	movf	abs@a+1,w
  3396  0F79  3A80               	xorlw	128
  3397  0F7A  00F5               	movwf	??_abs
  3398  0F7B  3080               	movlw	128
  3399  0F7C  0275               	subwf	??_abs,w
  3400  0F7D  1D03               	skipz
  3401  0F7E  2F81               	goto	u845
  3402  0F7F  3001               	movlw	1
  3403  0F80  0273               	subwf	abs@a,w
  3404  0F81                     u845:	
  3405  0F81  1803               	skipnc
  3406  0F82  2F84               	goto	u841
  3407  0F83  2F85               	goto	u840
  3408  0F84                     u841:	
  3409  0F84  2F91               	goto	l759
  3410  0F85                     u840:	
  3411  0F85                     l1330:	
  3412  0F85  0973               	comf	abs@a,w
  3413  0F86  00F5               	movwf	??_abs
  3414  0F87  0974               	comf	abs@a+1,w
  3415  0F88  00F6               	movwf	??_abs+1
  3416  0F89  0AF5               	incf	??_abs,f
  3417  0F8A  1903               	skipnz
  3418  0F8B  0AF6               	incf	??_abs+1,f
  3419  0F8C  0875               	movf	??_abs,w
  3420  0F8D  00F3               	movwf	?_abs
  3421  0F8E  0876               	movf	??_abs+1,w
  3422  0F8F  00F4               	movwf	?_abs+1
  3423  0F90  2F91               	goto	l762
  3424  0F91                     l759:	
  3425  0F91                     l762:	
  3426  0F91  0008               	return
  3427  0F92                     __end_of_abs:	
  3428                           
  3429                           	psect	text11
  3430  031D                     __ptext11:	
  3431 ;; *************** function ___aomod *****************
  3432 ;; Defined at:
  3433 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;  divisor         8    0[BANK0 ] long long 
  3436 ;;  dividend        8    8[BANK0 ] long long 
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;  sign            1    2[COMMON] unsigned char 
  3439 ;;  counter         1    1[COMMON] unsigned char 
  3440 ;; Return value:  Size  Location     Type
  3441 ;;                  8    0[BANK0 ] long long 
  3442 ;; Registers used:
  3443 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3444 ;; Tracked objects:
  3445 ;;		On entry : 0/0
  3446 ;;		On exit  : 0/0
  3447 ;;		Unchanged: 0/0
  3448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3449 ;;      Params:         0      16       0       0       0       0       0       0
  3450 ;;      Locals:         2       0       0       0       0       0       0       0
  3451 ;;      Temps:          1       0       0       0       0       0       0       0
  3452 ;;      Totals:         3      16       0       0       0       0       0       0
  3453 ;;Total ram usage:       19 bytes
  3454 ;; Hardware stack levels used:    1
  3455 ;; This function calls:
  3456 ;;		Nothing
  3457 ;; This function is called by:
  3458 ;;		_dtoa
  3459 ;; This function uses a non-reentrant model
  3460 ;;
  3461                           
  3462                           
  3463                           ;psect for function ___aomod
  3464  031D                     ___aomod:	
  3465  031D                     l1370:	
  3466                           ;incstack = 0
  3467                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  3468                           
  3469  031D  01F2               	clrf	___aomod@sign
  3470  031E                     l1372:	
  3471  031E  3028               	movlw	low ___aomod@dividend
  3472  031F  0086               	movwf	6
  3473  0320  3000               	movlw	high ___aomod@dividend
  3474  0321  0087               	movwf	7
  3475  0322  3F47               	moviw [7]fsr1
  3476  0323  00F0               	movwf	??___aomod
  3477  0324  1FF0               	btfss	??___aomod,7
  3478  0325  2B27               	goto	u961
  3479  0326  2B28               	goto	u960
  3480  0327                     u961:	
  3481  0327  2B49               	goto	l1376
  3482  0328                     u960:	
  3483  0328                     l1374:	
  3484  0328  0020               	movlb	0	; select bank0
  3485  0329  09A8               	comf	___aomod@dividend,f
  3486  032A  09A9               	comf	___aomod@dividend+1,f
  3487  032B  09AA               	comf	___aomod@dividend+2,f
  3488  032C  09AB               	comf	___aomod@dividend+3,f
  3489  032D  09AC               	comf	___aomod@dividend+4,f
  3490  032E  09AD               	comf	___aomod@dividend+5,f
  3491  032F  09AE               	comf	___aomod@dividend+6,f
  3492  0330  09AF               	comf	___aomod@dividend+7,f
  3493  0331  0AA8               	incf	___aomod@dividend,f
  3494  0332  1D03               	skipz
  3495  0333  2B47               	goto	u97lld
  3496  0334  0AA9               	incf	___aomod@dividend+1,f
  3497  0335  1D03               	skipz
  3498  0336  2B47               	goto	u97lld
  3499  0337  0AAA               	incf	___aomod@dividend+2,f
  3500  0338  1D03               	skipz
  3501  0339  2B47               	goto	u97lld
  3502  033A  0AAB               	incf	___aomod@dividend+3,f
  3503  033B  1D03               	skipz
  3504  033C  2B47               	goto	u97lld
  3505  033D  0AAC               	incf	___aomod@dividend+4,f
  3506  033E  1D03               	skipz
  3507  033F  2B47               	goto	u97lld
  3508  0340  0AAD               	incf	___aomod@dividend+5,f
  3509  0341  1D03               	skipz
  3510  0342  2B47               	goto	u97lld
  3511  0343  0AAE               	incf	___aomod@dividend+6,f
  3512  0344  1D03               	skipz
  3513  0345  2B47               	goto	u97lld
  3514  0346  0AAF               	incf	___aomod@dividend+7,f
  3515  0347                     u97lld:	
  3516  0347  01F2               	clrf	___aomod@sign
  3517  0348  0AF2               	incf	___aomod@sign,f
  3518  0349                     l1376:	
  3519  0349  3020               	movlw	low ___aomod@divisor
  3520  034A  0086               	movwf	6
  3521  034B  3000               	movlw	high ___aomod@divisor
  3522  034C  0087               	movwf	7
  3523  034D  3F47               	moviw [7]fsr1
  3524  034E  00F0               	movwf	??___aomod
  3525  034F  1FF0               	btfss	??___aomod,7
  3526  0350  2B52               	goto	u981
  3527  0351  2B53               	goto	u980
  3528  0352                     u981:	
  3529  0352  2B72               	goto	l1380
  3530  0353                     u980:	
  3531  0353                     l1378:	
  3532  0353  0020               	movlb	0	; select bank0
  3533  0354  09A0               	comf	___aomod@divisor,f
  3534  0355  09A1               	comf	___aomod@divisor+1,f
  3535  0356  09A2               	comf	___aomod@divisor+2,f
  3536  0357  09A3               	comf	___aomod@divisor+3,f
  3537  0358  09A4               	comf	___aomod@divisor+4,f
  3538  0359  09A5               	comf	___aomod@divisor+5,f
  3539  035A  09A6               	comf	___aomod@divisor+6,f
  3540  035B  09A7               	comf	___aomod@divisor+7,f
  3541  035C  0AA0               	incf	___aomod@divisor,f
  3542  035D  1D03               	skipz
  3543  035E  2B72               	goto	u99lld
  3544  035F  0AA1               	incf	___aomod@divisor+1,f
  3545  0360  1D03               	skipz
  3546  0361  2B72               	goto	u99lld
  3547  0362  0AA2               	incf	___aomod@divisor+2,f
  3548  0363  1D03               	skipz
  3549  0364  2B72               	goto	u99lld
  3550  0365  0AA3               	incf	___aomod@divisor+3,f
  3551  0366  1D03               	skipz
  3552  0367  2B72               	goto	u99lld
  3553  0368  0AA4               	incf	___aomod@divisor+4,f
  3554  0369  1D03               	skipz
  3555  036A  2B72               	goto	u99lld
  3556  036B  0AA5               	incf	___aomod@divisor+5,f
  3557  036C  1D03               	skipz
  3558  036D  2B72               	goto	u99lld
  3559  036E  0AA6               	incf	___aomod@divisor+6,f
  3560  036F  1D03               	skipz
  3561  0370  2B72               	goto	u99lld
  3562  0371  0AA7               	incf	___aomod@divisor+7,f
  3563  0372                     u99lld:	
  3564  0372                     l1380:	
  3565  0372  0020               	movlb	0	; select bank0
  3566  0373  0820               	movf	___aomod@divisor,w
  3567  0374  0421               	iorwf	___aomod@divisor+1,w
  3568  0375  0422               	iorwf	___aomod@divisor+2,w
  3569  0376  0423               	iorwf	___aomod@divisor+3,w
  3570  0377  0424               	iorwf	___aomod@divisor+4,w
  3571  0378  0425               	iorwf	___aomod@divisor+5,w
  3572  0379  0426               	iorwf	___aomod@divisor+6,w
  3573  037A  0427               	iorwf	___aomod@divisor+7,w
  3574  037B  1903               	skipnz
  3575  037C  2B7E               	goto	u1001
  3576  037D  2B7F               	goto	u1000
  3577  037E                     u1001:	
  3578  037E  2BD2               	goto	l1396
  3579  037F                     u1000:	
  3580  037F                     l1382:	
  3581  037F  01F1               	clrf	___aomod@counter
  3582  0380  0AF1               	incf	___aomod@counter,f
  3583  0381  2B8E               	goto	l1388
  3584  0382                     l1384:	
  3585  0382  35A0               	lslf	___aomod@divisor,f
  3586  0383  0DA1               	rlf	___aomod@divisor+1,f
  3587  0384  0DA2               	rlf	___aomod@divisor+2,f
  3588  0385  0DA3               	rlf	___aomod@divisor+3,f
  3589  0386  0DA4               	rlf	___aomod@divisor+4,f
  3590  0387  0DA5               	rlf	___aomod@divisor+5,f
  3591  0388  0DA6               	rlf	___aomod@divisor+6,f
  3592  0389  0DA7               	rlf	___aomod@divisor+7,f
  3593  038A                     l1386:	
  3594  038A  3001               	movlw	1
  3595  038B  00F0               	movwf	??___aomod
  3596  038C  0870               	movf	??___aomod,w
  3597  038D  07F1               	addwf	___aomod@counter,f
  3598  038E                     l1388:	
  3599  038E  1FA7               	btfss	___aomod@divisor+7,7
  3600  038F  2B91               	goto	u1011
  3601  0390  2B92               	goto	u1010
  3602  0391                     u1011:	
  3603  0391  2B82               	goto	l1384
  3604  0392                     u1010:	
  3605  0392                     l1390:	
  3606  0392  0827               	movf	___aomod@divisor+7,w
  3607  0393  022F               	subwf	___aomod@dividend+7,w
  3608  0394  1D03               	skipz
  3609  0395  2BB0               	goto	u1025
  3610  0396  0826               	movf	___aomod@divisor+6,w
  3611  0397  022E               	subwf	___aomod@dividend+6,w
  3612  0398  1D03               	skipz
  3613  0399  2BB0               	goto	u1025
  3614  039A  0825               	movf	___aomod@divisor+5,w
  3615  039B  022D               	subwf	___aomod@dividend+5,w
  3616  039C  1D03               	skipz
  3617  039D  2BB0               	goto	u1025
  3618  039E  0824               	movf	___aomod@divisor+4,w
  3619  039F  022C               	subwf	___aomod@dividend+4,w
  3620  03A0  1D03               	skipz
  3621  03A1  2BB0               	goto	u1025
  3622  03A2  0823               	movf	___aomod@divisor+3,w
  3623  03A3  022B               	subwf	___aomod@dividend+3,w
  3624  03A4  1D03               	skipz
  3625  03A5  2BB0               	goto	u1025
  3626  03A6  0822               	movf	___aomod@divisor+2,w
  3627  03A7  022A               	subwf	___aomod@dividend+2,w
  3628  03A8  1D03               	skipz
  3629  03A9  2BB0               	goto	u1025
  3630  03AA  0821               	movf	___aomod@divisor+1,w
  3631  03AB  0229               	subwf	___aomod@dividend+1,w
  3632  03AC  1D03               	skipz
  3633  03AD  2BB0               	goto	u1025
  3634  03AE  0820               	movf	___aomod@divisor,w
  3635  03AF  0228               	subwf	___aomod@dividend,w
  3636  03B0                     u1025:	
  3637  03B0  1C03               	skipc
  3638  03B1  2BB3               	goto	u1021
  3639  03B2  2BB4               	goto	u1020
  3640  03B3                     u1021:	
  3641  03B3  2BC4               	goto	l1394
  3642  03B4                     u1020:	
  3643  03B4                     l1392:	
  3644  03B4  0820               	movf	___aomod@divisor,w
  3645  03B5  02A8               	subwf	___aomod@dividend,f
  3646  03B6  0821               	movf	___aomod@divisor+1,w
  3647  03B7  3BA9               	subwfb	___aomod@dividend+1,f
  3648  03B8  0822               	movf	___aomod@divisor+2,w
  3649  03B9  3BAA               	subwfb	___aomod@dividend+2,f
  3650  03BA  0823               	movf	___aomod@divisor+3,w
  3651  03BB  3BAB               	subwfb	___aomod@dividend+3,f
  3652  03BC  0824               	movf	___aomod@divisor+4,w
  3653  03BD  3BAC               	subwfb	___aomod@dividend+4,f
  3654  03BE  0825               	movf	___aomod@divisor+5,w
  3655  03BF  3BAD               	subwfb	___aomod@dividend+5,f
  3656  03C0  0826               	movf	___aomod@divisor+6,w
  3657  03C1  3BAE               	subwfb	___aomod@dividend+6,f
  3658  03C2  0827               	movf	___aomod@divisor+7,w
  3659  03C3  3BAF               	subwfb	___aomod@dividend+7,f
  3660  03C4                     l1394:	
  3661  03C4  36A7               	lsrf	___aomod@divisor+7,f
  3662  03C5  0CA6               	rrf	___aomod@divisor+6,f
  3663  03C6  0CA5               	rrf	___aomod@divisor+5,f
  3664  03C7  0CA4               	rrf	___aomod@divisor+4,f
  3665  03C8  0CA3               	rrf	___aomod@divisor+3,f
  3666  03C9  0CA2               	rrf	___aomod@divisor+2,f
  3667  03CA  0CA1               	rrf	___aomod@divisor+1,f
  3668  03CB  0CA0               	rrf	___aomod@divisor,f
  3669  03CC  3001               	movlw	1
  3670  03CD  02F1               	subwf	___aomod@counter,f
  3671  03CE  1D03               	btfss	3,2
  3672  03CF  2BD1               	goto	u1031
  3673  03D0  2BD2               	goto	u1030
  3674  03D1                     u1031:	
  3675  03D1  2B92               	goto	l1390
  3676  03D2                     u1030:	
  3677  03D2                     l1396:	
  3678  03D2  0872               	movf	___aomod@sign,w
  3679  03D3  1903               	btfsc	3,2
  3680  03D4  2BD6               	goto	u1041
  3681  03D5  2BD7               	goto	u1040
  3682  03D6                     u1041:	
  3683  03D6  2BF5               	goto	l418
  3684  03D7                     u1040:	
  3685  03D7                     l1398:	
  3686  03D7  09A8               	comf	___aomod@dividend,f
  3687  03D8  09A9               	comf	___aomod@dividend+1,f
  3688  03D9  09AA               	comf	___aomod@dividend+2,f
  3689  03DA  09AB               	comf	___aomod@dividend+3,f
  3690  03DB  09AC               	comf	___aomod@dividend+4,f
  3691  03DC  09AD               	comf	___aomod@dividend+5,f
  3692  03DD  09AE               	comf	___aomod@dividend+6,f
  3693  03DE  09AF               	comf	___aomod@dividend+7,f
  3694  03DF  0AA8               	incf	___aomod@dividend,f
  3695  03E0  1D03               	skipz
  3696  03E1  2BF5               	goto	u105lld
  3697  03E2  0AA9               	incf	___aomod@dividend+1,f
  3698  03E3  1D03               	skipz
  3699  03E4  2BF5               	goto	u105lld
  3700  03E5  0AAA               	incf	___aomod@dividend+2,f
  3701  03E6  1D03               	skipz
  3702  03E7  2BF5               	goto	u105lld
  3703  03E8  0AAB               	incf	___aomod@dividend+3,f
  3704  03E9  1D03               	skipz
  3705  03EA  2BF5               	goto	u105lld
  3706  03EB  0AAC               	incf	___aomod@dividend+4,f
  3707  03EC  1D03               	skipz
  3708  03ED  2BF5               	goto	u105lld
  3709  03EE  0AAD               	incf	___aomod@dividend+5,f
  3710  03EF  1D03               	skipz
  3711  03F0  2BF5               	goto	u105lld
  3712  03F1  0AAE               	incf	___aomod@dividend+6,f
  3713  03F2  1D03               	skipz
  3714  03F3  2BF5               	goto	u105lld
  3715  03F4  0AAF               	incf	___aomod@dividend+7,f
  3716  03F5                     u105lld:	
  3717  03F5                     l418:	
  3718  03F5  0020               	movlb	0	; select bank0
  3719  03F6  0828               	movf	___aomod@dividend,w
  3720  03F7  00A0               	movwf	?___aomod
  3721  03F8  0829               	movf	___aomod@dividend+1,w
  3722  03F9  00A1               	movwf	?___aomod+1
  3723  03FA  082A               	movf	___aomod@dividend+2,w
  3724  03FB  00A2               	movwf	?___aomod+2
  3725  03FC  082B               	movf	___aomod@dividend+3,w
  3726  03FD  00A3               	movwf	?___aomod+3
  3727  03FE  082C               	movf	___aomod@dividend+4,w
  3728  03FF  00A4               	movwf	?___aomod+4
  3729  0400  082D               	movf	___aomod@dividend+5,w
  3730  0401  00A5               	movwf	?___aomod+5
  3731  0402  082E               	movf	___aomod@dividend+6,w
  3732  0403  00A6               	movwf	?___aomod+6
  3733  0404  082F               	movf	___aomod@dividend+7,w
  3734  0405  00A7               	movwf	?___aomod+7
  3735  0406                     l419:	
  3736  0406  0008               	return
  3737  0407                     __end_of___aomod:	
  3738                           
  3739                           	psect	text12
  3740  0407                     __ptext12:	
  3741 ;; *************** function ___aodiv *****************
  3742 ;; Defined at:
  3743 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;  divisor         8    0[BANK0 ] long long 
  3746 ;;  dividend        8    8[BANK0 ] long long 
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;  quotient        8    3[COMMON] long long 
  3749 ;;  sign            1    2[COMMON] unsigned char 
  3750 ;;  counter         1    1[COMMON] unsigned char 
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  8    0[BANK0 ] long long 
  3753 ;; Registers used:
  3754 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3760 ;;      Params:         0      16       0       0       0       0       0       0
  3761 ;;      Locals:        10       0       0       0       0       0       0       0
  3762 ;;      Temps:          1       0       0       0       0       0       0       0
  3763 ;;      Totals:        11      16       0       0       0       0       0       0
  3764 ;;Total ram usage:       27 bytes
  3765 ;; Hardware stack levels used:    1
  3766 ;; This function calls:
  3767 ;;		Nothing
  3768 ;; This function is called by:
  3769 ;;		_dtoa
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773                           
  3774                           ;psect for function ___aodiv
  3775  0407                     ___aodiv:	
  3776  0407                     l1332:	
  3777                           ;incstack = 0
  3778                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  3779                           
  3780  0407  01F2               	clrf	___aodiv@sign
  3781  0408                     l1334:	
  3782  0408  3020               	movlw	low ___aodiv@divisor
  3783  0409  0086               	movwf	6
  3784  040A  3000               	movlw	high ___aodiv@divisor
  3785  040B  0087               	movwf	7
  3786  040C  3F47               	moviw [7]fsr1
  3787  040D  00F0               	movwf	??___aodiv
  3788  040E  1FF0               	btfss	??___aodiv,7
  3789  040F  2C11               	goto	u851
  3790  0410  2C12               	goto	u850
  3791  0411                     u851:	
  3792  0411  2C33               	goto	l1338
  3793  0412                     u850:	
  3794  0412                     l1336:	
  3795  0412  0020               	movlb	0	; select bank0
  3796  0413  09A0               	comf	___aodiv@divisor,f
  3797  0414  09A1               	comf	___aodiv@divisor+1,f
  3798  0415  09A2               	comf	___aodiv@divisor+2,f
  3799  0416  09A3               	comf	___aodiv@divisor+3,f
  3800  0417  09A4               	comf	___aodiv@divisor+4,f
  3801  0418  09A5               	comf	___aodiv@divisor+5,f
  3802  0419  09A6               	comf	___aodiv@divisor+6,f
  3803  041A  09A7               	comf	___aodiv@divisor+7,f
  3804  041B  0AA0               	incf	___aodiv@divisor,f
  3805  041C  1D03               	skipz
  3806  041D  2C31               	goto	u86lld
  3807  041E  0AA1               	incf	___aodiv@divisor+1,f
  3808  041F  1D03               	skipz
  3809  0420  2C31               	goto	u86lld
  3810  0421  0AA2               	incf	___aodiv@divisor+2,f
  3811  0422  1D03               	skipz
  3812  0423  2C31               	goto	u86lld
  3813  0424  0AA3               	incf	___aodiv@divisor+3,f
  3814  0425  1D03               	skipz
  3815  0426  2C31               	goto	u86lld
  3816  0427  0AA4               	incf	___aodiv@divisor+4,f
  3817  0428  1D03               	skipz
  3818  0429  2C31               	goto	u86lld
  3819  042A  0AA5               	incf	___aodiv@divisor+5,f
  3820  042B  1D03               	skipz
  3821  042C  2C31               	goto	u86lld
  3822  042D  0AA6               	incf	___aodiv@divisor+6,f
  3823  042E  1D03               	skipz
  3824  042F  2C31               	goto	u86lld
  3825  0430  0AA7               	incf	___aodiv@divisor+7,f
  3826  0431                     u86lld:	
  3827  0431  01F2               	clrf	___aodiv@sign
  3828  0432  0AF2               	incf	___aodiv@sign,f
  3829  0433                     l1338:	
  3830  0433  3028               	movlw	low ___aodiv@dividend
  3831  0434  0086               	movwf	6
  3832  0435  3000               	movlw	high ___aodiv@dividend
  3833  0436  0087               	movwf	7
  3834  0437  3F47               	moviw [7]fsr1
  3835  0438  00F0               	movwf	??___aodiv
  3836  0439  1FF0               	btfss	??___aodiv,7
  3837  043A  2C3C               	goto	u871
  3838  043B  2C3D               	goto	u870
  3839  043C                     u871:	
  3840  043C  2C60               	goto	l1344
  3841  043D                     u870:	
  3842  043D                     l1340:	
  3843  043D  0020               	movlb	0	; select bank0
  3844  043E  09A8               	comf	___aodiv@dividend,f
  3845  043F  09A9               	comf	___aodiv@dividend+1,f
  3846  0440  09AA               	comf	___aodiv@dividend+2,f
  3847  0441  09AB               	comf	___aodiv@dividend+3,f
  3848  0442  09AC               	comf	___aodiv@dividend+4,f
  3849  0443  09AD               	comf	___aodiv@dividend+5,f
  3850  0444  09AE               	comf	___aodiv@dividend+6,f
  3851  0445  09AF               	comf	___aodiv@dividend+7,f
  3852  0446  0AA8               	incf	___aodiv@dividend,f
  3853  0447  1D03               	skipz
  3854  0448  2C5C               	goto	u88lld
  3855  0449  0AA9               	incf	___aodiv@dividend+1,f
  3856  044A  1D03               	skipz
  3857  044B  2C5C               	goto	u88lld
  3858  044C  0AAA               	incf	___aodiv@dividend+2,f
  3859  044D  1D03               	skipz
  3860  044E  2C5C               	goto	u88lld
  3861  044F  0AAB               	incf	___aodiv@dividend+3,f
  3862  0450  1D03               	skipz
  3863  0451  2C5C               	goto	u88lld
  3864  0452  0AAC               	incf	___aodiv@dividend+4,f
  3865  0453  1D03               	skipz
  3866  0454  2C5C               	goto	u88lld
  3867  0455  0AAD               	incf	___aodiv@dividend+5,f
  3868  0456  1D03               	skipz
  3869  0457  2C5C               	goto	u88lld
  3870  0458  0AAE               	incf	___aodiv@dividend+6,f
  3871  0459  1D03               	skipz
  3872  045A  2C5C               	goto	u88lld
  3873  045B  0AAF               	incf	___aodiv@dividend+7,f
  3874  045C                     u88lld:	
  3875  045C                     l1342:	
  3876  045C  3001               	movlw	1
  3877  045D  00F0               	movwf	??___aodiv
  3878  045E  0870               	movf	??___aodiv,w
  3879  045F  06F2               	xorwf	___aodiv@sign,f
  3880  0460                     l1344:	
  3881  0460  3073               	movlw	low ___aodiv@quotient
  3882  0461  0086               	movwf	6
  3883  0462  3000               	movlw	high ___aodiv@quotient
  3884  0463  0087               	movwf	7
  3885  0464  3008               	movlw	8
  3886  0465  00F0               	movwf	??___aodiv
  3887  0466  3000               	movlw	0
  3888  0467                     u890:	
  3889  0467  001E               	movwi fsr1++
  3890  0468  0BF0               	decfsz	??___aodiv,f
  3891  0469  2C67               	goto	u890
  3892  046A                     l1346:	
  3893  046A  0020               	movlb	0	; select bank0
  3894  046B  0820               	movf	___aodiv@divisor,w
  3895  046C  0421               	iorwf	___aodiv@divisor+1,w
  3896  046D  0422               	iorwf	___aodiv@divisor+2,w
  3897  046E  0423               	iorwf	___aodiv@divisor+3,w
  3898  046F  0424               	iorwf	___aodiv@divisor+4,w
  3899  0470  0425               	iorwf	___aodiv@divisor+5,w
  3900  0471  0426               	iorwf	___aodiv@divisor+6,w
  3901  0472  0427               	iorwf	___aodiv@divisor+7,w
  3902  0473  1903               	skipnz
  3903  0474  2C76               	goto	u901
  3904  0475  2C77               	goto	u900
  3905  0476                     u901:	
  3906  0476  2CD3               	goto	l1366
  3907  0477                     u900:	
  3908  0477                     l1348:	
  3909  0477  01F1               	clrf	___aodiv@counter
  3910  0478  0AF1               	incf	___aodiv@counter,f
  3911  0479  2C86               	goto	l1354
  3912  047A                     l1350:	
  3913  047A  35A0               	lslf	___aodiv@divisor,f
  3914  047B  0DA1               	rlf	___aodiv@divisor+1,f
  3915  047C  0DA2               	rlf	___aodiv@divisor+2,f
  3916  047D  0DA3               	rlf	___aodiv@divisor+3,f
  3917  047E  0DA4               	rlf	___aodiv@divisor+4,f
  3918  047F  0DA5               	rlf	___aodiv@divisor+5,f
  3919  0480  0DA6               	rlf	___aodiv@divisor+6,f
  3920  0481  0DA7               	rlf	___aodiv@divisor+7,f
  3921  0482                     l1352:	
  3922  0482  3001               	movlw	1
  3923  0483  00F0               	movwf	??___aodiv
  3924  0484  0870               	movf	??___aodiv,w
  3925  0485  07F1               	addwf	___aodiv@counter,f
  3926  0486                     l1354:	
  3927  0486  1FA7               	btfss	___aodiv@divisor+7,7
  3928  0487  2C89               	goto	u911
  3929  0488  2C8A               	goto	u910
  3930  0489                     u911:	
  3931  0489  2C7A               	goto	l1350
  3932  048A                     u910:	
  3933  048A                     l1356:	
  3934  048A  35F3               	lslf	___aodiv@quotient,f
  3935  048B  0DF4               	rlf	___aodiv@quotient+1,f
  3936  048C  0DF5               	rlf	___aodiv@quotient+2,f
  3937  048D  0DF6               	rlf	___aodiv@quotient+3,f
  3938  048E  0DF7               	rlf	___aodiv@quotient+4,f
  3939  048F  0DF8               	rlf	___aodiv@quotient+5,f
  3940  0490  0DF9               	rlf	___aodiv@quotient+6,f
  3941  0491  0DFA               	rlf	___aodiv@quotient+7,f
  3942  0492                     l1358:	
  3943  0492  0827               	movf	___aodiv@divisor+7,w
  3944  0493  022F               	subwf	___aodiv@dividend+7,w
  3945  0494  1D03               	skipz
  3946  0495  2CB0               	goto	u925
  3947  0496  0826               	movf	___aodiv@divisor+6,w
  3948  0497  022E               	subwf	___aodiv@dividend+6,w
  3949  0498  1D03               	skipz
  3950  0499  2CB0               	goto	u925
  3951  049A  0825               	movf	___aodiv@divisor+5,w
  3952  049B  022D               	subwf	___aodiv@dividend+5,w
  3953  049C  1D03               	skipz
  3954  049D  2CB0               	goto	u925
  3955  049E  0824               	movf	___aodiv@divisor+4,w
  3956  049F  022C               	subwf	___aodiv@dividend+4,w
  3957  04A0  1D03               	skipz
  3958  04A1  2CB0               	goto	u925
  3959  04A2  0823               	movf	___aodiv@divisor+3,w
  3960  04A3  022B               	subwf	___aodiv@dividend+3,w
  3961  04A4  1D03               	skipz
  3962  04A5  2CB0               	goto	u925
  3963  04A6  0822               	movf	___aodiv@divisor+2,w
  3964  04A7  022A               	subwf	___aodiv@dividend+2,w
  3965  04A8  1D03               	skipz
  3966  04A9  2CB0               	goto	u925
  3967  04AA  0821               	movf	___aodiv@divisor+1,w
  3968  04AB  0229               	subwf	___aodiv@dividend+1,w
  3969  04AC  1D03               	skipz
  3970  04AD  2CB0               	goto	u925
  3971  04AE  0820               	movf	___aodiv@divisor,w
  3972  04AF  0228               	subwf	___aodiv@dividend,w
  3973  04B0                     u925:	
  3974  04B0  1C03               	skipc
  3975  04B1  2CB3               	goto	u921
  3976  04B2  2CB4               	goto	u920
  3977  04B3                     u921:	
  3978  04B3  2CC5               	goto	l1364
  3979  04B4                     u920:	
  3980  04B4                     l1360:	
  3981  04B4  0820               	movf	___aodiv@divisor,w
  3982  04B5  02A8               	subwf	___aodiv@dividend,f
  3983  04B6  0821               	movf	___aodiv@divisor+1,w
  3984  04B7  3BA9               	subwfb	___aodiv@dividend+1,f
  3985  04B8  0822               	movf	___aodiv@divisor+2,w
  3986  04B9  3BAA               	subwfb	___aodiv@dividend+2,f
  3987  04BA  0823               	movf	___aodiv@divisor+3,w
  3988  04BB  3BAB               	subwfb	___aodiv@dividend+3,f
  3989  04BC  0824               	movf	___aodiv@divisor+4,w
  3990  04BD  3BAC               	subwfb	___aodiv@dividend+4,f
  3991  04BE  0825               	movf	___aodiv@divisor+5,w
  3992  04BF  3BAD               	subwfb	___aodiv@dividend+5,f
  3993  04C0  0826               	movf	___aodiv@divisor+6,w
  3994  04C1  3BAE               	subwfb	___aodiv@dividend+6,f
  3995  04C2  0827               	movf	___aodiv@divisor+7,w
  3996  04C3  3BAF               	subwfb	___aodiv@dividend+7,f
  3997  04C4                     l1362:	
  3998  04C4  1473               	bsf	___aodiv@quotient,0
  3999  04C5                     l1364:	
  4000  04C5  36A7               	lsrf	___aodiv@divisor+7,f
  4001  04C6  0CA6               	rrf	___aodiv@divisor+6,f
  4002  04C7  0CA5               	rrf	___aodiv@divisor+5,f
  4003  04C8  0CA4               	rrf	___aodiv@divisor+4,f
  4004  04C9  0CA3               	rrf	___aodiv@divisor+3,f
  4005  04CA  0CA2               	rrf	___aodiv@divisor+2,f
  4006  04CB  0CA1               	rrf	___aodiv@divisor+1,f
  4007  04CC  0CA0               	rrf	___aodiv@divisor,f
  4008  04CD  3001               	movlw	1
  4009  04CE  02F1               	subwf	___aodiv@counter,f
  4010  04CF  1D03               	btfss	3,2
  4011  04D0  2CD2               	goto	u931
  4012  04D1  2CD3               	goto	u930
  4013  04D2                     u931:	
  4014  04D2  2C8A               	goto	l1356
  4015  04D3                     u930:	
  4016  04D3                     l1366:	
  4017  04D3  0872               	movf	___aodiv@sign,w
  4018  04D4  1903               	btfsc	3,2
  4019  04D5  2CD7               	goto	u941
  4020  04D6  2CD8               	goto	u940
  4021  04D7                     u941:	
  4022  04D7  2CF6               	goto	l405
  4023  04D8                     u940:	
  4024  04D8                     l1368:	
  4025  04D8  09F3               	comf	___aodiv@quotient,f
  4026  04D9  09F4               	comf	___aodiv@quotient+1,f
  4027  04DA  09F5               	comf	___aodiv@quotient+2,f
  4028  04DB  09F6               	comf	___aodiv@quotient+3,f
  4029  04DC  09F7               	comf	___aodiv@quotient+4,f
  4030  04DD  09F8               	comf	___aodiv@quotient+5,f
  4031  04DE  09F9               	comf	___aodiv@quotient+6,f
  4032  04DF  09FA               	comf	___aodiv@quotient+7,f
  4033  04E0  0AF3               	incf	___aodiv@quotient,f
  4034  04E1  1D03               	skipz
  4035  04E2  2CF6               	goto	u95lld
  4036  04E3  0AF4               	incf	___aodiv@quotient+1,f
  4037  04E4  1D03               	skipz
  4038  04E5  2CF6               	goto	u95lld
  4039  04E6  0AF5               	incf	___aodiv@quotient+2,f
  4040  04E7  1D03               	skipz
  4041  04E8  2CF6               	goto	u95lld
  4042  04E9  0AF6               	incf	___aodiv@quotient+3,f
  4043  04EA  1D03               	skipz
  4044  04EB  2CF6               	goto	u95lld
  4045  04EC  0AF7               	incf	___aodiv@quotient+4,f
  4046  04ED  1D03               	skipz
  4047  04EE  2CF6               	goto	u95lld
  4048  04EF  0AF8               	incf	___aodiv@quotient+5,f
  4049  04F0  1D03               	skipz
  4050  04F1  2CF6               	goto	u95lld
  4051  04F2  0AF9               	incf	___aodiv@quotient+6,f
  4052  04F3  1D03               	skipz
  4053  04F4  2CF6               	goto	u95lld
  4054  04F5  0AFA               	incf	___aodiv@quotient+7,f
  4055  04F6                     u95lld:	
  4056  04F6                     l405:	
  4057  04F6  0873               	movf	___aodiv@quotient,w
  4058  04F7  0020               	movlb	0	; select bank0
  4059  04F8  00A0               	movwf	?___aodiv
  4060  04F9  0874               	movf	___aodiv@quotient+1,w
  4061  04FA  00A1               	movwf	?___aodiv+1
  4062  04FB  0875               	movf	___aodiv@quotient+2,w
  4063  04FC  00A2               	movwf	?___aodiv+2
  4064  04FD  0876               	movf	___aodiv@quotient+3,w
  4065  04FE  00A3               	movwf	?___aodiv+3
  4066  04FF  0877               	movf	___aodiv@quotient+4,w
  4067  0500  00A4               	movwf	?___aodiv+4
  4068  0501  0878               	movf	___aodiv@quotient+5,w
  4069  0502  00A5               	movwf	?___aodiv+5
  4070  0503  0879               	movf	___aodiv@quotient+6,w
  4071  0504  00A6               	movwf	?___aodiv+6
  4072  0505  087A               	movf	___aodiv@quotient+7,w
  4073  0506  00A7               	movwf	?___aodiv+7
  4074  0507                     l406:	
  4075  0507  0008               	return
  4076  0508                     __end_of___aodiv:	
  4077                           
  4078                           	psect	text13
  4079  0F48                     __ptext13:	
  4080 ;; *************** function _LCDWriteString *****************
  4081 ;; Defined at:
  4082 ;;		line 85 in file "CVRlcd.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;  str             2    3[COMMON] PTR unsigned char 
  4085 ;;		 -> STR_9(16), STR_8(9), STR_7(40), STR_6(45), 
  4086 ;;		 -> b(50), STR_4(10), STR_3(16), STR_2(14), 
  4087 ;;		 -> STR_1(13), 
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;		None
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  1    wreg      void 
  4092 ;; Registers used:
  4093 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4099 ;;      Params:         2       0       0       0       0       0       0       0
  4100 ;;      Locals:         0       0       0       0       0       0       0       0
  4101 ;;      Temps:          1       0       0       0       0       0       0       0
  4102 ;;      Totals:         3       0       0       0       0       0       0       0
  4103 ;;Total ram usage:        3 bytes
  4104 ;; Hardware stack levels used:    1
  4105 ;; Hardware stack levels required when called:    1
  4106 ;; This function calls:
  4107 ;;		_LCDWriteChar
  4108 ;; This function is called by:
  4109 ;;		_main
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           
  4114                           ;psect for function _LCDWriteString
  4115  0F48                     _LCDWriteString:	
  4116  0F48                     l1598:	
  4117                           ;incstack = 0
  4118                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4119                           
  4120                           
  4121                           ;CVRlcd.c: 86:     while (*str) {
  4122  0F48  2F55               	goto	l1604
  4123  0F49                     l1600:	
  4124                           
  4125                           ;CVRlcd.c: 87:         LCDWriteChar(*str++);
  4126  0F49  0873               	movf	LCDWriteString@str,w
  4127  0F4A  0084               	movwf	4
  4128  0F4B  0874               	movf	LCDWriteString@str+1,w
  4129  0F4C  0085               	movwf	5
  4130  0F4D  0800               	movf	0,w	;code access
  4131  0F4E  3181  21BB  318F   	fcall	_LCDWriteChar
  4132  0F51                     l1602:	
  4133  0F51  3001               	movlw	1
  4134  0F52  07F3               	addwf	LCDWriteString@str,f
  4135  0F53  3000               	movlw	0
  4136  0F54  3DF4               	addwfc	LCDWriteString@str+1,f
  4137  0F55                     l1604:	
  4138                           
  4139                           ;CVRlcd.c: 86:     while (*str) {
  4140  0F55  0873               	movf	LCDWriteString@str,w
  4141  0F56  0084               	movwf	4
  4142  0F57  0874               	movf	LCDWriteString@str+1,w
  4143  0F58  0085               	movwf	5
  4144  0F59  0012               	moviw fsr0++
  4145  0F5A  1D03               	btfss	3,2
  4146  0F5B  2F5D               	goto	u1431
  4147  0F5C  2F5E               	goto	u1430
  4148  0F5D                     u1431:	
  4149  0F5D  2F49               	goto	l1600
  4150  0F5E                     u1430:	
  4151  0F5E                     l63:	
  4152  0F5E  0008               	return
  4153  0F5F                     __end_of_LCDWriteString:	
  4154                           
  4155                           	psect	text14
  4156  0F92                     __ptext14:	
  4157 ;; *************** function _LCDSetCursor *****************
  4158 ;; Defined at:
  4159 ;;		line 92 in file "CVRlcd.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  row             1    wreg     unsigned char 
  4162 ;;  column          1    3[COMMON] unsigned char 
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;  row             1    6[COMMON] unsigned char 
  4165 ;;  address         1    5[COMMON] unsigned char 
  4166 ;; Return value:  Size  Location     Type
  4167 ;;                  1    wreg      void 
  4168 ;; Registers used:
  4169 ;;		wreg, status,2, status,0, pclath, cstack
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 0/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4175 ;;      Params:         1       0       0       0       0       0       0       0
  4176 ;;      Locals:         2       0       0       0       0       0       0       0
  4177 ;;      Temps:          1       0       0       0       0       0       0       0
  4178 ;;      Totals:         4       0       0       0       0       0       0       0
  4179 ;;Total ram usage:        4 bytes
  4180 ;; Hardware stack levels used:    1
  4181 ;; Hardware stack levels required when called:    1
  4182 ;; This function calls:
  4183 ;;		_LCDCommand
  4184 ;; This function is called by:
  4185 ;;		_main
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           
  4190                           ;psect for function _LCDSetCursor
  4191  0F92                     _LCDSetCursor:	
  4192                           
  4193                           ;incstack = 0
  4194                           ; Regs used in _LCDSetCursor: [wreg+status,2+status,0+pclath+cstack]
  4195                           ;LCDSetCursor@row stored from wreg
  4196  0F92  00F6               	movwf	LCDSetCursor@row
  4197  0F93                     l1588:	
  4198                           
  4199                           ;CVRlcd.c: 93:     unsigned char address;;CVRlcd.c: 96:     if (row == 1) {
  4200  0F93  0376               	decf	LCDSetCursor@row,w
  4201  0F94  1D03               	btfss	3,2
  4202  0F95  2F97               	goto	u1411
  4203  0F96  2F98               	goto	u1410
  4204  0F97                     u1411:	
  4205  0F97  2F9E               	goto	l1592
  4206  0F98                     u1410:	
  4207  0F98                     l1590:	
  4208                           
  4209                           ;CVRlcd.c: 97:         address = 0x80 + (column - 1);
  4210  0F98  0873               	movf	LCDSetCursor@column,w
  4211  0F99  3E7F               	addlw	127
  4212  0F9A  00F4               	movwf	??_LCDSetCursor
  4213  0F9B  0874               	movf	??_LCDSetCursor,w
  4214  0F9C  00F5               	movwf	LCDSetCursor@address
  4215                           
  4216                           ;CVRlcd.c: 98:     } else if (row == 2) {
  4217  0F9D  2FA9               	goto	l1596
  4218  0F9E                     l1592:	
  4219  0F9E  3002               	movlw	2
  4220  0F9F  0676               	xorwf	LCDSetCursor@row,w
  4221  0FA0  1D03               	btfss	3,2
  4222  0FA1  2FA3               	goto	u1421
  4223  0FA2  2FA4               	goto	u1420
  4224  0FA3                     u1421:	
  4225  0FA3  2FA9               	goto	l1596
  4226  0FA4                     u1420:	
  4227  0FA4                     l1594:	
  4228                           
  4229                           ;CVRlcd.c: 99:         address = 0xC0 + (column - 1);
  4230  0FA4  0873               	movf	LCDSetCursor@column,w
  4231  0FA5  3EBF               	addlw	191
  4232  0FA6  00F4               	movwf	??_LCDSetCursor
  4233  0FA7  0874               	movf	??_LCDSetCursor,w
  4234  0FA8  00F5               	movwf	LCDSetCursor@address
  4235  0FA9                     l1596:	
  4236                           
  4237                           ;CVRlcd.c: 103:     LCDCommand(address);
  4238  0FA9  0875               	movf	LCDSetCursor@address,w
  4239  0FAA  3181  2134  318F   	fcall	_LCDCommand
  4240  0FAD                     l69:	
  4241  0FAD  0008               	return
  4242  0FAE                     __end_of_LCDSetCursor:	
  4243                           
  4244                           	psect	text15
  4245  0F23                     __ptext15:	
  4246 ;; *************** function _LCDScrollRight *****************
  4247 ;; Defined at:
  4248 ;;		line 112 in file "CVRlcd.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;		None
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;		None
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  1    wreg      void 
  4255 ;; Registers used:
  4256 ;;		wreg, status,2, status,0, pclath, cstack
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4262 ;;      Params:         0       0       0       0       0       0       0       0
  4263 ;;      Locals:         0       0       0       0       0       0       0       0
  4264 ;;      Temps:          0       0       0       0       0       0       0       0
  4265 ;;      Totals:         0       0       0       0       0       0       0       0
  4266 ;;Total ram usage:        0 bytes
  4267 ;; Hardware stack levels used:    1
  4268 ;; Hardware stack levels required when called:    1
  4269 ;; This function calls:
  4270 ;;		_LCDCommand
  4271 ;; This function is called by:
  4272 ;;		_main
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           
  4277                           ;psect for function _LCDScrollRight
  4278  0F23                     _LCDScrollRight:	
  4279  0F23                     l1624:	
  4280                           ;incstack = 0
  4281                           ; Regs used in _LCDScrollRight: [wreg+status,2+status,0+pclath+cstack]
  4282                           
  4283                           
  4284                           ;CVRlcd.c: 113:     LCDCommand(0x1C);
  4285  0F23  301C               	movlw	28
  4286  0F24  3181  2134  318F   	fcall	_LCDCommand
  4287  0F27                     l75:	
  4288  0F27  0008               	return
  4289  0F28                     __end_of_LCDScrollRight:	
  4290                           
  4291                           	psect	text16
  4292  0F1E                     __ptext16:	
  4293 ;; *************** function _LCDScrollLeft *****************
  4294 ;; Defined at:
  4295 ;;		line 107 in file "CVRlcd.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;		None
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;		None
  4300 ;; Return value:  Size  Location     Type
  4301 ;;                  1    wreg      void 
  4302 ;; Registers used:
  4303 ;;		wreg, status,2, status,0, pclath, cstack
  4304 ;; Tracked objects:
  4305 ;;		On entry : 0/0
  4306 ;;		On exit  : 0/0
  4307 ;;		Unchanged: 0/0
  4308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4309 ;;      Params:         0       0       0       0       0       0       0       0
  4310 ;;      Locals:         0       0       0       0       0       0       0       0
  4311 ;;      Temps:          0       0       0       0       0       0       0       0
  4312 ;;      Totals:         0       0       0       0       0       0       0       0
  4313 ;;Total ram usage:        0 bytes
  4314 ;; Hardware stack levels used:    1
  4315 ;; Hardware stack levels required when called:    1
  4316 ;; This function calls:
  4317 ;;		_LCDCommand
  4318 ;; This function is called by:
  4319 ;;		_main
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           
  4324                           ;psect for function _LCDScrollLeft
  4325  0F1E                     _LCDScrollLeft:	
  4326  0F1E                     l1622:	
  4327                           ;incstack = 0
  4328                           ; Regs used in _LCDScrollLeft: [wreg+status,2+status,0+pclath+cstack]
  4329                           
  4330                           
  4331                           ;CVRlcd.c: 108:     LCDCommand(0x18);
  4332  0F1E  3018               	movlw	24
  4333  0F1F  3181  2134  318F   	fcall	_LCDCommand
  4334  0F22                     l72:	
  4335  0F22  0008               	return
  4336  0F23                     __end_of_LCDScrollLeft:	
  4337                           
  4338                           	psect	text17
  4339  0FD6                     __ptext17:	
  4340 ;; *************** function _LCDInit *****************
  4341 ;; Defined at:
  4342 ;;		line 13 in file "CVRlcd.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;		None
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;		None
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  1    wreg      void 
  4349 ;; Registers used:
  4350 ;;		wreg, status,2, status,0, pclath, cstack
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4356 ;;      Params:         0       0       0       0       0       0       0       0
  4357 ;;      Locals:         0       0       0       0       0       0       0       0
  4358 ;;      Temps:          1       0       0       0       0       0       0       0
  4359 ;;      Totals:         1       0       0       0       0       0       0       0
  4360 ;;Total ram usage:        1 bytes
  4361 ;; Hardware stack levels used:    1
  4362 ;; Hardware stack levels required when called:    1
  4363 ;; This function calls:
  4364 ;;		_LCDCommand
  4365 ;; This function is called by:
  4366 ;;		_main
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           
  4371                           ;psect for function _LCDInit
  4372  0FD6                     _LCDInit:	
  4373  0FD6                     l1554:	
  4374                           ;incstack = 0
  4375                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
  4376                           
  4377                           
  4378                           ;CVRlcd.c: 15:     TRISBbits.TRISB5 = 0;
  4379  0FD6  0021               	movlb	1	; select bank1
  4380  0FD7  128D               	bcf	13,5	;volatile
  4381                           
  4382                           ;CVRlcd.c: 16:     TRISBbits.TRISB4 = 0;
  4383  0FD8  120D               	bcf	13,4	;volatile
  4384                           
  4385                           ;CVRlcd.c: 17:     TRISBbits.TRISB3 = 0;
  4386  0FD9  118D               	bcf	13,3	;volatile
  4387                           
  4388                           ;CVRlcd.c: 18:     TRISBbits.TRISB2 = 0;
  4389  0FDA  110D               	bcf	13,2	;volatile
  4390                           
  4391                           ;CVRlcd.c: 19:     TRISBbits.TRISB1 = 0;
  4392  0FDB  108D               	bcf	13,1	;volatile
  4393                           
  4394                           ;CVRlcd.c: 20:     TRISBbits.TRISB0 = 0;
  4395  0FDC  100D               	bcf	13,0	;volatile
  4396  0FDD                     l1556:	
  4397                           
  4398                           ;CVRlcd.c: 23:     _delay((unsigned long)((20)*(20000000/4000.0)));
  4399  0FDD  3082               	movlw	130
  4400  0FDE  00F3               	movwf	??_LCDInit
  4401  0FDF  30DE               	movlw	222
  4402  0FE0                     u1567:	
  4403  0FE0  0B89               	decfsz	9,f
  4404  0FE1  2FE0               	goto	u1567
  4405  0FE2  0BF3               	decfsz	??_LCDInit,f
  4406  0FE3  2FE0               	goto	u1567
  4407  0FE4                     l1558:	
  4408                           
  4409                           ;CVRlcd.c: 24:     LCDCommand(0x02);
  4410  0FE4  3002               	movlw	2
  4411  0FE5  3181  2134  318F   	fcall	_LCDCommand
  4412  0FE8                     l1560:	
  4413                           
  4414                           ;CVRlcd.c: 25:     LCDCommand(0x28);
  4415  0FE8  3028               	movlw	40
  4416  0FE9  3181  2134  318F   	fcall	_LCDCommand
  4417  0FEC                     l1562:	
  4418                           
  4419                           ;CVRlcd.c: 26:     LCDCommand(0x0C);
  4420  0FEC  300C               	movlw	12
  4421  0FED  3181  2134  318F   	fcall	_LCDCommand
  4422  0FF0                     l1564:	
  4423                           
  4424                           ;CVRlcd.c: 27:     LCDCommand(0x06);
  4425  0FF0  3006               	movlw	6
  4426  0FF1  3181  2134  318F   	fcall	_LCDCommand
  4427  0FF4                     l1566:	
  4428                           
  4429                           ;CVRlcd.c: 28:     LCDCommand(0x01);
  4430  0FF4  3001               	movlw	1
  4431  0FF5  3181  2134  318F   	fcall	_LCDCommand
  4432  0FF8                     l1568:	
  4433                           
  4434                           ;CVRlcd.c: 29:     _delay((unsigned long)((2)*(20000000/4000.0)));
  4435  0FF8  300D               	movlw	13
  4436  0FF9  00F3               	movwf	??_LCDInit
  4437  0FFA  30FC               	movlw	252
  4438  0FFB                     u1577:	
  4439  0FFB  0B89               	decfsz	9,f
  4440  0FFC  2FFB               	goto	u1577
  4441  0FFD  0BF3               	decfsz	??_LCDInit,f
  4442  0FFE  2FFB               	goto	u1577
  4443  0FFF                     l51:	
  4444  0FFF  0008               	return
  4445  1000                     __end_of_LCDInit:	
  4446                           
  4447                           	psect	text18
  4448  005B                     __ptext18:	
  4449 ;; *************** function _LCDCreateChar *****************
  4450 ;; Defined at:
  4451 ;;		line 125 in file "CVRlcd.c"
  4452 ;; Parameters:    Size  Location     Type
  4453 ;;  location        1    wreg     unsigned char 
  4454 ;;  charmap         1    3[COMMON] PTR unsigned char 
  4455 ;;		 -> bluetoothChar(8), 
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;  location        1    5[COMMON] unsigned char 
  4458 ;;  i               2    6[COMMON] int 
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  1    wreg      void 
  4461 ;; Registers used:
  4462 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4468 ;;      Params:         1       0       0       0       0       0       0       0
  4469 ;;      Locals:         3       0       0       0       0       0       0       0
  4470 ;;      Temps:          1       0       0       0       0       0       0       0
  4471 ;;      Totals:         5       0       0       0       0       0       0       0
  4472 ;;Total ram usage:        5 bytes
  4473 ;; Hardware stack levels used:    1
  4474 ;; Hardware stack levels required when called:    1
  4475 ;; This function calls:
  4476 ;;		_LCDCommand
  4477 ;;		_LCDWriteChar
  4478 ;; This function is called by:
  4479 ;;		_main
  4480 ;; This function uses a non-reentrant model
  4481 ;;
  4482                           
  4483                           
  4484                           ;psect for function _LCDCreateChar
  4485  005B                     _LCDCreateChar:	
  4486                           
  4487                           ;incstack = 0
  4488                           ; Regs used in _LCDCreateChar: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4489                           ;LCDCreateChar@location stored from wreg
  4490  005B  00F5               	movwf	LCDCreateChar@location
  4491  005C                     l1570:	
  4492                           
  4493                           ;CVRlcd.c: 126:     location &= 0x07;
  4494  005C  3007               	movlw	7
  4495  005D  00F4               	movwf	??_LCDCreateChar
  4496  005E  0874               	movf	??_LCDCreateChar,w
  4497  005F  05F5               	andwf	LCDCreateChar@location,f
  4498  0060                     l1572:	
  4499                           
  4500                           ;CVRlcd.c: 127:     LCDCommand(0x40 | (location << 3));
  4501  0060  0875               	movf	LCDCreateChar@location,w
  4502  0061  00F4               	movwf	??_LCDCreateChar
  4503  0062  3002               	movlw	2
  4504  0063                     u1395:	
  4505  0063  35F4               	lslf	??_LCDCreateChar,f
  4506  0064  3EFF               	addlw	-1
  4507  0065  1D03               	skipz
  4508  0066  2863               	goto	u1395
  4509  0067  3574               	lslf	??_LCDCreateChar,w
  4510  0068  3840               	iorlw	64
  4511  0069  3181  2134  3180   	fcall	_LCDCommand
  4512  006C                     l1574:	
  4513                           
  4514                           ;CVRlcd.c: 129:     for (int i = 0; i < 8; i++) {
  4515  006C  01F6               	clrf	LCDCreateChar@i
  4516  006D  01F7               	clrf	LCDCreateChar@i+1
  4517  006E                     l1580:	
  4518                           
  4519                           ;CVRlcd.c: 130:         LCDWriteChar(charmap[i]);
  4520  006E  0876               	movf	LCDCreateChar@i,w
  4521  006F  0773               	addwf	LCDCreateChar@charmap,w
  4522  0070  00F4               	movwf	??_LCDCreateChar
  4523  0071  0874               	movf	??_LCDCreateChar,w
  4524  0072  0086               	movwf	6
  4525  0073  0187               	clrf	7
  4526  0074  0801               	movf	1,w
  4527  0075  3181  21BB  3180   	fcall	_LCDWriteChar
  4528  0078                     l1582:	
  4529                           
  4530                           ;CVRlcd.c: 131:     }
  4531  0078  3001               	movlw	1
  4532  0079  07F6               	addwf	LCDCreateChar@i,f
  4533  007A  3000               	movlw	0
  4534  007B  3DF7               	addwfc	LCDCreateChar@i+1,f
  4535  007C                     l1584:	
  4536  007C  0877               	movf	LCDCreateChar@i+1,w
  4537  007D  3A80               	xorlw	128
  4538  007E  00F4               	movwf	??_LCDCreateChar
  4539  007F  3080               	movlw	128
  4540  0080  0274               	subwf	??_LCDCreateChar,w
  4541  0081  1D03               	skipz
  4542  0082  2885               	goto	u1405
  4543  0083  3008               	movlw	8
  4544  0084  0276               	subwf	LCDCreateChar@i,w
  4545  0085                     u1405:	
  4546  0085  1C03               	skipc
  4547  0086  2888               	goto	u1401
  4548  0087  2889               	goto	u1400
  4549  0088                     u1401:	
  4550  0088  286E               	goto	l1580
  4551  0089                     u1400:	
  4552  0089                     l1586:	
  4553                           
  4554                           ;CVRlcd.c: 132:     LCDCommand(0x80);
  4555  0089  3080               	movlw	128
  4556  008A  3181  2134  3180   	fcall	_LCDCommand
  4557  008D                     l80:	
  4558  008D  0008               	return
  4559  008E                     __end_of_LCDCreateChar:	
  4560                           
  4561                           	psect	text19
  4562  01BB                     __ptext19:	
  4563 ;; *************** function _LCDWriteChar *****************
  4564 ;; Defined at:
  4565 ;;		line 60 in file "CVRlcd.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;  data            1    wreg     unsigned char 
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;  data            1    2[COMMON] unsigned char 
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  1    wreg      void 
  4572 ;; Registers used:
  4573 ;;		wreg, status,2, status,0
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4579 ;;      Params:         0       0       0       0       0       0       0       0
  4580 ;;      Locals:         1       0       0       0       0       0       0       0
  4581 ;;      Temps:          2       0       0       0       0       0       0       0
  4582 ;;      Totals:         3       0       0       0       0       0       0       0
  4583 ;;Total ram usage:        3 bytes
  4584 ;; Hardware stack levels used:    1
  4585 ;; This function calls:
  4586 ;;		Nothing
  4587 ;; This function is called by:
  4588 ;;		_main
  4589 ;;		_LCDWriteString
  4590 ;;		_LCDCreateChar
  4591 ;; This function uses a non-reentrant model
  4592 ;;
  4593                           
  4594                           
  4595                           ;psect for function _LCDWriteChar
  4596  01BB                     _LCDWriteChar:	
  4597                           
  4598                           ;incstack = 0
  4599                           ; Regs used in _LCDWriteChar: [wreg+status,2+status,0]
  4600                           ;LCDWriteChar@data stored from wreg
  4601  01BB  00F2               	movwf	LCDWriteChar@data
  4602  01BC                     l1502:	
  4603                           
  4604                           ;CVRlcd.c: 61:     LATBbits.LATB4 = 1;
  4605  01BC  0022               	movlb	2	; select bank2
  4606  01BD  160D               	bsf	13,4	;volatile
  4607  01BE                     l1504:	
  4608                           
  4609                           ;CVRlcd.c: 64:     LATBbits.LATB0 = (data >> 4) & 0x01;
  4610  01BE  0872               	movf	LCDWriteChar@data,w
  4611  01BF  00F0               	movwf	??_LCDWriteChar
  4612  01C0  3004               	movlw	4
  4613  01C1                     u1265:	
  4614  01C1  36F0               	lsrf	??_LCDWriteChar,f
  4615  01C2  0B89               	decfsz	9,f
  4616  01C3  29C1               	goto	u1265
  4617  01C4  3001               	movlw	1
  4618  01C5  0570               	andwf	??_LCDWriteChar,w
  4619  01C6  00F1               	movwf	??_LCDWriteChar+1
  4620  01C7  080D               	movf	13,w	;volatile
  4621  01C8  0671               	xorwf	??_LCDWriteChar+1,w
  4622  01C9  39FE               	andlw	-2
  4623  01CA  0671               	xorwf	??_LCDWriteChar+1,w
  4624  01CB  008D               	movwf	13	;volatile
  4625                           
  4626                           ;CVRlcd.c: 65:     LATBbits.LATB1 = (data >> 5) & 0x01;
  4627  01CC  0872               	movf	LCDWriteChar@data,w
  4628  01CD  00F0               	movwf	??_LCDWriteChar
  4629  01CE  3005               	movlw	5
  4630  01CF                     u1275:	
  4631  01CF  36F0               	lsrf	??_LCDWriteChar,f
  4632  01D0  0B89               	decfsz	9,f
  4633  01D1  29CF               	goto	u1275
  4634  01D2  0870               	movf	??_LCDWriteChar,w
  4635  01D3  3901               	andlw	1
  4636  01D4  00F1               	movwf	??_LCDWriteChar+1
  4637  01D5  0DF1               	rlf	??_LCDWriteChar+1,f
  4638  01D6  080D               	movf	13,w	;volatile
  4639  01D7  0671               	xorwf	??_LCDWriteChar+1,w
  4640  01D8  39FD               	andlw	-3
  4641  01D9  0671               	xorwf	??_LCDWriteChar+1,w
  4642  01DA  008D               	movwf	13	;volatile
  4643                           
  4644                           ;CVRlcd.c: 66:     LATBbits.LATB2 = (data >> 6) & 0x01;
  4645  01DB  0872               	movf	LCDWriteChar@data,w
  4646  01DC  00F0               	movwf	??_LCDWriteChar
  4647  01DD  3006               	movlw	6
  4648  01DE                     u1285:	
  4649  01DE  36F0               	lsrf	??_LCDWriteChar,f
  4650  01DF  0B89               	decfsz	9,f
  4651  01E0  29DE               	goto	u1285
  4652  01E1  0870               	movf	??_LCDWriteChar,w
  4653  01E2  3901               	andlw	1
  4654  01E3  00F1               	movwf	??_LCDWriteChar+1
  4655  01E4  0DF1               	rlf	??_LCDWriteChar+1,f
  4656  01E5  0DF1               	rlf	??_LCDWriteChar+1,f
  4657  01E6  080D               	movf	13,w	;volatile
  4658  01E7  0671               	xorwf	??_LCDWriteChar+1,w
  4659  01E8  39FB               	andlw	-5
  4660  01E9  0671               	xorwf	??_LCDWriteChar+1,w
  4661  01EA  008D               	movwf	13	;volatile
  4662                           
  4663                           ;CVRlcd.c: 67:     LATBbits.LATB3 = (data >> 7) & 0x01;
  4664  01EB  0872               	movf	LCDWriteChar@data,w
  4665  01EC  00F0               	movwf	??_LCDWriteChar
  4666  01ED  3007               	movlw	7
  4667  01EE                     u1295:	
  4668  01EE  36F0               	lsrf	??_LCDWriteChar,f
  4669  01EF  0B89               	decfsz	9,f
  4670  01F0  29EE               	goto	u1295
  4671  01F1  0870               	movf	??_LCDWriteChar,w
  4672  01F2  3901               	andlw	1
  4673  01F3  00F1               	movwf	??_LCDWriteChar+1
  4674  01F4  0DF1               	rlf	??_LCDWriteChar+1,f
  4675  01F5  0DF1               	rlf	??_LCDWriteChar+1,f
  4676  01F6  0DF1               	rlf	??_LCDWriteChar+1,f
  4677  01F7  080D               	movf	13,w	;volatile
  4678  01F8  0671               	xorwf	??_LCDWriteChar+1,w
  4679  01F9  39F7               	andlw	-9
  4680  01FA  0671               	xorwf	??_LCDWriteChar+1,w
  4681  01FB  008D               	movwf	13	;volatile
  4682  01FC                     l1506:	
  4683                           
  4684                           ;CVRlcd.c: 68:     LATBbits.LATB5 = 1;
  4685  01FC  168D               	bsf	13,5	;volatile
  4686  01FD                     l1508:	
  4687                           
  4688                           ;CVRlcd.c: 69:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  4689  01FD  3200               	nop2	;2 cycle nop
  4690  01FE  3200               	nop2	;2 cycle nop
  4691  01FF  0000               	nop
  4692  0200                     l1510:	
  4693                           
  4694                           ;CVRlcd.c: 70:     LATBbits.LATB5 = 0;
  4695  0200  0022               	movlb	2	; select bank2
  4696  0201  128D               	bcf	13,5	;volatile
  4697  0202                     l1512:	
  4698                           
  4699                           ;CVRlcd.c: 71:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  4700  0202  3200               	nop2	;2 cycle nop
  4701  0203  3200               	nop2	;2 cycle nop
  4702  0204  0000               	nop
  4703                           
  4704                           ;CVRlcd.c: 74:     LATBbits.LATB0 = data & 0x01;
  4705  0205  3001               	movlw	1
  4706  0206  0572               	andwf	LCDWriteChar@data,w
  4707  0207  00F0               	movwf	??_LCDWriteChar
  4708  0208  0022               	movlb	2	; select bank2
  4709  0209  080D               	movf	13,w	;volatile
  4710  020A  0670               	xorwf	??_LCDWriteChar,w
  4711  020B  39FE               	andlw	-2
  4712  020C  0670               	xorwf	??_LCDWriteChar,w
  4713  020D  008D               	movwf	13	;volatile
  4714                           
  4715                           ;CVRlcd.c: 75:     LATBbits.LATB1 = (data >> 1) & 0x01;
  4716  020E  3672               	lsrf	LCDWriteChar@data,w
  4717  020F  3901               	andlw	1
  4718  0210  00F0               	movwf	??_LCDWriteChar
  4719  0211  0DF0               	rlf	??_LCDWriteChar,f
  4720  0212  080D               	movf	13,w	;volatile
  4721  0213  0670               	xorwf	??_LCDWriteChar,w
  4722  0214  39FD               	andlw	-3
  4723  0215  0670               	xorwf	??_LCDWriteChar,w
  4724  0216  008D               	movwf	13	;volatile
  4725                           
  4726                           ;CVRlcd.c: 76:     LATBbits.LATB2 = (data >> 2) & 0x01;
  4727  0217  0872               	movf	LCDWriteChar@data,w
  4728  0218  00F0               	movwf	??_LCDWriteChar
  4729  0219  3002               	movlw	2
  4730  021A                     u1305:	
  4731  021A  36F0               	lsrf	??_LCDWriteChar,f
  4732  021B  0B89               	decfsz	9,f
  4733  021C  2A1A               	goto	u1305
  4734  021D  0870               	movf	??_LCDWriteChar,w
  4735  021E  3901               	andlw	1
  4736  021F  00F1               	movwf	??_LCDWriteChar+1
  4737  0220  0DF1               	rlf	??_LCDWriteChar+1,f
  4738  0221  0DF1               	rlf	??_LCDWriteChar+1,f
  4739  0222  080D               	movf	13,w	;volatile
  4740  0223  0671               	xorwf	??_LCDWriteChar+1,w
  4741  0224  39FB               	andlw	-5
  4742  0225  0671               	xorwf	??_LCDWriteChar+1,w
  4743  0226  008D               	movwf	13	;volatile
  4744                           
  4745                           ;CVRlcd.c: 77:     LATBbits.LATB3 = (data >> 3) & 0x01;
  4746  0227  0872               	movf	LCDWriteChar@data,w
  4747  0228  00F0               	movwf	??_LCDWriteChar
  4748  0229  3003               	movlw	3
  4749  022A                     u1315:	
  4750  022A  36F0               	lsrf	??_LCDWriteChar,f
  4751  022B  0B89               	decfsz	9,f
  4752  022C  2A2A               	goto	u1315
  4753  022D  0870               	movf	??_LCDWriteChar,w
  4754  022E  3901               	andlw	1
  4755  022F  00F1               	movwf	??_LCDWriteChar+1
  4756  0230  0DF1               	rlf	??_LCDWriteChar+1,f
  4757  0231  0DF1               	rlf	??_LCDWriteChar+1,f
  4758  0232  0DF1               	rlf	??_LCDWriteChar+1,f
  4759  0233  080D               	movf	13,w	;volatile
  4760  0234  0671               	xorwf	??_LCDWriteChar+1,w
  4761  0235  39F7               	andlw	-9
  4762  0236  0671               	xorwf	??_LCDWriteChar+1,w
  4763  0237  008D               	movwf	13	;volatile
  4764  0238                     l1514:	
  4765                           
  4766                           ;CVRlcd.c: 78:     LATBbits.LATB5 = 1;
  4767  0238  168D               	bsf	13,5	;volatile
  4768  0239                     l1516:	
  4769                           
  4770                           ;CVRlcd.c: 79:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  4771  0239  3200               	nop2	;2 cycle nop
  4772  023A  3200               	nop2	;2 cycle nop
  4773  023B  0000               	nop
  4774  023C                     l1518:	
  4775                           
  4776                           ;CVRlcd.c: 80:     LATBbits.LATB5 = 0;
  4777  023C  0022               	movlb	2	; select bank2
  4778  023D  128D               	bcf	13,5	;volatile
  4779  023E                     l1520:	
  4780                           
  4781                           ;CVRlcd.c: 81:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  4782  023E  3200               	nop2	;2 cycle nop
  4783  023F  3200               	nop2	;2 cycle nop
  4784  0240  0000               	nop
  4785  0241                     l57:	
  4786  0241  0008               	return
  4787  0242                     __end_of_LCDWriteChar:	
  4788                           
  4789                           	psect	text20
  4790  0F3C                     __ptext20:	
  4791 ;; *************** function _LCDClear *****************
  4792 ;; Defined at:
  4793 ;;		line 135 in file "CVRlcd.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;		None
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;		None
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  1    wreg      void 
  4800 ;; Registers used:
  4801 ;;		wreg, status,2, status,0, pclath, cstack
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4807 ;;      Params:         0       0       0       0       0       0       0       0
  4808 ;;      Locals:         0       0       0       0       0       0       0       0
  4809 ;;      Temps:          1       0       0       0       0       0       0       0
  4810 ;;      Totals:         1       0       0       0       0       0       0       0
  4811 ;;Total ram usage:        1 bytes
  4812 ;; Hardware stack levels used:    1
  4813 ;; Hardware stack levels required when called:    1
  4814 ;; This function calls:
  4815 ;;		_LCDCommand
  4816 ;; This function is called by:
  4817 ;;		_main
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           
  4822                           ;psect for function _LCDClear
  4823  0F3C                     _LCDClear:	
  4824  0F3C                     l1606:	
  4825                           ;incstack = 0
  4826                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
  4827                           
  4828                           
  4829                           ;CVRlcd.c: 136:     LCDCommand(0x01);
  4830  0F3C  3001               	movlw	1
  4831  0F3D  3181  2134  318F   	fcall	_LCDCommand
  4832  0F40                     l1608:	
  4833                           
  4834                           ;CVRlcd.c: 137:     _delay((unsigned long)((2)*(20000000/4000.0)));
  4835  0F40  300D               	movlw	13
  4836  0F41  00F3               	movwf	??_LCDClear
  4837  0F42  30FC               	movlw	252
  4838  0F43                     u1587:	
  4839  0F43  0B89               	decfsz	9,f
  4840  0F44  2F43               	goto	u1587
  4841  0F45  0BF3               	decfsz	??_LCDClear,f
  4842  0F46  2F43               	goto	u1587
  4843  0F47                     l83:	
  4844  0F47  0008               	return
  4845  0F48                     __end_of_LCDClear:	
  4846                           
  4847                           	psect	text21
  4848  0134                     __ptext21:	
  4849 ;; *************** function _LCDCommand *****************
  4850 ;; Defined at:
  4851 ;;		line 33 in file "CVRlcd.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;  cmd             1    wreg     unsigned char 
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;  cmd             1    2[COMMON] unsigned char 
  4856 ;; Return value:  Size  Location     Type
  4857 ;;                  1    wreg      void 
  4858 ;; Registers used:
  4859 ;;		wreg, status,2, status,0
  4860 ;; Tracked objects:
  4861 ;;		On entry : 0/0
  4862 ;;		On exit  : 0/0
  4863 ;;		Unchanged: 0/0
  4864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4865 ;;      Params:         0       0       0       0       0       0       0       0
  4866 ;;      Locals:         1       0       0       0       0       0       0       0
  4867 ;;      Temps:          2       0       0       0       0       0       0       0
  4868 ;;      Totals:         3       0       0       0       0       0       0       0
  4869 ;;Total ram usage:        3 bytes
  4870 ;; Hardware stack levels used:    1
  4871 ;; This function calls:
  4872 ;;		Nothing
  4873 ;; This function is called by:
  4874 ;;		_LCDInit
  4875 ;;		_LCDSetCursor
  4876 ;;		_LCDScrollLeft
  4877 ;;		_LCDScrollRight
  4878 ;;		_LCDCreateChar
  4879 ;;		_LCDClear
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           
  4884                           ;psect for function _LCDCommand
  4885  0134                     _LCDCommand:	
  4886                           
  4887                           ;incstack = 0
  4888                           ; Regs used in _LCDCommand: [wreg+status,2+status,0]
  4889                           ;LCDCommand@cmd stored from wreg
  4890  0134  00F2               	movwf	LCDCommand@cmd
  4891  0135                     l1522:	
  4892                           
  4893                           ;CVRlcd.c: 34:     LATBbits.LATB4 = 0;
  4894  0135  0022               	movlb	2	; select bank2
  4895  0136  120D               	bcf	13,4	;volatile
  4896  0137                     l1524:	
  4897                           
  4898                           ;CVRlcd.c: 37:     LATBbits.LATB0 = (cmd >> 4) & 0x01;
  4899  0137  0872               	movf	LCDCommand@cmd,w
  4900  0138  00F0               	movwf	??_LCDCommand
  4901  0139  3004               	movlw	4
  4902  013A                     u1325:	
  4903  013A  36F0               	lsrf	??_LCDCommand,f
  4904  013B  0B89               	decfsz	9,f
  4905  013C  293A               	goto	u1325
  4906  013D  3001               	movlw	1
  4907  013E  0570               	andwf	??_LCDCommand,w
  4908  013F  00F1               	movwf	??_LCDCommand+1
  4909  0140  080D               	movf	13,w	;volatile
  4910  0141  0671               	xorwf	??_LCDCommand+1,w
  4911  0142  39FE               	andlw	-2
  4912  0143  0671               	xorwf	??_LCDCommand+1,w
  4913  0144  008D               	movwf	13	;volatile
  4914                           
  4915                           ;CVRlcd.c: 38:     LATBbits.LATB1 = (cmd >> 5) & 0x01;
  4916  0145  0872               	movf	LCDCommand@cmd,w
  4917  0146  00F0               	movwf	??_LCDCommand
  4918  0147  3005               	movlw	5
  4919  0148                     u1335:	
  4920  0148  36F0               	lsrf	??_LCDCommand,f
  4921  0149  0B89               	decfsz	9,f
  4922  014A  2948               	goto	u1335
  4923  014B  0870               	movf	??_LCDCommand,w
  4924  014C  3901               	andlw	1
  4925  014D  00F1               	movwf	??_LCDCommand+1
  4926  014E  0DF1               	rlf	??_LCDCommand+1,f
  4927  014F  080D               	movf	13,w	;volatile
  4928  0150  0671               	xorwf	??_LCDCommand+1,w
  4929  0151  39FD               	andlw	-3
  4930  0152  0671               	xorwf	??_LCDCommand+1,w
  4931  0153  008D               	movwf	13	;volatile
  4932                           
  4933                           ;CVRlcd.c: 39:     LATBbits.LATB2 = (cmd >> 6) & 0x01;
  4934  0154  0872               	movf	LCDCommand@cmd,w
  4935  0155  00F0               	movwf	??_LCDCommand
  4936  0156  3006               	movlw	6
  4937  0157                     u1345:	
  4938  0157  36F0               	lsrf	??_LCDCommand,f
  4939  0158  0B89               	decfsz	9,f
  4940  0159  2957               	goto	u1345
  4941  015A  0870               	movf	??_LCDCommand,w
  4942  015B  3901               	andlw	1
  4943  015C  00F1               	movwf	??_LCDCommand+1
  4944  015D  0DF1               	rlf	??_LCDCommand+1,f
  4945  015E  0DF1               	rlf	??_LCDCommand+1,f
  4946  015F  080D               	movf	13,w	;volatile
  4947  0160  0671               	xorwf	??_LCDCommand+1,w
  4948  0161  39FB               	andlw	-5
  4949  0162  0671               	xorwf	??_LCDCommand+1,w
  4950  0163  008D               	movwf	13	;volatile
  4951                           
  4952                           ;CVRlcd.c: 40:     LATBbits.LATB3 = (cmd >> 7) & 0x01;
  4953  0164  0872               	movf	LCDCommand@cmd,w
  4954  0165  00F0               	movwf	??_LCDCommand
  4955  0166  3007               	movlw	7
  4956  0167                     u1355:	
  4957  0167  36F0               	lsrf	??_LCDCommand,f
  4958  0168  0B89               	decfsz	9,f
  4959  0169  2967               	goto	u1355
  4960  016A  0870               	movf	??_LCDCommand,w
  4961  016B  3901               	andlw	1
  4962  016C  00F1               	movwf	??_LCDCommand+1
  4963  016D  0DF1               	rlf	??_LCDCommand+1,f
  4964  016E  0DF1               	rlf	??_LCDCommand+1,f
  4965  016F  0DF1               	rlf	??_LCDCommand+1,f
  4966  0170  080D               	movf	13,w	;volatile
  4967  0171  0671               	xorwf	??_LCDCommand+1,w
  4968  0172  39F7               	andlw	-9
  4969  0173  0671               	xorwf	??_LCDCommand+1,w
  4970  0174  008D               	movwf	13	;volatile
  4971  0175                     l1526:	
  4972                           
  4973                           ;CVRlcd.c: 41:     LATBbits.LATB5 = 1;
  4974  0175  168D               	bsf	13,5	;volatile
  4975  0176                     l1528:	
  4976                           
  4977                           ;CVRlcd.c: 42:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  4978  0176  3200               	nop2	;2 cycle nop
  4979  0177  3200               	nop2	;2 cycle nop
  4980  0178  0000               	nop
  4981  0179                     l1530:	
  4982                           
  4983                           ;CVRlcd.c: 43:     LATBbits.LATB5 = 0;
  4984  0179  0022               	movlb	2	; select bank2
  4985  017A  128D               	bcf	13,5	;volatile
  4986  017B                     l1532:	
  4987                           
  4988                           ;CVRlcd.c: 44:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  4989  017B  3200               	nop2	;2 cycle nop
  4990  017C  3200               	nop2	;2 cycle nop
  4991  017D  0000               	nop
  4992                           
  4993                           ;CVRlcd.c: 47:     LATBbits.LATB0 = cmd & 0x01;
  4994  017E  3001               	movlw	1
  4995  017F  0572               	andwf	LCDCommand@cmd,w
  4996  0180  00F0               	movwf	??_LCDCommand
  4997  0181  0022               	movlb	2	; select bank2
  4998  0182  080D               	movf	13,w	;volatile
  4999  0183  0670               	xorwf	??_LCDCommand,w
  5000  0184  39FE               	andlw	-2
  5001  0185  0670               	xorwf	??_LCDCommand,w
  5002  0186  008D               	movwf	13	;volatile
  5003                           
  5004                           ;CVRlcd.c: 48:     LATBbits.LATB1 = (cmd >> 1) & 0x01;
  5005  0187  3672               	lsrf	LCDCommand@cmd,w
  5006  0188  3901               	andlw	1
  5007  0189  00F0               	movwf	??_LCDCommand
  5008  018A  0DF0               	rlf	??_LCDCommand,f
  5009  018B  080D               	movf	13,w	;volatile
  5010  018C  0670               	xorwf	??_LCDCommand,w
  5011  018D  39FD               	andlw	-3
  5012  018E  0670               	xorwf	??_LCDCommand,w
  5013  018F  008D               	movwf	13	;volatile
  5014                           
  5015                           ;CVRlcd.c: 49:     LATBbits.LATB2 = (cmd >> 2) & 0x01;
  5016  0190  0872               	movf	LCDCommand@cmd,w
  5017  0191  00F0               	movwf	??_LCDCommand
  5018  0192  3002               	movlw	2
  5019  0193                     u1365:	
  5020  0193  36F0               	lsrf	??_LCDCommand,f
  5021  0194  0B89               	decfsz	9,f
  5022  0195  2993               	goto	u1365
  5023  0196  0870               	movf	??_LCDCommand,w
  5024  0197  3901               	andlw	1
  5025  0198  00F1               	movwf	??_LCDCommand+1
  5026  0199  0DF1               	rlf	??_LCDCommand+1,f
  5027  019A  0DF1               	rlf	??_LCDCommand+1,f
  5028  019B  080D               	movf	13,w	;volatile
  5029  019C  0671               	xorwf	??_LCDCommand+1,w
  5030  019D  39FB               	andlw	-5
  5031  019E  0671               	xorwf	??_LCDCommand+1,w
  5032  019F  008D               	movwf	13	;volatile
  5033                           
  5034                           ;CVRlcd.c: 50:     LATBbits.LATB3 = (cmd >> 3) & 0x01;
  5035  01A0  0872               	movf	LCDCommand@cmd,w
  5036  01A1  00F0               	movwf	??_LCDCommand
  5037  01A2  3003               	movlw	3
  5038  01A3                     u1375:	
  5039  01A3  36F0               	lsrf	??_LCDCommand,f
  5040  01A4  0B89               	decfsz	9,f
  5041  01A5  29A3               	goto	u1375
  5042  01A6  0870               	movf	??_LCDCommand,w
  5043  01A7  3901               	andlw	1
  5044  01A8  00F1               	movwf	??_LCDCommand+1
  5045  01A9  0DF1               	rlf	??_LCDCommand+1,f
  5046  01AA  0DF1               	rlf	??_LCDCommand+1,f
  5047  01AB  0DF1               	rlf	??_LCDCommand+1,f
  5048  01AC  080D               	movf	13,w	;volatile
  5049  01AD  0671               	xorwf	??_LCDCommand+1,w
  5050  01AE  39F7               	andlw	-9
  5051  01AF  0671               	xorwf	??_LCDCommand+1,w
  5052  01B0  008D               	movwf	13	;volatile
  5053  01B1                     l1534:	
  5054                           
  5055                           ;CVRlcd.c: 51:     LATBbits.LATB5 = 1;
  5056  01B1  168D               	bsf	13,5	;volatile
  5057  01B2                     l1536:	
  5058                           
  5059                           ;CVRlcd.c: 52:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  5060  01B2  3200               	nop2	;2 cycle nop
  5061  01B3  3200               	nop2	;2 cycle nop
  5062  01B4  0000               	nop
  5063  01B5                     l1538:	
  5064                           
  5065                           ;CVRlcd.c: 53:     LATBbits.LATB5 = 0;
  5066  01B5  0022               	movlb	2	; select bank2
  5067  01B6  128D               	bcf	13,5	;volatile
  5068  01B7                     l1540:	
  5069                           
  5070                           ;CVRlcd.c: 54:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  5071  01B7  3200               	nop2	;2 cycle nop
  5072  01B8  3200               	nop2	;2 cycle nop
  5073  01B9  0000               	nop
  5074  01BA                     l54:	
  5075  01BA  0008               	return
  5076  01BB                     __end_of_LCDCommand:	
  5077  007E                     btemp	set	126	;btemp
  5078  007E                     wtemp0	set	126


Data Sizes:
    Strings     175
    Constant    0
    Data        8
    BSS         90
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      80
    BANK1            80     15      59
    BANK2            80      0      50
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_5(CODE[12]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 50
		 -> b(BANK2[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 50
		 -> b(BANK2[50]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    S707_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 50
		 -> b(BANK2[50]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 50
		 -> b(BANK2[50]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_5(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_5(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    LCDCreateChar@charmap	PTR unsigned char  size(1) Largest target is 8
		 -> bluetoothChar(BANK1[8]), 

    LCDWriteString@str	PTR unsigned char  size(2) Largest target is 50
		 -> STR_9(CODE[16]), STR_8(CODE[9]), STR_7(CODE[40]), STR_6(CODE[45]), 
		 -> b(BANK2[50]), STR_4(CODE[10]), STR_3(CODE[16]), STR_2(CODE[14]), 
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _main->_sprintf
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCDWriteString->_LCDWriteChar
    _LCDSetCursor->_LCDCommand
    _LCDScrollRight->_LCDCommand
    _LCDScrollLeft->_LCDCommand
    _LCDInit->_LCDCommand
    _LCDCreateChar->_LCDCommand
    _LCDCreateChar->_LCDWriteChar
    _LCDClear->_LCDCommand

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    9570
                                             74 BANK0      2     2      0
                                              9 BANK1      6     6      0
                           _LCDClear
                      _LCDCreateChar
                            _LCDInit
                      _LCDScrollLeft
                     _LCDScrollRight
                       _LCDSetCursor
                       _LCDWriteChar
                     _LCDWriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             14    10      4    6112
                                             13 COMMON     1     1      0
                                             70 BANK0      4     0      4
                                              0 BANK1      9     9      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5804
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    5493
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4143
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2537
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       3     1      2     905
                                              3 COMMON     3     1      2
                       _LCDWriteChar
 ---------------------------------------------------------------------------------
 (1) _LCDSetCursor                                         4     3      1     972
                                              3 COMMON     4     3      1
                         _LCDCommand
 ---------------------------------------------------------------------------------
 (1) _LCDScrollRight                                       0     0      0     176
                         _LCDCommand
 ---------------------------------------------------------------------------------
 (1) _LCDScrollLeft                                        0     0      0     176
                         _LCDCommand
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              1     1      0     176
                                              3 COMMON     1     1      0
                         _LCDCommand
 ---------------------------------------------------------------------------------
 (1) _LCDCreateChar                                        5     4      1     541
                                              3 COMMON     5     4      1
                         _LCDCommand
                       _LCDWriteChar
 ---------------------------------------------------------------------------------
 (2) _LCDWriteChar                                         3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCDClear                                             1     1      0     176
                                              3 COMMON     1     1      0
                         _LCDCommand
 ---------------------------------------------------------------------------------
 (2) _LCDCommand                                           3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDClear
     _LCDCommand
   _LCDCreateChar
     _LCDCommand
     _LCDWriteChar
   _LCDInit
     _LCDCommand
   _LCDScrollLeft
     _LCDCommand
   _LCDScrollRight
     _LCDCommand
   _LCDSetCursor
     _LCDCommand
   _LCDWriteChar
   _LCDWriteString
     _LCDWriteChar
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      CB       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4C      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      F      3B       8       73.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      32      10       62.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      CB      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jul 04 09:07:41 2024

                      _b 0120              __CFG_CP$OFF 0000                       l51 0FFF  
                     l54 01BA                       l63 0F5E                       l80 008D  
                     l72 0F22                       l57 0241                       l83 0F47  
                     l75 0F27                       l69 0FAD            _LCDScrollLeft 0F1E  
                    l301 005A                      l405 04F6                      l261 0133  
                    l406 0507                      l270 0588                      l256 00F8  
                    l264 0551                      l273 05F7                      l265 055A  
                    l418 03F5                      l419 0406                      l259 011A  
                    l269 0572                      l294 031C                      l287 066A  
                    l762 0F91                      l774 00DD                      l782 0FD5  
                    l759 0F91                      l792 0004                      l789 0029  
                    l798 0F77             __CFG_CPD$OFF 0000                      u800 00E4  
                    u801 00E3                      u810 00F1                      u811 00F0  
                    u900 0477                      u740 0093                      u820 011A  
                    u901 0476                      u741 0092                      u821 0119  
                    u910 048A                      u750 0098                      u830 011F  
                    u911 0489                      u751 0097                      u831 011E  
                    u920 04B4                      u840 0F85                      u760 00A7  
                    u921 04B3                      u841 0F84                      u761 00A6  
                    u825 0116                      u930 04D3                      u850 0412  
                    u770 00C4                      u931 04D2                      u851 0411  
                    u771 00C3                      u940 04D8                      u780 0FD5  
                    u941 04D7                      u925 04B0                      u845 0F81  
                    u781 0FD4                      u870 043D                      u790 0F71  
                    u871 043C                      u775 00C0                      u791 0F70  
                    u960 0328                      u961 0327                      u890 0467  
                    u980 0353                      u981 0352                      _abs 0F78  
                    _pad 00DE             __CFG_BORV$LO 0000                      wreg 0009  
          ?_LCDSetCursor 0073             __CFG_IESO$ON 0000             __CFG_FOSC$HS 0000  
        __end_of_LCDInit 1000             __CFG_LVP$OFF 0000           _LCDScrollRight 0F23  
                   ?_abs 0073                     l1300 0F69                     l1302 0F71  
                   l1310 00EC                     l1320 010C                     l1312 00F1  
                   l1400 050A                     l1330 0F85                     l1322 011F  
                   l1314 00F6                     l1306 00E0                     l1410 0567  
                   l1402 051A                     l1340 043D                     l1332 0407  
                   l1324 0127                     l1316 00FB                     l1308 00E4  
                   l1420 058C                     l1412 056D                     l1404 052D  
                   l1510 0200                     l1502 01BC                     l1350 047A  
                   l1342 045C                     l1334 0408                     l1318 0107  
                   l1430 05CA                     l1422 058F                     l1414 057A  
                   l1406 0533                     l1520 023E                     l1512 0202  
                   l1504 01BE                     l1600 0F49                     l1360 04B4  
                   l1352 0482                     l1344 0460                     l1336 0412  
                   l1328 0F78                     l1280 00A7                     l1272 008E  
                   l1432 0605                     l1440 0632                     l1424 0594  
                   l1416 0580                     l1408 0556                     l1530 0179  
                   l1522 0135                     l1514 0238                     l1506 01FC  
                   l1602 0F51                     l1362 04C4                     l1354 0486  
                   l1346 046A                     l1338 0433                     l1370 031D  
                   l1282 00C4                     l1274 0093                     l1290 0FB3  
                   l1450 064C                     l1442 0639                     l1434 0612  
                   l1426 05C2                     l1418 0584                     l1610 0007  
                   l1540 01B7                     l1532 017B                     l1524 0137  
                   l1516 0239                     l1508 01FD                     l1604 0F55  
                   l1364 04C5                     l1356 048A                     l1348 0477  
                   l1380 0372                     l1372 031E                     l1284 00D5  
                   l1276 0098                     l1292 0FC1                     l1452 0650  
                   l1444 063D                     l1436 061F                     l1428 05C6  
                   l1460 0255                     l1612 000F                     l1700 0762  
                   l1534 01B1                     l1526 0175                     l1606 0F3C  
                   l1518 023C                     l1622 0F1E                     l1358 0492  
                   l1366 04D3                     l1390 0392                     l1382 037F  
                   l1374 0328                     l1278 009D                     l1294 0FC6  
                   l1446 0641                     l1454 0658                     l1438 062D  
                   l1470 0289                     l1462 025D                     l1550 0052  
                   l1542 002C                     l1614 0011                     l1710 0772  
                   l1702 0768                     l1630 0670                     l1536 01B2  
                   l1528 0176                     l1608 0F40                     l1560 0FE8  
                   l1624 0F23                     l1368 04D8                     l1392 03B4  
                   l1384 0382                     l1376 0349                     l1288 0FB0  
                   l1296 0F60                     l1448 0647                     l1480 02D5  
                   l1472 0291                     l1464 0263                     l1544 0030  
                   l1616 0013                     l1720 0799                     l1712 0775  
                   l1704 076F                     l1640 0699                     l1632 0679  
                   l1538 01B5                     l1570 005C                     l1562 0FEC  
                   l1554 0FD6                     l1394 03C4                     l1386 038A  
                   l1378 0353                     l1298 0F65                     l1490 02F6  
                   l1482 02DD                     l1474 02AA                     l1466 0267  
                   l1458 0244                     l1546 0034                     l1618 0020  
                   l1730 07C0                     l1722 07A6                     l1714 0782  
                   l1650 06C0                     l1642 069F                     l1634 0682  
                   l1626 066B                     l1580 006E                     l1572 0060  
                   l1564 0FF0                     l1556 0FDD                     l1388 038E  
                   l1396 03D2                     l1484 02E8                     l1468 0278  
                   l1548 0048                     l1732 07D1                     l1724 07AC  
                   l1716 0787                     l1652 06C3                     l1644 06A6  
                   l1636 0689                     l1628 066D                     l1582 0078  
                   l1574 006C                     l1566 0FF4                     l1558 0FE4  
                   l1590 0F98                     l1398 03D7                     l1478 02C4  
                   l1494 02F9                     l1734 07D4                     l1726 07B3  
                   l1718 0796                     l1670 06FA                     l1662 06D3  
                   l1654 06C9                     l1646 06AC                     l1638 0696  
                   l1584 007C                     l1568 0FF8                     l1592 0F9E  
                   l1496 0312                     l1488 02EE                     l1736 07D7  
                   l1728 07B9                     l1680 0724                     l1672 06FF  
                   l1664 06D9                     l1656 06D0                     l1648 06B3  
                   l1586 0089                     l1594 0FA4                     l1690 0731  
                   l1682 072B                     l1674 070E                     l1666 06EA  
                   l1596 0FA9                     l1588 0F93                     l1692 073E  
                   l1676 0711                     l1668 06F1                     l1598 0F48  
                   l1694 0743                     l1678 071E                     l1696 0752  
                   l1688 072E                     l1698 0755                     ?_pad 0024  
                   STR_1 1056                     STR_2 1048                     STR_3 1038  
                   STR_4 106F                     STR_5 1063                     STR_6 0800  
                   STR_7 1000                     STR_8 1079                     STR_9 1028  
                   u1000 037F                     u1001 037E                     u1010 0392  
                   u1011 0391                     u1020 03B4                     u1100 0556  
                   u1021 03B3                     u1101 0555                     u1030 03D2  
                   u1110 0567                     u1031 03D1                     u1111 0566  
                   u1040 03D7                     u1200 063D                     u1120 0580  
                   u1041 03D6                     u1025 03B0                     u1201 063C  
                   u1121 057F                     u1210 0647                     u1130 0584  
                   u1211 0646                     u1131 0583                     u1115 0563  
                   u1140 0605                     u1060 0525                     u1220 0255  
                   u1141 0604                     u1061 0523                     u1221 0254  
                   u1150 0612                     u1070 0526                     u1230 0278  
                   u1151 0611                     u1231 0277                     u1400 0089  
                   u1160 061F                     u1080 0533                     u1240 0289  
                   u1305 021A                     u1401 0088                     u1161 061E  
                   u1145 0601                     u1081 0532                     u1241 0288  
                   u1410 0F98                     u1170 062D                     u1250 02D5  
                   u1315 022A                     u1411 0F97                     u1171 062C  
                   u1251 02D4                     u1420 0FA4                     u1180 0632  
                   u1325 013A                     u1405 0085                     u1421 0FA3  
                   u1181 0631                     u1165 061B                     u1430 0F5E  
                   u1190 0639                     u1335 0148                     u1431 0F5D  
                   u1191 0638                     u1175 0629                     u1440 070E  
                   u1345 0157                     u1265 01C1                     u1441 070D  
                   u1450 0752                     u1355 0167                     u1275 01CF  
                   u1451 0751                     u1507 0717                     u1380 0052  
                   u1460 0796                     u1365 0193                     u1285 01DE  
                   u1381 0051                     u1461 0795                     u1517 0737  
                   u1445 070A                     u1375 01A3                     u1295 01EE  
                   u1527 075B                     u1455 074E                     u1465 0792  
                   u1537 077B                     u1395 0063                     u1547 079F  
                   u1557 07CA                     u1477 068F                     u1567 0FE0  
                   u1487 06B9                     u1577 0FFB                     u1497 06F5  
                   u1587 0F43             __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000  
                   abs@a 0073                     _dbuf 00A4                     _main 066B  
                   _dtoa 0508                     _prec 006C                     _nout 00A0  
                   pad@i 0027                     pad@p 0025                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   indf1 0001                     fsr1l 0006                     pad@w 0029  
                   btemp 007E            __CFG_BOREN$ON 0000                     start 0002  
        LCDSetCursor@row 0076            __CFG_MCLRE$ON 0000         __end_of_LCDClear 0F48  
                  ??_abs 0075                    ??_pad 007C            ?_LCDWriteChar 0070  
         ?_LCDScrollLeft 0070          __end_of___aodiv 0508                    ?_main 0070  
                  ?_dtoa 0030          __end_of___aomod 0407            __CFG_WDTE$OFF 0000  
           vfpfcnvrt@fmt 004E           ??_LCDSetCursor 0074                    _TRISB 008D  
        ??_LCDCreateChar 0074            __CFG_PWRTE$ON 0000                    u86lld 0431  
                  u95lld 04F6                    u88lld 045C                    u97lld 0347  
                  u99lld 0372   __end_of_LCDScrollRight 0F28      __size_of_LCDCommand 0087  
                  _flags 006E            LCDCommand@cmd 0072                    _fputc 008E  
                  _fputs 0FAE                    pad@fp 002B                    _width 00A2  
                  _putch 0004                    main@i 00D1                    dtoa@d 0030  
                  dtoa@i 004C                    dtoa@n 0044                    dtoa@p 003E  
                  dtoa@s 0042                    dtoa@w 0040                    status 0003  
                  wtemp0 007E          __end_of_sprintf 002A          __initialization 07DD  
           __end_of_main 07DD             __end_of_dtoa 066B           ??_LCDWriteChar 0070  
                 ??_main 006A                   ??_dtoa 0038                ??_LCDInit 0073  
         __CFG_PLLEN$OFF 0000           LCDCreateChar@i 0076          ?_LCDScrollRight 0070  
                 ?_fputc 0070                   ?_fputs 0078                   ?_putch 0070  
                 u105lld 03F5                   u109lld 0551           _LCDWriteString 0F48  
           vfprintf@cfmt 0064                ??___aodiv 0070                ??___aomod 0070  
        ??_LCDScrollLeft 0073                   pad@buf 0024                   dtoa@fp 003D  
                 _strlen 0F5F                   fputc@c 0070                   fputs@c 0020  
                 fputs@i 0021                   fputs@s 0023                   putch@c 0070  
       __end_of_vfprintf 005B                ??_sprintf 007D                ?_LCDClear 0070  
__end_of__initialization 07FD   __end_of_LCDWriteString 0F5F    LCDCreateChar@location 0075  
           ??_LCDCommand 0070     __end_of_LCDSetCursor 0FAE           __pcstackCOMMON 0070  
           __pidataBANK1 0F34            __end_of_fputc 00DE            __end_of_fputs 0FD6  
          __end_of_putch 0005       __end_of_LCDCommand 01BB                  ??_fputc 0073  
                ??_fputs 0079                  ??_putch 0070     __end_of_LCDWriteChar 0242  
             __pbssBANK0 006C               __pbssBANK1 00A0               __pbssBANK2 0120  
             ??_LCDClear 0073          __CFG_VCAPEN$OFF 0000          ?_LCDWriteString 0073  
             __pmaintext 066B                  ?_strlen 0070                  _LCDInit 0FD6  
     __size_of_vfpfcnvrt 00DB                  ___aodiv 0407                  ___aomod 031D  
              ?_vfprintf 005E          __CFG_STVREN$OFF 0000                  __ptext1 0005  
                __ptext2 002A                  __ptext3 0242                  __ptext4 0508  
                __ptext5 00DE                  __ptext6 0F5F                  __ptext7 0FAE  
                __ptext8 008E                  __ptext9 0004         ??_LCDScrollRight 0073  
        __size_of_strlen 0019             __size_of_abs 001A             __size_of_pad 0056  
  __end_of_LCDCreateChar 008E                  _sprintf 0005                  clrloop0 0F29  
   end_of_initialization 07FD    __size_of_LCDSetCursor 001C                  fputc@fp 0072  
                init_ram 0F2E                  fputs@fp 0078                  initloop 0F2F  
      __end_of_vfpfcnvrt 031D               ??_vfprintf 0061                  strlen@a 0073  
                strlen@s 0074        LCDWriteString@str 0073       LCDSetCursor@column 0073  
  __size_of_LCDWriteChar 0087                _TRISBbits 008D             _LCDSetCursor 0F92  
      __size_of_LCDClear 000C              vfpfcnvrt@ap 004F              vfpfcnvrt@fp 005D  
            vfpfcnvrt@ll 0055             _LCDWriteChar 01BB    __end_of_LCDScrollLeft 0F23  
         __end_of_strlen 0F78      start_initialization 07DD              __end_of_abs 0F92  
            __end_of_pad 0134         ??_LCDWriteString 0075              vfprintf@fmt 005E  
            __pdataBANK1 00D3     LCDCreateChar@charmap 0073                 ??_strlen 0072  
               ?_LCDInit 0070         LCDWriteChar@data 0072                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00C4         ___aodiv@dividend 0028  
               ?___aodiv 0020                 ?___aomod 0020         ___aodiv@quotient 0073  
      __size_of_vfprintf 0031                 ?_sprintf 0066           __size_of_fputc 0050  
         __size_of_fputs 0028           __size_of_putch 0001                 _LCDClear 0F3C  
               _LATBbits 010D                clear_ram0 0F28                _vfpfcnvrt 0242  
       __size_of_LCDInit 002A               vfprintf@ap 0060               vfprintf@fp 0063  
 __size_of_LCDCreateChar 0033         __size_of___aodiv 0101         __size_of___aomod 00EA  
             ?_vfpfcnvrt 004E          ___aodiv@divisor 0020          ___aodiv@counter 0071  
             sprintf@fmt 0066                 _dtoa$408 003B                 __ptext10 0F78  
               __ptext11 031D                 __ptext20 0F3C                 __ptext12 0407  
               __ptext21 0134                 __ptext13 0F48                 __ptext14 0F92  
               __ptext15 0F23                 __ptext16 0F1E                 __ptext17 0FD6  
               __ptext18 005B                 __ptext19 01BB  __size_of_LCDScrollRight 0005  
       __size_of_sprintf 0025            __size_of_main 0172            __size_of_dtoa 0163  
             _LCDCommand 0134                 main@i_87 00CD                 main@i_89 00CF  
               _vfprintf 002A         ___aomod@dividend 0028           __pstringtext10 0000  
          _LCDCreateChar 005B                sprintf@ap 00C6   __size_of_LCDScrollLeft 0005  
      __CFG_CLKOUTEN$OFF 0000          ___aomod@divisor 0020            _bluetoothChar 00D3  
            ??_vfpfcnvrt 0050          ___aomod@counter 0071            __pstringtext1 0800  
          __pstringtext2 1000            __pstringtext3 1028            __pstringtext4 1038  
          __pstringtext5 1048            __pstringtext6 1056            __pstringtext7 1063  
          __pstringtext8 106F            __pstringtext9 1079                 sprintf@f 00C8  
               sprintf@s 00C7           ?_LCDCreateChar 0073             ___aodiv@sign 0072  
    LCDSetCursor@address 0075             ___aomod@sign 0072              ?_LCDCommand 0070  
__size_of_LCDWriteString 0017  
